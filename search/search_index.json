{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"PhotoPrism: Browse Your Life in Pictures \u00b6 PhotoPrism\u2122 is a server-based application for browsing, organizing and sharing your personal photo collection. It makes use of the latest technologies to automatically tag and find pictures without getting in your way. Say goodbye to solutions that force you to upload your visual memories to the cloud. What to expect... \u00b6 clearly structured Web interface for browsing, organizing and sharing your personal photo collection import everything without worrying about duplicates or RAW to JPEG conversion reverse geocoding, XMP support and automated tagging based on Google TensorFlow Try our demo \u00b6 You're welcome to play with the demo at demo.photoprism.org . Leave your email to get a release notification . For the early birds \u00b6 Step-by-step installation instructions can be found in Getting Started - all you need is a Web browser and Docker to run the server. It is available for Mac, Linux and Windows. Next, you'll have to index or import existing files. Please be patient, this will take a while depending on the size of your library. Already indexed photos can be browsed in Photos while videos show up in Videos . Counts are continuously updated in the navigation. If photos are missing, they might be in review due to low quality or missing metadata. You can turn this and other features off in Settings , depending on your specific use case.","title":"Introduction"},{"location":"#photoprism-browse-your-life-in-pictures","text":"PhotoPrism\u2122 is a server-based application for browsing, organizing and sharing your personal photo collection. It makes use of the latest technologies to automatically tag and find pictures without getting in your way. Say goodbye to solutions that force you to upload your visual memories to the cloud.","title":"PhotoPrism: Browse Your Life in Pictures"},{"location":"#what-to-expect","text":"clearly structured Web interface for browsing, organizing and sharing your personal photo collection import everything without worrying about duplicates or RAW to JPEG conversion reverse geocoding, XMP support and automated tagging based on Google TensorFlow","title":"What to expect..."},{"location":"#try-our-demo","text":"You're welcome to play with the demo at demo.photoprism.org . Leave your email to get a release notification .","title":"Try our demo"},{"location":"#for-the-early-birds","text":"Step-by-step installation instructions can be found in Getting Started - all you need is a Web browser and Docker to run the server. It is available for Mac, Linux and Windows. Next, you'll have to index or import existing files. Please be patient, this will take a while depending on the size of your library. Already indexed photos can be browsed in Photos while videos show up in Videos . Counts are continuously updated in the navigation. If photos are missing, they might be in review due to low quality or missing metadata. You can turn this and other features off in Settings , depending on your specific use case.","title":"For the early birds"},{"location":"contact/","text":"Whatever it is, we'd love to hear from you! \u00b6 Feel free to use the chat or send an e-mail to hello@photoprism.org if you have questions, want to support our work, or just want to say hello. Responsible for editorial content according to \u00a7 5 TMG / \u00a7 55 RStV: Michael Mayer Zimmermannstr. 37 12163 Berlin Germany USt-ID: DE189758973 Trademarks \u00b6 PhotoPrism\u2122 is a registered trademark of Michael Mayer. You may use it as required to describe our software, run your own server, for educational purposes, but not for offering commercial goods, products, or services without prior written permission. In other words, please ask. Disclaimer \u00b6 We are not marketing specialists but developers who work a lot and enjoy a bit of sarcasm from time to time. Please let us know when there is an issue with our \"nuance and tone\", and we'll find a solution. Privacy Policy \u00b6 If you\u2019re just browsing the website, GitHub collects the same basic information that most websites collect. They use common internet technologies, such as cookies and web server logs. They collect this basic information from everybody, whether they have an account or not. The information they collect about all visitors includes: the visitor\u2019s browser type language preference referring site the date and time of each visitor request They also collect potentially personally-identifying information like Internet Protocol (IP) addresses. See Privacy Statement and DMCA Takedown Policy .","title":"Contact"},{"location":"contact/#whatever-it-is-wed-love-to-hear-from-you","text":"Feel free to use the chat or send an e-mail to hello@photoprism.org if you have questions, want to support our work, or just want to say hello. Responsible for editorial content according to \u00a7 5 TMG / \u00a7 55 RStV: Michael Mayer Zimmermannstr. 37 12163 Berlin Germany USt-ID: DE189758973","title":"Whatever it is, we'd love to hear from you!"},{"location":"contact/#trademarks","text":"PhotoPrism\u2122 is a registered trademark of Michael Mayer. You may use it as required to describe our software, run your own server, for educational purposes, but not for offering commercial goods, products, or services without prior written permission. In other words, please ask.","title":"Trademarks"},{"location":"contact/#disclaimer","text":"We are not marketing specialists but developers who work a lot and enjoy a bit of sarcasm from time to time. Please let us know when there is an issue with our \"nuance and tone\", and we'll find a solution.","title":"Disclaimer"},{"location":"contact/#privacy-policy","text":"If you\u2019re just browsing the website, GitHub collects the same basic information that most websites collect. They use common internet technologies, such as cookies and web server logs. They collect this basic information from everybody, whether they have an account or not. The information they collect about all visitors includes: the visitor\u2019s browser type language preference referring site the date and time of each visitor request They also collect potentially personally-identifying information like Internet Protocol (IP) addresses. See Privacy Statement and DMCA Takedown Policy .","title":"Privacy Policy"},{"location":"credits/","text":"Credits \u00b6 A big thank you to everyone who made this possible! Technologies \u00b6 Go , Gin and Vuetify Google TensorFlow and Material Design Complete list of 3 rd -party software packages Infrastructure \u00b6 GitHub hosts our project homepage and all repositories Travis-CI builds and tests our code multiple times a day Docker Hub hosts our container images IssueHunt is a new service for funding Open Source development Artwork \u00b6 Prism Light Separation by digitalvosem Follow that light by Margeois Gopher overlapping the TensorFlow logo was created by Takuya Ueda","title":"Credits"},{"location":"credits/#credits","text":"A big thank you to everyone who made this possible!","title":"Credits"},{"location":"credits/#technologies","text":"Go , Gin and Vuetify Google TensorFlow and Material Design Complete list of 3 rd -party software packages","title":"Technologies"},{"location":"credits/#infrastructure","text":"GitHub hosts our project homepage and all repositories Travis-CI builds and tests our code multiple times a day Docker Hub hosts our container images IssueHunt is a new service for funding Open Source development","title":"Infrastructure"},{"location":"credits/#artwork","text":"Prism Light Separation by digitalvosem Follow that light by Margeois Gopher overlapping the TensorFlow logo was created by Takuya Ueda","title":"Artwork"},{"location":"funding/","text":"Funding \u00b6 This project is about freedom and privacy but not necessarily about free beer. We feel like it would be a mistake to state there will be no costs, because clearly we have huge expenses, your server hardware will have a price tag and then maybe you'd like to have some extra features that need to be developed. It's fair to say that users with basic needs will have no monthly costs. We were also way more effective per dollar than commercial projects and learned a lot on top of it. An earlier version of this document contained a rough number, but at the end of the day it doesn't matter. Most established OSS companies make the bulk of their revenue with enterprise customers, that's why private users and single developers typically get everything for free. Obviously that doesn't work if you have only private users that refuse to share their data on top of it. Looking forward, specific solutions for funding development and maintenance could be to... sell a tested & supported version in the app store while our contributors and other developers can continue to use Docker or build from source provide additional features to users who support us financially, maybe with a different license similar to GitLab develop a one-click solution for private cloud hosting together with selected providers we trust offer a geodata, public events and maps subscription since OpenStreetMap doesn't want us to use their development API for production, which is perfectly fine Donations \u00b6 You're welcome to support us via GitHub Sponsors , especially if you have feature requests or need help with using our software. They will match every donation in the first year. In addition, you can find us on Patreon and PayPal . Our sponsors and contributors will get for free whatever we might have to charge for a geodata subscription and/or additional features later (see tiers ). Also, please leave a star on GitHub if you like this project. It provides additional motivation to keep going. Ideas backed by a sponsor are marked with a golden sponsor label. Let us know if we mistakenly label an idea as unfunded . Thank you very much! <3","title":"Funding"},{"location":"funding/#funding","text":"This project is about freedom and privacy but not necessarily about free beer. We feel like it would be a mistake to state there will be no costs, because clearly we have huge expenses, your server hardware will have a price tag and then maybe you'd like to have some extra features that need to be developed. It's fair to say that users with basic needs will have no monthly costs. We were also way more effective per dollar than commercial projects and learned a lot on top of it. An earlier version of this document contained a rough number, but at the end of the day it doesn't matter. Most established OSS companies make the bulk of their revenue with enterprise customers, that's why private users and single developers typically get everything for free. Obviously that doesn't work if you have only private users that refuse to share their data on top of it. Looking forward, specific solutions for funding development and maintenance could be to... sell a tested & supported version in the app store while our contributors and other developers can continue to use Docker or build from source provide additional features to users who support us financially, maybe with a different license similar to GitLab develop a one-click solution for private cloud hosting together with selected providers we trust offer a geodata, public events and maps subscription since OpenStreetMap doesn't want us to use their development API for production, which is perfectly fine","title":"Funding"},{"location":"funding/#donations","text":"You're welcome to support us via GitHub Sponsors , especially if you have feature requests or need help with using our software. They will match every donation in the first year. In addition, you can find us on Patreon and PayPal . Our sponsors and contributors will get for free whatever we might have to charge for a geodata subscription and/or additional features later (see tiers ). Also, please leave a star on GitHub if you like this project. It provides additional motivation to keep going. Ideas backed by a sponsor are marked with a golden sponsor label. Let us know if we mistakenly label an idea as unfunded . Thank you very much! <3","title":"Donations"},{"location":"license/","text":"GNU Affero General Public License \u00b6 Version 3, 19 November 2007 Copyright \u00a9 2007 Free Software Foundation, Inc. Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed. Preamble \u00b6 The GNU Affero General Public License is a free, copyleft license for software and other kinds of works, specifically designed to ensure cooperation with the community in the case of network server software. The licenses for most software and other practical works are designed to take away your freedom to share and change the works. By contrast, our General Public Licenses are intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users. When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things. Developers that use our General Public Licenses protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License which gives you legal permission to copy, distribute and/or modify the software. A secondary benefit of defending all users' freedom is that improvements made in alternate versions of the program, if they receive widespread use, become available for other developers to incorporate. Many developers of free software are heartened and encouraged by the resulting cooperation. However, in the case of software used on network servers, this result may fail to come about. The GNU General Public License permits making a modified version and letting the public access it on a server without ever releasing its source code to the public. The GNU Affero General Public License is designed specifically to ensure that, in such cases, the modified source code becomes available to the community. It requires the operator of a network server to provide the source code of the modified version running there to the users of that server. Therefore, public use of a modified version, on a publicly accessible server, gives the public access to the source code of the modified version. An older license, called the Affero General Public License and published by Affero, was designed to accomplish similar goals. This is a different license, not a version of the Affero GPL, but Affero has released a new version of the Affero GPL which permits relicensing under this license. The precise terms and conditions for copying, distribution and modification follow. TERMS AND CONDITIONS \u00b6 0. Definitions \u00b6 \u201cThis License\u201d refers to version 3 of the GNU Affero General Public License. \u201cCopyright\u201d also means copyright-like laws that apply to other kinds of works, such as semiconductor masks. \u201cThe Program\u201d refers to any copyrightable work licensed under this License. Each licensee is addressed as \u201cyou\u201d. \u201cLicensees\u201d and \u201crecipients\u201d may be individuals or organizations. To \u201cmodify\u201d a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy. The resulting work is called a \u201cmodified version\u201d of the earlier work or a work \u201cbased on\u201d the earlier work. A \u201ccovered work\u201d means either the unmodified Program or a work based on the Program. To \u201cpropagate\u201d a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy. Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well. To \u201cconvey\u201d a work means any kind of propagation that enables other parties to make or receive copies. Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying. An interactive user interface displays \u201cAppropriate Legal Notices\u201d to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License. If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion. 1. Source Code \u00b6 The \u201csource code\u201d for a work means the preferred form of the work for making modifications to it. \u201cObject code\u201d means any non-source form of a work. A \u201cStandard Interface\u201d means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language. The \u201cSystem Libraries\u201d of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form. A \u201cMajor Component\u201d, in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it. The \u201cCorresponding Source\u201d for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities. However, it does not include the work's System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work. For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work. The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source. The Corresponding Source for a work in source code form is that same work. 2. Basic Permissions \u00b6 All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met. This License explicitly affirms your unlimited permission to run the unmodified Program. The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work. This License acknowledges your rights of fair use or other equivalent, as provided by copyright law. You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force. You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright. Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you. Conveying under any other circumstances is permitted solely under the conditions stated below. Sublicensing is not allowed; section 10 makes it unnecessary. 3. Protecting Users' Legal Rights From Anti-Circumvention Law \u00b6 No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures. When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work's users, your or third parties' legal rights to forbid circumvention of technological measures. 4. Conveying Verbatim Copies \u00b6 You may convey verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program. You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee. 5. Conveying Modified Source Versions \u00b6 You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions: a) The work must carry prominent notices stating that you modified it, and giving a relevant date. b) The work must carry prominent notices stating that it is released under this License and any conditions added under section 7. This requirement modifies the requirement in section 4 to \u201ckeep intact all notices\u201d. c) You must license the entire work, as a whole, under this License to anyone who comes into possession of a copy. This License will therefore apply, along with any applicable section 7 additional terms, to the whole of the work, and all its parts, regardless of how they are packaged. This License gives no permission to license the work in any other way, but it does not invalidate such permission if you have separately received it. d) If the work has interactive user interfaces, each must display Appropriate Legal Notices; however, if the Program has interactive interfaces that do not display Appropriate Legal Notices, your work need not make them do so. A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an \u201caggregate\u201d if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation's users beyond what the individual works permit. Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate. 6. Conveying Non-Source Forms \u00b6 You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways: a) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by the Corresponding Source fixed on a durable physical medium customarily used for software interchange. b) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by a written offer, valid for at least three years and valid for as long as you offer spare parts or customer support for that product model, to give anyone who possesses the object code either (1) a copy of the Corresponding Source for all the software in the product that is covered by this License, on a durable physical medium customarily used for software interchange, for a price no more than your reasonable cost of physically performing this conveying of source, or (2) access to copy the Corresponding Source from a network server at no charge. c) Convey individual copies of the object code with a copy of the written offer to provide the Corresponding Source. This alternative is allowed only occasionally and noncommercially, and only if you received the object code with such an offer, in accord with subsection 6b. d) Convey the object code by offering access from a designated place (gratis or for a charge), and offer equivalent access to the Corresponding Source in the same way through the same place at no further charge. You need not require recipients to copy the Corresponding Source along with the object code. If the place to copy the object code is a network server, the Corresponding Source may be on a different server (operated by you or a third party) that supports equivalent copying facilities, provided you maintain clear directions next to the object code saying where to find the Corresponding Source. Regardless of what server hosts the Corresponding Source, you remain obligated to ensure that it is available for as long as needed to satisfy these requirements. e) Convey the object code using peer-to-peer transmission, provided you inform other peers where the object code and Corresponding Source of the work are being offered to the general public at no charge under subsection 6d. A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work. A \u201cUser Product\u201d is either (1) a \u201cconsumer product\u201d, which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling. In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage. For a particular product received by a particular user, \u201cnormally used\u201d refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product. A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product. \u201cInstallation Information\u201d for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source. The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made. If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information. But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM). The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed. Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network. Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying. 7. Additional Terms \u00b6 \u201cAdditional permissions\u201d are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law. If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions. When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it. (Additional permissions may be written to require their own removal in certain cases when you modify the work.) You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission. Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms: a) Disclaiming warranty or limiting liability differently from the terms of sections 15 and 16 of this License; or b) Requiring preservation of specified reasonable legal notices or author attributions in that material or in the Appropriate Legal Notices displayed by works containing it; or c) Prohibiting misrepresentation of the origin of that material, or requiring that modified versions of such material be marked in reasonable ways as different from the original version; or d) Limiting the use for publicity purposes of names of licensors or authors of the material; or e) Declining to grant rights under trademark law for use of some trade names, trademarks, or service marks; or f) Requiring indemnification of licensors and authors of that material by anyone who conveys the material (or modified versions of it) with contractual assumptions of liability to the recipient, for any liability that these contractual assumptions directly impose on those licensors and authors. All other non-permissive additional terms are considered \u201cfurther restrictions\u201d within the meaning of section 10. If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term. If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying. If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms. Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way. 8. Termination \u00b6 You may not propagate or modify a covered work except as expressly provided under this License. Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11). However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation. Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice. Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License. If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10. 9. Acceptance Not Required for Having Copies \u00b6 You are not required to accept this License in order to receive or run a copy of the Program. Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance. However, nothing other than this License grants you permission to propagate or modify any covered work. These actions infringe copyright if you do not accept this License. Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so. 10. Automatic Licensing of Downstream Recipients \u00b6 Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License. You are not responsible for enforcing compliance by third parties with this License. An \u201centity transaction\u201d is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations. If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party's predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts. You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License. For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it. 11. Patents \u00b6 A \u201ccontributor\u201d is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based. The work thus licensed is called the contributor's \u201ccontributor version\u201d. A contributor's \u201cessential patent claims\u201d are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version. For purposes of this definition, \u201ccontrol\u201d includes the right to grant patent sublicenses in a manner consistent with the requirements of this License. Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor's essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version. In the following three paragraphs, a \u201cpatent license\u201d is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement). To \u201cgrant\u201d such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party. If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients. \u201cKnowingly relying\u201d means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient's use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid. If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it. A patent license is \u201cdiscriminatory\u201d if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License. You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007. Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law. 12. No Surrender of Others' Freedom \u00b6 If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all. For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program. 13. Remote Network Interaction; Use with the GNU General Public License \u00b6 Notwithstanding any other provision of this License, if you modify the Program, your modified version must prominently offer all users interacting with it remotely through a computer network (if your version supports such interaction) an opportunity to receive the Corresponding Source of your version by providing access to the Corresponding Source from a network server at no charge, through some standard or customary means of facilitating copying of software. This Corresponding Source shall include the Corresponding Source for any work covered by version 3 of the GNU General Public License that is incorporated pursuant to the following paragraph. Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU General Public License into a single combined work, and to convey the resulting work. The terms of this License will continue to apply to the part which is the covered work, but the work with which it is combined will remain governed by version 3 of the GNU General Public License. 14. Revised Versions of this License \u00b6 The Free Software Foundation may publish revised and/or new versions of the GNU Affero General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number. If the Program specifies that a certain numbered version of the GNU Affero General Public License \u201cor any later version\u201d applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of the GNU Affero General Public License, you may choose any version ever published by the Free Software Foundation. If the Program specifies that a proxy can decide which future versions of the GNU Affero General Public License can be used, that proxy's public statement of acceptance of a version permanently authorizes you to choose that version for the Program. Later license versions may give you additional or different permissions. However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version. 15. Disclaimer of Warranty \u00b6 THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \u201cAS IS\u201d WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION. 16. Limitation of Liability \u00b6 IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. 17. Interpretation of Sections 15 and 16 \u00b6 If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee. END OF TERMS AND CONDITIONS Trademarks \u00b6 PhotoPrism\u2122 is a registered trademark of Michael Mayer. You may use it as required to describe our software, run your own server, for educational purposes, but not for offering commercial goods, products, or services without prior written permission. In other words, please ask.","title":"License"},{"location":"license/#gnu-affero-general-public-license","text":"Version 3, 19 November 2007 Copyright \u00a9 2007 Free Software Foundation, Inc. Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.","title":"GNU Affero General Public License"},{"location":"license/#preamble","text":"The GNU Affero General Public License is a free, copyleft license for software and other kinds of works, specifically designed to ensure cooperation with the community in the case of network server software. The licenses for most software and other practical works are designed to take away your freedom to share and change the works. By contrast, our General Public Licenses are intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users. When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things. Developers that use our General Public Licenses protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License which gives you legal permission to copy, distribute and/or modify the software. A secondary benefit of defending all users' freedom is that improvements made in alternate versions of the program, if they receive widespread use, become available for other developers to incorporate. Many developers of free software are heartened and encouraged by the resulting cooperation. However, in the case of software used on network servers, this result may fail to come about. The GNU General Public License permits making a modified version and letting the public access it on a server without ever releasing its source code to the public. The GNU Affero General Public License is designed specifically to ensure that, in such cases, the modified source code becomes available to the community. It requires the operator of a network server to provide the source code of the modified version running there to the users of that server. Therefore, public use of a modified version, on a publicly accessible server, gives the public access to the source code of the modified version. An older license, called the Affero General Public License and published by Affero, was designed to accomplish similar goals. This is a different license, not a version of the Affero GPL, but Affero has released a new version of the Affero GPL which permits relicensing under this license. The precise terms and conditions for copying, distribution and modification follow.","title":"Preamble"},{"location":"license/#terms-and-conditions","text":"","title":"TERMS AND CONDITIONS"},{"location":"license/#0-definitions","text":"\u201cThis License\u201d refers to version 3 of the GNU Affero General Public License. \u201cCopyright\u201d also means copyright-like laws that apply to other kinds of works, such as semiconductor masks. \u201cThe Program\u201d refers to any copyrightable work licensed under this License. Each licensee is addressed as \u201cyou\u201d. \u201cLicensees\u201d and \u201crecipients\u201d may be individuals or organizations. To \u201cmodify\u201d a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy. The resulting work is called a \u201cmodified version\u201d of the earlier work or a work \u201cbased on\u201d the earlier work. A \u201ccovered work\u201d means either the unmodified Program or a work based on the Program. To \u201cpropagate\u201d a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy. Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well. To \u201cconvey\u201d a work means any kind of propagation that enables other parties to make or receive copies. Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying. An interactive user interface displays \u201cAppropriate Legal Notices\u201d to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License. If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion.","title":"0. Definitions"},{"location":"license/#1-source-code","text":"The \u201csource code\u201d for a work means the preferred form of the work for making modifications to it. \u201cObject code\u201d means any non-source form of a work. A \u201cStandard Interface\u201d means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language. The \u201cSystem Libraries\u201d of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form. A \u201cMajor Component\u201d, in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it. The \u201cCorresponding Source\u201d for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities. However, it does not include the work's System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work. For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work. The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source. The Corresponding Source for a work in source code form is that same work.","title":"1. Source Code"},{"location":"license/#2-basic-permissions","text":"All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met. This License explicitly affirms your unlimited permission to run the unmodified Program. The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work. This License acknowledges your rights of fair use or other equivalent, as provided by copyright law. You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force. You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright. Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you. Conveying under any other circumstances is permitted solely under the conditions stated below. Sublicensing is not allowed; section 10 makes it unnecessary.","title":"2. Basic Permissions"},{"location":"license/#3-protecting-users-legal-rights-from-anti-circumvention-law","text":"No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures. When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work's users, your or third parties' legal rights to forbid circumvention of technological measures.","title":"3. Protecting Users' Legal Rights From Anti-Circumvention Law"},{"location":"license/#4-conveying-verbatim-copies","text":"You may convey verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program. You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee.","title":"4. Conveying Verbatim Copies"},{"location":"license/#5-conveying-modified-source-versions","text":"You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions: a) The work must carry prominent notices stating that you modified it, and giving a relevant date. b) The work must carry prominent notices stating that it is released under this License and any conditions added under section 7. This requirement modifies the requirement in section 4 to \u201ckeep intact all notices\u201d. c) You must license the entire work, as a whole, under this License to anyone who comes into possession of a copy. This License will therefore apply, along with any applicable section 7 additional terms, to the whole of the work, and all its parts, regardless of how they are packaged. This License gives no permission to license the work in any other way, but it does not invalidate such permission if you have separately received it. d) If the work has interactive user interfaces, each must display Appropriate Legal Notices; however, if the Program has interactive interfaces that do not display Appropriate Legal Notices, your work need not make them do so. A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an \u201caggregate\u201d if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation's users beyond what the individual works permit. Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate.","title":"5. Conveying Modified Source Versions"},{"location":"license/#6-conveying-non-source-forms","text":"You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways: a) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by the Corresponding Source fixed on a durable physical medium customarily used for software interchange. b) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by a written offer, valid for at least three years and valid for as long as you offer spare parts or customer support for that product model, to give anyone who possesses the object code either (1) a copy of the Corresponding Source for all the software in the product that is covered by this License, on a durable physical medium customarily used for software interchange, for a price no more than your reasonable cost of physically performing this conveying of source, or (2) access to copy the Corresponding Source from a network server at no charge. c) Convey individual copies of the object code with a copy of the written offer to provide the Corresponding Source. This alternative is allowed only occasionally and noncommercially, and only if you received the object code with such an offer, in accord with subsection 6b. d) Convey the object code by offering access from a designated place (gratis or for a charge), and offer equivalent access to the Corresponding Source in the same way through the same place at no further charge. You need not require recipients to copy the Corresponding Source along with the object code. If the place to copy the object code is a network server, the Corresponding Source may be on a different server (operated by you or a third party) that supports equivalent copying facilities, provided you maintain clear directions next to the object code saying where to find the Corresponding Source. Regardless of what server hosts the Corresponding Source, you remain obligated to ensure that it is available for as long as needed to satisfy these requirements. e) Convey the object code using peer-to-peer transmission, provided you inform other peers where the object code and Corresponding Source of the work are being offered to the general public at no charge under subsection 6d. A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work. A \u201cUser Product\u201d is either (1) a \u201cconsumer product\u201d, which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling. In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage. For a particular product received by a particular user, \u201cnormally used\u201d refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product. A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product. \u201cInstallation Information\u201d for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source. The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made. If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information. But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM). The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed. Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network. Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying.","title":"6. Conveying Non-Source Forms"},{"location":"license/#7-additional-terms","text":"\u201cAdditional permissions\u201d are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law. If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions. When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it. (Additional permissions may be written to require their own removal in certain cases when you modify the work.) You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission. Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms: a) Disclaiming warranty or limiting liability differently from the terms of sections 15 and 16 of this License; or b) Requiring preservation of specified reasonable legal notices or author attributions in that material or in the Appropriate Legal Notices displayed by works containing it; or c) Prohibiting misrepresentation of the origin of that material, or requiring that modified versions of such material be marked in reasonable ways as different from the original version; or d) Limiting the use for publicity purposes of names of licensors or authors of the material; or e) Declining to grant rights under trademark law for use of some trade names, trademarks, or service marks; or f) Requiring indemnification of licensors and authors of that material by anyone who conveys the material (or modified versions of it) with contractual assumptions of liability to the recipient, for any liability that these contractual assumptions directly impose on those licensors and authors. All other non-permissive additional terms are considered \u201cfurther restrictions\u201d within the meaning of section 10. If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term. If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying. If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms. Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way.","title":"7. Additional Terms"},{"location":"license/#8-termination","text":"You may not propagate or modify a covered work except as expressly provided under this License. Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11). However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation. Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice. Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License. If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10.","title":"8. Termination"},{"location":"license/#9-acceptance-not-required-for-having-copies","text":"You are not required to accept this License in order to receive or run a copy of the Program. Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance. However, nothing other than this License grants you permission to propagate or modify any covered work. These actions infringe copyright if you do not accept this License. Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so.","title":"9. Acceptance Not Required for Having Copies"},{"location":"license/#10-automatic-licensing-of-downstream-recipients","text":"Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License. You are not responsible for enforcing compliance by third parties with this License. An \u201centity transaction\u201d is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations. If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party's predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts. You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License. For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it.","title":"10. Automatic Licensing of Downstream Recipients"},{"location":"license/#11-patents","text":"A \u201ccontributor\u201d is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based. The work thus licensed is called the contributor's \u201ccontributor version\u201d. A contributor's \u201cessential patent claims\u201d are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version. For purposes of this definition, \u201ccontrol\u201d includes the right to grant patent sublicenses in a manner consistent with the requirements of this License. Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor's essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version. In the following three paragraphs, a \u201cpatent license\u201d is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement). To \u201cgrant\u201d such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party. If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients. \u201cKnowingly relying\u201d means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient's use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid. If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it. A patent license is \u201cdiscriminatory\u201d if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License. You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007. Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law.","title":"11. Patents"},{"location":"license/#12-no-surrender-of-others-freedom","text":"If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all. For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program.","title":"12. No Surrender of Others' Freedom"},{"location":"license/#13-remote-network-interaction-use-with-the-gnu-general-public-license","text":"Notwithstanding any other provision of this License, if you modify the Program, your modified version must prominently offer all users interacting with it remotely through a computer network (if your version supports such interaction) an opportunity to receive the Corresponding Source of your version by providing access to the Corresponding Source from a network server at no charge, through some standard or customary means of facilitating copying of software. This Corresponding Source shall include the Corresponding Source for any work covered by version 3 of the GNU General Public License that is incorporated pursuant to the following paragraph. Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU General Public License into a single combined work, and to convey the resulting work. The terms of this License will continue to apply to the part which is the covered work, but the work with which it is combined will remain governed by version 3 of the GNU General Public License.","title":"13. Remote Network Interaction; Use with the GNU General Public License"},{"location":"license/#14-revised-versions-of-this-license","text":"The Free Software Foundation may publish revised and/or new versions of the GNU Affero General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number. If the Program specifies that a certain numbered version of the GNU Affero General Public License \u201cor any later version\u201d applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of the GNU Affero General Public License, you may choose any version ever published by the Free Software Foundation. If the Program specifies that a proxy can decide which future versions of the GNU Affero General Public License can be used, that proxy's public statement of acceptance of a version permanently authorizes you to choose that version for the Program. Later license versions may give you additional or different permissions. However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version.","title":"14. Revised Versions of this License"},{"location":"license/#15-disclaimer-of-warranty","text":"THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \u201cAS IS\u201d WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.","title":"15. Disclaimer of Warranty"},{"location":"license/#16-limitation-of-liability","text":"IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.","title":"16. Limitation of Liability"},{"location":"license/#17-interpretation-of-sections-15-and-16","text":"If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee. END OF TERMS AND CONDITIONS","title":"17. Interpretation of Sections 15 and 16"},{"location":"license/#trademarks","text":"PhotoPrism\u2122 is a registered trademark of Michael Mayer. You may use it as required to describe our software, run your own server, for educational purposes, but not for offering commercial goods, products, or services without prior written permission. In other words, please ask.","title":"Trademarks"},{"location":"team/","text":"Who we are \u00b6 Andrea Ceroni \u00b6 Andrea is a data scientist specialized in temporal information retrieval and machine learning. He holds a PhD in Computer Science from the Leibniz University of Hannover (L3S Research Center) and wrote numerous papers on topics such as Personal Photo Management and Preservation and Photo Selection Models for Personal Photo Collections . You can find him on Google Scholar and LinkedIn Theresa Gresch \u00b6 Theresa works as a freelance product manager and developer in Berlin. She has a Master's in Neurobiology and aims to dive deeper into machine learning while working on this project. You can find her on GitHub and LinkedIn Michael Mayer \u00b6 Michael learned coding on an Atari 1040 ST and started his first open-source projects in the 90s. He has more than 20 years of experience in building Web applications. His motivation is to explore the latest technologies and build an amazing product outside the constraints of a corporate environment. You can find him on GitHub , LinkedIn and Twitter Guy Sheffer \u00b6 Known as GuySoft on the web. Active developer in the Free Software and Maker community. Creator of OctoPi and FullPageOS , which have hundreds of thousands of downloads. Raspberry Pi distro expert. Currently VP R&D and Co-Founder at ShapeDo . ...and many more \u00b6 Thank you to everyone who contributed to this project! We do our best to mention those who contribute frequently or in a special way on this page. Please let us know if you would like to be listed. GitHub has a full list of source code contributors .","title":"Team"},{"location":"team/#who-we-are","text":"","title":"Who we are"},{"location":"team/#andrea-ceroni","text":"Andrea is a data scientist specialized in temporal information retrieval and machine learning. He holds a PhD in Computer Science from the Leibniz University of Hannover (L3S Research Center) and wrote numerous papers on topics such as Personal Photo Management and Preservation and Photo Selection Models for Personal Photo Collections . You can find him on Google Scholar and LinkedIn","title":"Andrea Ceroni"},{"location":"team/#theresa-gresch","text":"Theresa works as a freelance product manager and developer in Berlin. She has a Master's in Neurobiology and aims to dive deeper into machine learning while working on this project. You can find her on GitHub and LinkedIn","title":"Theresa Gresch"},{"location":"team/#michael-mayer","text":"Michael learned coding on an Atari 1040 ST and started his first open-source projects in the 90s. He has more than 20 years of experience in building Web applications. His motivation is to explore the latest technologies and build an amazing product outside the constraints of a corporate environment. You can find him on GitHub , LinkedIn and Twitter","title":"Michael Mayer"},{"location":"team/#guy-sheffer","text":"Known as GuySoft on the web. Active developer in the Free Software and Maker community. Creator of OctoPi and FullPageOS , which have hundreds of thousands of downloads. Raspberry Pi distro expert. Currently VP R&D and Co-Founder at ShapeDo .","title":"Guy Sheffer"},{"location":"team/#and-many-more","text":"Thank you to everyone who contributed to this project! We do our best to mention those who contribute frequently or in a special way on this page. Please let us know if you would like to be listed. GitHub has a full list of source code contributors .","title":"...and many more"},{"location":"developer-guide/","text":"Every Contribution Makes a Difference \u00b6 Think of open-source development as free training with a visible outcome. Exploring new technologies is easier than in commercial environments, where development effort is more focused on immediate results. We welcome contributions of any kind including pull requests, ideas, bug reports, testing, writing documentation, tutorials and blog posts. If you help with development, you have the opportunity to learn Docker, Go, TensorFlow and much more. Questions? \u00b6 Follow us on Twitter to receive regular project updates, get in contact with other contributors and discuss your ideas. Don't be afraid to ask stupid questions. Of all the tools we tested, it works best to get and give continuous feedback. Especially polls are amazing for product development. Pull requests \u00b6 Issues labeled help wanted / easy can be good (first) contributions. Our Developer Guide contains all information necessary to get you started. Our step-by-step guide explains how to submit new features, bugfixes and documentation. Feature requests \u00b6 You are welcome to add specific feature requests directly to our GitHub issue tracker if no similar idea or todo already exists. Please don't use the issue tracker to ask general questions. We also maintain a couple of pages in our Developer Guide for collecting interesting ideas and feedback, e.g. Related , Love , Concerns and Research . Reporting bugs \u00b6 Please use the GitHub issue tracker to report clearly identified bugs and impediments to us. If you're not sure, start by asking in our help forum or contact us via email . When reporting an issue, please provide the version in use and information about your environment like browser, operating system, installed memory, and processor type.","title":"Introduction"},{"location":"developer-guide/#every-contribution-makes-a-difference","text":"Think of open-source development as free training with a visible outcome. Exploring new technologies is easier than in commercial environments, where development effort is more focused on immediate results. We welcome contributions of any kind including pull requests, ideas, bug reports, testing, writing documentation, tutorials and blog posts. If you help with development, you have the opportunity to learn Docker, Go, TensorFlow and much more.","title":"Every Contribution Makes a Difference"},{"location":"developer-guide/#questions","text":"Follow us on Twitter to receive regular project updates, get in contact with other contributors and discuss your ideas. Don't be afraid to ask stupid questions. Of all the tools we tested, it works best to get and give continuous feedback. Especially polls are amazing for product development.","title":"Questions?"},{"location":"developer-guide/#pull-requests","text":"Issues labeled help wanted / easy can be good (first) contributions. Our Developer Guide contains all information necessary to get you started. Our step-by-step guide explains how to submit new features, bugfixes and documentation.","title":"Pull requests"},{"location":"developer-guide/#feature-requests","text":"You are welcome to add specific feature requests directly to our GitHub issue tracker if no similar idea or todo already exists. Please don't use the issue tracker to ask general questions. We also maintain a couple of pages in our Developer Guide for collecting interesting ideas and feedback, e.g. Related , Love , Concerns and Research .","title":"Feature requests"},{"location":"developer-guide/#reporting-bugs","text":"Please use the GitHub issue tracker to report clearly identified bugs and impediments to us. If you're not sure, start by asking in our help forum or contact us via email . When reporting an issue, please provide the version in use and information about your environment like browser, operating system, installed memory, and processor type.","title":"Reporting bugs"},{"location":"developer-guide/code-quality/","text":"A Few Words About Code Quality \u00b6 Code quality has a practical impact on both your agility and the cost of development. You can\u2019t change buggy code fast enough to be truly agile. Existing bugs can easily increase dev costs (and time) by 10x. You can't afford not to fix them. \u2014 Allen Holub Abstraction \u00b6 Premature optimization is the root of all evil. \u2014 Donald Knuth Don't abstract when you don't have to. Often causes pain, results in bloated code and fewer developers understand what is going on. Write tests instead so that you can safely refactor when really needed. Remember: Duplication is far cheaper than the wrong abstraction. Refactoring \u00b6 While we expect this to be difficult when working with a distributed team and pull requests, we encourage all contributors to refactor whenever they see a specific issue and they are working on related code anyways (so that you can validate if your changes are helpful). This way, there is no need for extra refactoring tickets or epics. Let's experiment and see how far we get with this. Remember: Ugly code is not a problem as long as there are tests, there are no security issues and you can easily refactor later. Nobody needs beautiful code that doesn't work. Going Fast \u00b6 Feel free to think ahead, just don't code ahead. But also, don't feel the need to decide so many details ahead. Learn enough to get started and build only what you need. \u2014 J. B. Rainsberger Remember: You have to go slow before you can go fast. Keep it simple. Done is better than perfect. Be pragmatic. Stay focused. Test Coverage \u00b6 Test coverage is a useful tool for finding untested parts of our codebase. Test coverage is of little use as a numeric statement of how good our tests are. Remember: We strive for complete test coverage. Code that cannot be tested is flawed. Codecov \u00b6 A coverage log file created by the Go test runner is automatically sent to Codecov every time our develop branch was successfully built and tested on Travis CI . Codecov provides a beautiful UI for displaying coverage reports and renders a badge showing the current test coverage. Custom settings for our report are located in codecov.yml . For example, range: 50..90 means the badge will be green if coverage is >= 90% and red if it is <= 50%. Quality Reports \u00b6 Go Report Card finds typical issues in Go code while Codacy is a more general service that also reports issues found in Dockerfiles and other programming languages. Remember: Not every issue reported by a tool really is important and needs to be fixed instantly. Use reports for inspiration when you need some.","title":"Code Quality"},{"location":"developer-guide/code-quality/#a-few-words-about-code-quality","text":"Code quality has a practical impact on both your agility and the cost of development. You can\u2019t change buggy code fast enough to be truly agile. Existing bugs can easily increase dev costs (and time) by 10x. You can't afford not to fix them. \u2014 Allen Holub","title":"A Few Words About Code Quality"},{"location":"developer-guide/code-quality/#abstraction","text":"Premature optimization is the root of all evil. \u2014 Donald Knuth Don't abstract when you don't have to. Often causes pain, results in bloated code and fewer developers understand what is going on. Write tests instead so that you can safely refactor when really needed. Remember: Duplication is far cheaper than the wrong abstraction.","title":"Abstraction"},{"location":"developer-guide/code-quality/#refactoring","text":"While we expect this to be difficult when working with a distributed team and pull requests, we encourage all contributors to refactor whenever they see a specific issue and they are working on related code anyways (so that you can validate if your changes are helpful). This way, there is no need for extra refactoring tickets or epics. Let's experiment and see how far we get with this. Remember: Ugly code is not a problem as long as there are tests, there are no security issues and you can easily refactor later. Nobody needs beautiful code that doesn't work.","title":"Refactoring"},{"location":"developer-guide/code-quality/#going-fast","text":"Feel free to think ahead, just don't code ahead. But also, don't feel the need to decide so many details ahead. Learn enough to get started and build only what you need. \u2014 J. B. Rainsberger Remember: You have to go slow before you can go fast. Keep it simple. Done is better than perfect. Be pragmatic. Stay focused.","title":"Going Fast"},{"location":"developer-guide/code-quality/#test-coverage","text":"Test coverage is a useful tool for finding untested parts of our codebase. Test coverage is of little use as a numeric statement of how good our tests are. Remember: We strive for complete test coverage. Code that cannot be tested is flawed.","title":"Test Coverage"},{"location":"developer-guide/code-quality/#codecov","text":"A coverage log file created by the Go test runner is automatically sent to Codecov every time our develop branch was successfully built and tested on Travis CI . Codecov provides a beautiful UI for displaying coverage reports and renders a badge showing the current test coverage. Custom settings for our report are located in codecov.yml . For example, range: 50..90 means the badge will be green if coverage is >= 90% and red if it is <= 50%.","title":"Codecov"},{"location":"developer-guide/code-quality/#quality-reports","text":"Go Report Card finds typical issues in Go code while Codacy is a more general service that also reports issues found in Dockerfiles and other programming languages. Remember: Not every issue reported by a tool really is important and needs to be fixed instantly. Use reports for inspiration when you need some.","title":"Quality Reports"},{"location":"developer-guide/configuration/","text":"Configuration \u00b6 Help \u00b6 photoprism help shows available commands, config parameters and environment variable names. These are also listed in Getting Started . Show current settings \u00b6 photoprism config shows all config parameters and their values. Change settings \u00b6 You can either use environment variables like PHOTOPRISM_CACHE_PATH , a config file or command line parameters like --cache-path to configure PhotoPrism. Environment variables are usually best for dockerized applications. You can easily set them in docker-compose.yml without touching any other files. There is no need to change any settings if you follow the steps described in Setup .","title":"Configuration"},{"location":"developer-guide/configuration/#configuration","text":"","title":"Configuration"},{"location":"developer-guide/configuration/#help","text":"photoprism help shows available commands, config parameters and environment variable names. These are also listed in Getting Started .","title":"Help"},{"location":"developer-guide/configuration/#show-current-settings","text":"photoprism config shows all config parameters and their values.","title":"Show current settings"},{"location":"developer-guide/configuration/#change-settings","text":"You can either use environment variables like PHOTOPRISM_CACHE_PATH , a config file or command line parameters like --cache-path to configure PhotoPrism. Environment variables are usually best for dockerized applications. You can easily set them in docker-compose.yml without touching any other files. There is no need to change any settings if you follow the steps described in Setup .","title":"Change settings"},{"location":"developer-guide/directories/","text":"Directory Structure \u00b6 Our directory layout is loosely based on https://github.com/golang-standards/project-layout : / contains a Makefile , a readme, the license and various config files for dependency management, building and continuous integration /assets contains subdirectories for various assets such as photos, built JS/HTML/CSS files and server-side HTML templates /cmd contains the application source code (main package) /docker contains Dockerfiles and related assets, e.g. for Development, TensorFlow and ARM64 /frontend contains our Web frontend JS/HTML/CSS source code /internal contains the source code of our internal Go packages /pkg contains the source code of our public Go packages /scripts contains shell scripts used for building, deployment and continuous integration","title":"Directories"},{"location":"developer-guide/directories/#directory-structure","text":"Our directory layout is loosely based on https://github.com/golang-standards/project-layout : / contains a Makefile , a readme, the license and various config files for dependency management, building and continuous integration /assets contains subdirectories for various assets such as photos, built JS/HTML/CSS files and server-side HTML templates /cmd contains the application source code (main package) /docker contains Dockerfiles and related assets, e.g. for Development, TensorFlow and ARM64 /frontend contains our Web frontend JS/HTML/CSS source code /internal contains the source code of our internal Go packages /pkg contains the source code of our public Go packages /scripts contains shell scripts used for building, deployment and continuous integration","title":"Directory Structure"},{"location":"developer-guide/documentation/","text":"Documentation \u00b6 Package Documentation (GoDoc) \u00b6 Godoc parses Go source code - including comments - and produces documentation as HTML or plain text. The end result is documentation tightly coupled with the code it documents: cmd/photoprism - main application internal/photoprism - main library package internal/server - server initialization and routing internal/api - server api internal/commands - command line interface internal/form - input validation (based on gin ) internal/entity - models (based on GORM ) Wiki \u00b6 In addition to this Developer Guide, we also use a Wiki . Pages are currently migrated and updated. Our Wiki is open to editing by anyone, feel free to improve it without asking for permission as long as you don't rename or remove existing pages. User Guide on docs.photoprism.org \u00b6 github.com/photoprism/photoprism-docs contains the source files of our User Guide in Markdown . They are meant to be parsed with the Mkdocs documentation builder to build the HTML documentation on docs.photoprism.org . Contributing changes \u00b6 Pull Requests should use the master branch by default. Though less convenient to edit than a Wiki, our photoprism-docs repository is meant to receive pull requests to always improve the documentation, add new pages, etc. Having direct access to the source files in a revision control system is a big plus to ensure the quality of our end user documentation. Project layout \u00b6 mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. Building with Mkdocs \u00b6 To build the HTML, you need to install Mkdocs . It is best installed using pip , Python's module installer. On a Mac you can run: brew install python pip3 install mkdocs pip3 install mkdocs-material You can then build the HTML documentation from the root folder of this repository with: mkdocs build or start a server that listens on http://127.0.0.1:8000 mkdocs server Editing existing pages \u00b6 To edit an existing page, locate its .md source file and open it in your favourite text editor. You can then commit the changes, push them to your fork and make a pull request.","title":"Documentation"},{"location":"developer-guide/documentation/#documentation","text":"","title":"Documentation"},{"location":"developer-guide/documentation/#package-documentation-godoc","text":"Godoc parses Go source code - including comments - and produces documentation as HTML or plain text. The end result is documentation tightly coupled with the code it documents: cmd/photoprism - main application internal/photoprism - main library package internal/server - server initialization and routing internal/api - server api internal/commands - command line interface internal/form - input validation (based on gin ) internal/entity - models (based on GORM )","title":"Package Documentation (GoDoc)"},{"location":"developer-guide/documentation/#wiki","text":"In addition to this Developer Guide, we also use a Wiki . Pages are currently migrated and updated. Our Wiki is open to editing by anyone, feel free to improve it without asking for permission as long as you don't rename or remove existing pages.","title":"Wiki"},{"location":"developer-guide/documentation/#user-guide-on-docsphotoprismorg","text":"github.com/photoprism/photoprism-docs contains the source files of our User Guide in Markdown . They are meant to be parsed with the Mkdocs documentation builder to build the HTML documentation on docs.photoprism.org .","title":"User Guide on docs.photoprism.org"},{"location":"developer-guide/documentation/#contributing-changes","text":"Pull Requests should use the master branch by default. Though less convenient to edit than a Wiki, our photoprism-docs repository is meant to receive pull requests to always improve the documentation, add new pages, etc. Having direct access to the source files in a revision control system is a big plus to ensure the quality of our end user documentation.","title":"Contributing changes"},{"location":"developer-guide/documentation/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"developer-guide/documentation/#building-with-mkdocs","text":"To build the HTML, you need to install Mkdocs . It is best installed using pip , Python's module installer. On a Mac you can run: brew install python pip3 install mkdocs pip3 install mkdocs-material You can then build the HTML documentation from the root folder of this repository with: mkdocs build or start a server that listens on http://127.0.0.1:8000 mkdocs server","title":"Building with Mkdocs"},{"location":"developer-guide/documentation/#editing-existing-pages","text":"To edit an existing page, locate its .md source file and open it in your favourite text editor. You can then commit the changes, push them to your fork and make a pull request.","title":"Editing existing pages"},{"location":"developer-guide/issues/","text":"Issues \u00b6 We use GitHub issues for managing bugs , ideas , todos and epics (collection of todos). There is no Kanban or Scrum board, simply pick a todo you would like to work on and tell us about it. Issues labeled help wanted / easy can be good (first) contributions. User Stories \u00b6 Start the description of new ideas and todos with a user story similar to this: As a [type of person] I'd like to be able to [do something] so that I can [get some result]. That makes it easier for others to understand who wants what and why. It can take a lot of time to read between the lines otherwise. It takes even more time if the wrong thing gets done. Issues should therefore contain a list of acceptance criteria that clearly define when a story is done so that it can be properly implemented and tested. Use MAY, SHOULD and MUST as keywords to indicate priorities. This Markdown example renders with clickable checkboxes : Acceptance Criteria: - [ ] \"Log In\" button MUST be visible on /login page - [ ] \"Log In\" button MAY be disabled if password field is empty - [ ] Page SHOULD use existing Vuetify components - [ ] Login MUST work in latest Firefox, Safari and Chrome It is fundamentally the confusion between effectiveness and efficiency that stands between doing the right things and doing things right. There is surely nothing quite so useless as doing with great efficiency what should not be done at all. \u2014 Peter Drucker Mailing List \u00b6 Please join our developers mailing list to receive regular project updates, get in contact with other contributors and discuss your ideas. Don't be afraid to ask stupid questions. Developer Chat \u00b6 You are welcome to join our #photoprism channel on gophers.slack.com . If you don't have an account yet, you can create one on invite.slack.golangbridge.org . Please add important information from chat sessions to our Wiki or related GitHub issues. Feedback \u00b6 Part of this project is to find better ways of organizing product development, in particular by embracing simplicity and consistently leveraging community feedback. Please share your experience with us, especially if you haven't actively contributed yet. Wiki \u00b6 We also maintain a couple of pages for collecting more general ideas and feedback: Ideas , Inbox , Related , Love , Concerns , Research and Privacy","title":"Issues"},{"location":"developer-guide/issues/#issues","text":"We use GitHub issues for managing bugs , ideas , todos and epics (collection of todos). There is no Kanban or Scrum board, simply pick a todo you would like to work on and tell us about it. Issues labeled help wanted / easy can be good (first) contributions.","title":"Issues"},{"location":"developer-guide/issues/#user-stories","text":"Start the description of new ideas and todos with a user story similar to this: As a [type of person] I'd like to be able to [do something] so that I can [get some result]. That makes it easier for others to understand who wants what and why. It can take a lot of time to read between the lines otherwise. It takes even more time if the wrong thing gets done. Issues should therefore contain a list of acceptance criteria that clearly define when a story is done so that it can be properly implemented and tested. Use MAY, SHOULD and MUST as keywords to indicate priorities. This Markdown example renders with clickable checkboxes : Acceptance Criteria: - [ ] \"Log In\" button MUST be visible on /login page - [ ] \"Log In\" button MAY be disabled if password field is empty - [ ] Page SHOULD use existing Vuetify components - [ ] Login MUST work in latest Firefox, Safari and Chrome It is fundamentally the confusion between effectiveness and efficiency that stands between doing the right things and doing things right. There is surely nothing quite so useless as doing with great efficiency what should not be done at all. \u2014 Peter Drucker","title":"User Stories"},{"location":"developer-guide/issues/#mailing-list","text":"Please join our developers mailing list to receive regular project updates, get in contact with other contributors and discuss your ideas. Don't be afraid to ask stupid questions.","title":"Mailing List"},{"location":"developer-guide/issues/#developer-chat","text":"You are welcome to join our #photoprism channel on gophers.slack.com . If you don't have an account yet, you can create one on invite.slack.golangbridge.org . Please add important information from chat sessions to our Wiki or related GitHub issues.","title":"Developer Chat"},{"location":"developer-guide/issues/#feedback","text":"Part of this project is to find better ways of organizing product development, in particular by embracing simplicity and consistently leveraging community feedback. Please share your experience with us, especially if you haven't actively contributed yet.","title":"Feedback"},{"location":"developer-guide/issues/#wiki","text":"We also maintain a couple of pages for collecting more general ideas and feedback: Ideas , Inbox , Related , Love , Concerns , Research and Privacy","title":"Wiki"},{"location":"developer-guide/pull-requests/","text":"How to Work With Pull Requests \u00b6 Because we want to create the best possible product for our users, we have a set of guidelines which ensure that all source code contributions are acceptable. They are not intended as a filter or barrier to participation. If you are unfamiliar with open source development on GitHub, we will help you . Our [[documentation]] is mostly kept outside of the main repository so that the commit log doesn't get cluttered with lots of small text changes. To submit new code, follow these steps: Fork our main repository \u00b6 Click the Fork button in the header of our main repository Clone the forked repository on your local computer: git clone https://github.com/[your username]/photoprism Connect your local to our \"upstream\" main repository by adding it as a remote : git remote add upstream https://github.com/photoprism/photoprism.git Create a new branch from develop - it should have a short and descriptive name (not \"patch-1\") that does not already exist, for example: git checkout -b feature/your_feature_name See also https://guides.github.com/activities/forking/ Make your changes \u00b6 While you are working on it and your pull request is not merged yet, pull in changes from \"upstream\" often so that you stay up to date and there is a lower risk for merge conflicts : git fetch upstream git merge upstream/develop We recommend running tests after each change to make sure you didn't break anything: make test Add tests for any new code. If you have questions about how to do this, please ask in your pull request or on our mailing list . Please run make fmt to ensure code is properly formatted according to our standards. If all tests are green and you see no other errors, commit your changes. To reference related GitHub issues , please end your commit message with the issue ID like #1234 : git status -s git add . git commit -m \"Your commit message #1234\" When you\u2019re ready... \u00b6 Sign the Contributor License Agreement (CLA) . Verify you didn't forget to add / commit files (output should be empty): git status -s Push all commits to your forked remote repository on GitHub: git push -u origin feature/your_feature_name Create a pull request with a helpful description of what it does. Wait for our code review and fix remaining issues, if any. Write documentation if you are adding new features or changing functionality. It is hosted on docs.photoprism.org and automatically updates whenever changes are pushed to the repository. Note: You can also create a pull request if your changes are not complete / working yet. Simply let us know that it is in progress, so that we don't try to merge it. We can help you with a code review or other feedback, if needed.","title":"Pull Requests"},{"location":"developer-guide/pull-requests/#how-to-work-with-pull-requests","text":"Because we want to create the best possible product for our users, we have a set of guidelines which ensure that all source code contributions are acceptable. They are not intended as a filter or barrier to participation. If you are unfamiliar with open source development on GitHub, we will help you . Our [[documentation]] is mostly kept outside of the main repository so that the commit log doesn't get cluttered with lots of small text changes. To submit new code, follow these steps:","title":"How to Work With Pull Requests"},{"location":"developer-guide/pull-requests/#fork-our-main-repository","text":"Click the Fork button in the header of our main repository Clone the forked repository on your local computer: git clone https://github.com/[your username]/photoprism Connect your local to our \"upstream\" main repository by adding it as a remote : git remote add upstream https://github.com/photoprism/photoprism.git Create a new branch from develop - it should have a short and descriptive name (not \"patch-1\") that does not already exist, for example: git checkout -b feature/your_feature_name See also https://guides.github.com/activities/forking/","title":"Fork our main repository"},{"location":"developer-guide/pull-requests/#make-your-changes","text":"While you are working on it and your pull request is not merged yet, pull in changes from \"upstream\" often so that you stay up to date and there is a lower risk for merge conflicts : git fetch upstream git merge upstream/develop We recommend running tests after each change to make sure you didn't break anything: make test Add tests for any new code. If you have questions about how to do this, please ask in your pull request or on our mailing list . Please run make fmt to ensure code is properly formatted according to our standards. If all tests are green and you see no other errors, commit your changes. To reference related GitHub issues , please end your commit message with the issue ID like #1234 : git status -s git add . git commit -m \"Your commit message #1234\"","title":"Make your changes"},{"location":"developer-guide/pull-requests/#when-youre-ready","text":"Sign the Contributor License Agreement (CLA) . Verify you didn't forget to add / commit files (output should be empty): git status -s Push all commits to your forked remote repository on GitHub: git push -u origin feature/your_feature_name Create a pull request with a helpful description of what it does. Wait for our code review and fix remaining issues, if any. Write documentation if you are adding new features or changing functionality. It is hosted on docs.photoprism.org and automatically updates whenever changes are pushed to the repository. Note: You can also create a pull request if your changes are not complete / working yet. Simply let us know that it is in progress, so that we don't try to merge it. We can help you with a code review or other feedback, if needed.","title":"When you\u2019re ready..."},{"location":"developer-guide/setup-fedora/","text":"Development Environment (Fedora 32) \u00b6 Before you start, make sure you have Git and Development Tools installed on your system (git, gcc, g++, llvm, cmake, etc...). Instead of using Docker, you can create your own development environment. You'll need: Go >= 1.11 TensorFlow for C Make NPM MySQL (if you don't want to leverage sqlite) Without Docker, you won't be able to use our other Dockerfiles (e.g. for TensorFlow). Step 1: Run Git to clone the project's: git clone git@github.com:tensorflow/tensorflow.git git clone git@github.com:photoprism/photoprism.git Step 2: Install required packages: sudo dnf install golang darktable intltool nodejs npm Note: This setup is for development and testing purposes only. Step 3: Download Bazel wrapper to build tensorflow: Consult the TensorFlow Docs for configuration options. go get github.com/bazelbuild/bazelisk alias bazel='bazelisk' cd tensorflow bazel build --config=v1 //tensorflow/tools/lib_package:libtensorflow sudo tar -C /usr/local/ -xvf $HOME/.cache/bazel/_bazel_$USER/<SOME_HASH>/execroot/org_tensorflow/bazel-out/k8-opt/bin/tensorflow/tools/lib_package/libtensorflow.tar.gz Note: Your SOME_HASH value will depend on your build, go find it! Step 4: Build PhotoPrism: cd photoprism make Step 5: Enjoy an amazing application ;-) Depending on your system's configuration, you might need to update your ldconfig Add a configuration file which persists reboots sudo echo '/usr/local/lib/' >> /etc/ld.so.conf.d/usrlocallib.conf sudo ldconfig Update your shell's environment which will not persist upon reboot export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib sudo ldconfig","title":"Development Environment (Fedora 32)"},{"location":"developer-guide/setup-fedora/#development-environment-fedora-32","text":"Before you start, make sure you have Git and Development Tools installed on your system (git, gcc, g++, llvm, cmake, etc...). Instead of using Docker, you can create your own development environment. You'll need: Go >= 1.11 TensorFlow for C Make NPM MySQL (if you don't want to leverage sqlite) Without Docker, you won't be able to use our other Dockerfiles (e.g. for TensorFlow). Step 1: Run Git to clone the project's: git clone git@github.com:tensorflow/tensorflow.git git clone git@github.com:photoprism/photoprism.git Step 2: Install required packages: sudo dnf install golang darktable intltool nodejs npm Note: This setup is for development and testing purposes only. Step 3: Download Bazel wrapper to build tensorflow: Consult the TensorFlow Docs for configuration options. go get github.com/bazelbuild/bazelisk alias bazel='bazelisk' cd tensorflow bazel build --config=v1 //tensorflow/tools/lib_package:libtensorflow sudo tar -C /usr/local/ -xvf $HOME/.cache/bazel/_bazel_$USER/<SOME_HASH>/execroot/org_tensorflow/bazel-out/k8-opt/bin/tensorflow/tools/lib_package/libtensorflow.tar.gz Note: Your SOME_HASH value will depend on your build, go find it! Step 4: Build PhotoPrism: cd photoprism make Step 5: Enjoy an amazing application ;-) Depending on your system's configuration, you might need to update your ldconfig Add a configuration file which persists reboots sudo echo '/usr/local/lib/' >> /etc/ld.so.conf.d/usrlocallib.conf sudo ldconfig Update your shell's environment which will not persist upon reboot export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib sudo ldconfig","title":"Development Environment (Fedora 32)"},{"location":"developer-guide/setup/","text":"Development Environment \u00b6 Before you start, make sure you have Git and Docker installed on your system. Instead of using Docker, you can create your own development environment based on our Dockerfile (not recommended). You'll need Go >= 1.11, TensorFlow for C , Make , NPM and MySQL . Without Docker, test results will be less reliable and you also won't be able to use our other Dockerfiles (e.g. for TensorFlow). Step 1: Run Git to clone this project: git clone git@github.com:photoprism/photoprism.git Tip If you're on windows, make sure to disable auto CR LF. Otherwise, the build won't work. git config --global core.autocrlf false Step 2: Start Docker containers: cd photoprism docker-compose up Note: This docker-compose configuration is for testing and development purposes only. Step 3: Open a terminal to the photoprism container: docker-compose exec photoprism bash Now - inside this terminal - you can run tests and commands: make all make test ./photoprism start You can see a list of all make targets in our Makefile . For example, make install will build a photoprism production binary without debug information and install it in the user's directory including all assets. ./photoprism start starts the built-in Web server. It will listen on localhost:2342 by default, see docker-compose.yml . Questions? Radomir Sohlich wrote a pragmatic introduction to Makefiles for Go developers. We are using Go Modules for managing our dependencies (new in 1.11). If you never used Go before and would like to learn it, you are welcome to reach out . We might start organizing regular learning sessions for beginners in Berlin. This guide was not tested on Windows, you might need to change docker-compose.yml to make it work with Windows specific paths. Alternate Development Environment's \u00b6 The following are setup instructions for development and testing and should be avoided unless docker is either not supported or not allowed in your environment: Fedora 32","title":"Setup"},{"location":"developer-guide/setup/#development-environment","text":"Before you start, make sure you have Git and Docker installed on your system. Instead of using Docker, you can create your own development environment based on our Dockerfile (not recommended). You'll need Go >= 1.11, TensorFlow for C , Make , NPM and MySQL . Without Docker, test results will be less reliable and you also won't be able to use our other Dockerfiles (e.g. for TensorFlow). Step 1: Run Git to clone this project: git clone git@github.com:photoprism/photoprism.git Tip If you're on windows, make sure to disable auto CR LF. Otherwise, the build won't work. git config --global core.autocrlf false Step 2: Start Docker containers: cd photoprism docker-compose up Note: This docker-compose configuration is for testing and development purposes only. Step 3: Open a terminal to the photoprism container: docker-compose exec photoprism bash Now - inside this terminal - you can run tests and commands: make all make test ./photoprism start You can see a list of all make targets in our Makefile . For example, make install will build a photoprism production binary without debug information and install it in the user's directory including all assets. ./photoprism start starts the built-in Web server. It will listen on localhost:2342 by default, see docker-compose.yml . Questions? Radomir Sohlich wrote a pragmatic introduction to Makefiles for Go developers. We are using Go Modules for managing our dependencies (new in 1.11). If you never used Go before and would like to learn it, you are welcome to reach out . We might start organizing regular learning sessions for beginners in Berlin. This guide was not tested on Windows, you might need to change docker-compose.yml to make it work with Windows specific paths.","title":"Development Environment"},{"location":"developer-guide/setup/#alternate-development-environments","text":"The following are setup instructions for development and testing and should be avoided unless docker is either not supported or not allowed in your environment: Fedora 32","title":"Alternate Development Environment's"},{"location":"developer-guide/tests/","text":"How We Test Our Code \u00b6 In any process, obsessing about the wait times will yield greater improvements than practically anything else, for longer than you might think. Automation, simplification, etc. are implementation details of that obsession. \u2014 Dan North Go \u00b6 To run all unit tests, type make test or go test ./internal/... in a terminal. These make targets are currently defined for tests: - test : Executes all tests found in a) /internal with a timeout of 20 min and verbose output and b) frontend/tests/unit - test-short : Executes only fast tests found in /internal with a timeout of 5 min and verbose output - test-race : Same as test but with race condition detector (much slower) and higher timeout of 60 min - test-codecov : Same as test but creates a coverage log in coverage.txt and sends it to Codecov (don't use it locally) - test-coverage : Same as test but creates a coverage.txt file as well as a human-readable report in coverage.html ; timeout is elevated to 30 min You can run single tests via go test -run in a package directory, e.g. /internal/photoprism : $ go test -run NameOfTest See docs for more info. Test Frameworks \u00b6 Go comes with a cool testing framework, it allows you to write test code using the same language, without needing to learn any library or test engine. Go advanced testing tips & tricks contains a lot of useful information. We only import testify/assert to save a few lines for common assertions. Todo: Use a SQL mock driver to test database interactions, for example https://github.com/DATA-DOG/go-sqlmock . Slow Tests \u00b6 Slow tests and benchmarks can be skipped using the -short flag: func TestTimeConsuming ( t * testing . T ) { if testing . Short () { t . Skip ( \"skipping test in short mode.\" ) } ... } To execute: go test -short Javascript \u00b6 To run all javascript unit tests, type make test-js in a terminal. In case you want to run a single test add .only to the test you want to run e.g.: it . only ( \"should get album id\" , () => { const values = { ID : 5 , AlbumName : \"Christmas 2019\" , AlbumSlug : \"christmas-2019\" , AlbumUUID : 66 }; const album = new Album ( values ); const result = album . getId (); assert . equal ( result , \"66\" ); }); Test coverage output is saved to frontend/coverage/html Test Frameworks \u00b6 To test javascript code we use mocha in combination with karma , chai , sinon and the karma-istanbul-coverage-reporter . Acceptance Tests \u00b6 Run tests within the docker container \u00b6 You can run the tests from within the photoprism container in firefox or chromium. * make acceptance : executes all tests in headless chromium and firefox * make test-chromium : This executes all tests in headless chromium * make test-firefox : This executes all tests in headless firefox Run tests locally \u00b6 Locally you can run the tests in all supported browsers (see table below). To run tests locally you need to install testcafe on your machine npm install -g testcafe Then you can execute tests with testcafe firefox,chrome,safari,opera -S \\ -s frontend/tests/acceptance/screenshots frontend/tests/acceptance/ Test Frameworks \u00b6 Our goal was to implement UI acceptance tests using JavaScript, so that frontend developers are able to run and write them without learning Go. To make a final decision, we compared TestCafe , Cypress and Nightwatch.js . We agreed on using TestCafe as tests were the most stable and pretty fast (because no long timeouts are needed). Feature TestCafe Cypress Nightwatch.js Supported Browsers Local Chrome, Firefox, Opera, Safari, Internet Explorer, Microsoft Edge, Google Chrome Canary, Chromium Chrome, Chromium, Chrome Canary, Electron Geckodriver, Chromedriver, Microsoft Webdriver, Safaridriver Supported Browsers Headless Chrome, Firefox Electron Problems running headless Continuous Integration Support yes yes yes Setup easy via npm easy via npm easy via npm Usability +++ +++ ++ Speed (3 tests) 2 min (headless chrome and firefox) 1 min (only chrome headless) 1 min (chrome headed) 5 min (headless electron) 2,5 min (chrome headed) 7 min (chrome headed) headless not working Stability nice unstable \u2192 waiting times needed unstable \u2192 waiting times needed Documentation +++ ++ ++ Notes easy to find elements easy to find elements additional library needed to find selectors by text Other test libraries and frameworks we currently don't use: https://codecept.io/ https://funcunit.com/ https://www.browserstack.com/ http://nightwatchjs.org/ (used by Mozilla's Coral Project ) https://developers.google.com/web/updates/2017/04/headless-chrome","title":"Tests"},{"location":"developer-guide/tests/#how-we-test-our-code","text":"In any process, obsessing about the wait times will yield greater improvements than practically anything else, for longer than you might think. Automation, simplification, etc. are implementation details of that obsession. \u2014 Dan North","title":"How We Test Our Code"},{"location":"developer-guide/tests/#go","text":"To run all unit tests, type make test or go test ./internal/... in a terminal. These make targets are currently defined for tests: - test : Executes all tests found in a) /internal with a timeout of 20 min and verbose output and b) frontend/tests/unit - test-short : Executes only fast tests found in /internal with a timeout of 5 min and verbose output - test-race : Same as test but with race condition detector (much slower) and higher timeout of 60 min - test-codecov : Same as test but creates a coverage log in coverage.txt and sends it to Codecov (don't use it locally) - test-coverage : Same as test but creates a coverage.txt file as well as a human-readable report in coverage.html ; timeout is elevated to 30 min You can run single tests via go test -run in a package directory, e.g. /internal/photoprism : $ go test -run NameOfTest See docs for more info.","title":"Go"},{"location":"developer-guide/tests/#test-frameworks","text":"Go comes with a cool testing framework, it allows you to write test code using the same language, without needing to learn any library or test engine. Go advanced testing tips & tricks contains a lot of useful information. We only import testify/assert to save a few lines for common assertions. Todo: Use a SQL mock driver to test database interactions, for example https://github.com/DATA-DOG/go-sqlmock .","title":"Test Frameworks"},{"location":"developer-guide/tests/#slow-tests","text":"Slow tests and benchmarks can be skipped using the -short flag: func TestTimeConsuming ( t * testing . T ) { if testing . Short () { t . Skip ( \"skipping test in short mode.\" ) } ... } To execute: go test -short","title":"Slow Tests"},{"location":"developer-guide/tests/#javascript","text":"To run all javascript unit tests, type make test-js in a terminal. In case you want to run a single test add .only to the test you want to run e.g.: it . only ( \"should get album id\" , () => { const values = { ID : 5 , AlbumName : \"Christmas 2019\" , AlbumSlug : \"christmas-2019\" , AlbumUUID : 66 }; const album = new Album ( values ); const result = album . getId (); assert . equal ( result , \"66\" ); }); Test coverage output is saved to frontend/coverage/html","title":"Javascript"},{"location":"developer-guide/tests/#test-frameworks_1","text":"To test javascript code we use mocha in combination with karma , chai , sinon and the karma-istanbul-coverage-reporter .","title":"Test Frameworks"},{"location":"developer-guide/tests/#acceptance-tests","text":"","title":"Acceptance Tests"},{"location":"developer-guide/tests/#run-tests-within-the-docker-container","text":"You can run the tests from within the photoprism container in firefox or chromium. * make acceptance : executes all tests in headless chromium and firefox * make test-chromium : This executes all tests in headless chromium * make test-firefox : This executes all tests in headless firefox","title":"Run tests within the docker container"},{"location":"developer-guide/tests/#run-tests-locally","text":"Locally you can run the tests in all supported browsers (see table below). To run tests locally you need to install testcafe on your machine npm install -g testcafe Then you can execute tests with testcafe firefox,chrome,safari,opera -S \\ -s frontend/tests/acceptance/screenshots frontend/tests/acceptance/","title":"Run tests locally"},{"location":"developer-guide/tests/#test-frameworks_2","text":"Our goal was to implement UI acceptance tests using JavaScript, so that frontend developers are able to run and write them without learning Go. To make a final decision, we compared TestCafe , Cypress and Nightwatch.js . We agreed on using TestCafe as tests were the most stable and pretty fast (because no long timeouts are needed). Feature TestCafe Cypress Nightwatch.js Supported Browsers Local Chrome, Firefox, Opera, Safari, Internet Explorer, Microsoft Edge, Google Chrome Canary, Chromium Chrome, Chromium, Chrome Canary, Electron Geckodriver, Chromedriver, Microsoft Webdriver, Safaridriver Supported Browsers Headless Chrome, Firefox Electron Problems running headless Continuous Integration Support yes yes yes Setup easy via npm easy via npm easy via npm Usability +++ +++ ++ Speed (3 tests) 2 min (headless chrome and firefox) 1 min (only chrome headless) 1 min (chrome headed) 5 min (headless electron) 2,5 min (chrome headed) 7 min (chrome headed) headless not working Stability nice unstable \u2192 waiting times needed unstable \u2192 waiting times needed Documentation +++ ++ ++ Notes easy to find elements easy to find elements additional library needed to find selectors by text Other test libraries and frameworks we currently don't use: https://codecept.io/ https://funcunit.com/ https://www.browserstack.com/ http://nightwatchjs.org/ (used by Mozilla's Coral Project ) https://developers.google.com/web/updates/2017/04/headless-chrome","title":"Test Frameworks"},{"location":"developer-guide/translations/","text":"Translations \u00b6 PhotoPrism uses gettext for localizing frontend and backend. It's one of the most widely adopted standards for translating user interfaces. Human readable messages like File not found are used as ids for finding matching translations, and used as defaults whenever there is no translation available. Messages may optionally contain placeholders, like Found %{n} files , for numbers and other variables. We strongly recommend Poedit for creating and updating translations. Download is free for Mac, Windows and Linux. Its source code can be obtained on GitHub . Frontend \u00b6 Localizations can be found in /frontend/src/locales . The POT file, only containing message ids, is translations.pot . *.po files contain localized messages for each language , identified by their two-letter locale , like de.po for German. You can open, edit and save them with Poedit to update existing translations. Info As it doesn't seem necessary for now, and to reduce the amount of work, we don't maintain translations for dialects like de_AT or pt_BR . To add a new translation, open translations.pot , click on \"Create New Translation\" at the bottom, select the language, and start translating. When done, save your translation as *.po file using the two-letter language locale as name. In addition, the new language needs to be added to the Languages function in /frontend/src/options/options.js . If you have a working development environment in place: Running npm run gettext-compile in the frontend directory compiles existing translations into a single translations.json file. Now start a frontend build using npm run build or keep npm run watch running in the background to automatically recompile JS and CSS whenever there are changes. Lastly, make sure photoprism is running and open the Web UI in a supported browser. Changing the language in Settings automatically triggers a reload. To extract new or changed text needing translation from *.js and *.vue source code, run npm run gettext-extract in the frontend directory. This updates the POT file translations.pot . Apply changes to existing translations by clicking on \"Catalogue\" > \"Update from POT File...\" in the Poedit app menu. Note A binary *.mo (machine object) file will be automatically saved along with every *.po file. You won't be able to open those in a text editor, but please include them in git commits or when sending translations via email. The compiled translations.json file is not required for pull requests and often causes merge conflicts. Backend \u00b6 Only asynchronous notifications and certain API responses need translation to provide a consistent user experience. Technical log messages should be in English to avoid ambiguities and (even slightly) wrong translations. Localizations are kept in /assets/locales . The POT file, only containing message ids, is messages.pot . default.po files in sub directories contain localized messages for each language , identified by their two-letter locale , like de/default.po for German. You can open, edit and save them with Poedit. Please also add and commit binary *.mo files, which will be automatically created by Poedit. To add a new translation, open messages.pot , click on \"Create New Translation\" at the bottom, select the language, and start translating. When done, create a new directory (using the locale as name) and save your translation there as default.po . The POT file /assets/locales/messages.pot will be automatically updated when running go generate in /internal/i18n or make generate in the main project directory. Note that this will only work when you have gettext installed on your system. We recommend using our latest development image as described in the Developer Guide. Apply changes to existing translations by clicking on \"Catalogue\" > \"Update from POT File...\" in the Poedit app menu.","title":"Translations"},{"location":"developer-guide/translations/#translations","text":"PhotoPrism uses gettext for localizing frontend and backend. It's one of the most widely adopted standards for translating user interfaces. Human readable messages like File not found are used as ids for finding matching translations, and used as defaults whenever there is no translation available. Messages may optionally contain placeholders, like Found %{n} files , for numbers and other variables. We strongly recommend Poedit for creating and updating translations. Download is free for Mac, Windows and Linux. Its source code can be obtained on GitHub .","title":"Translations"},{"location":"developer-guide/translations/#frontend","text":"Localizations can be found in /frontend/src/locales . The POT file, only containing message ids, is translations.pot . *.po files contain localized messages for each language , identified by their two-letter locale , like de.po for German. You can open, edit and save them with Poedit to update existing translations. Info As it doesn't seem necessary for now, and to reduce the amount of work, we don't maintain translations for dialects like de_AT or pt_BR . To add a new translation, open translations.pot , click on \"Create New Translation\" at the bottom, select the language, and start translating. When done, save your translation as *.po file using the two-letter language locale as name. In addition, the new language needs to be added to the Languages function in /frontend/src/options/options.js . If you have a working development environment in place: Running npm run gettext-compile in the frontend directory compiles existing translations into a single translations.json file. Now start a frontend build using npm run build or keep npm run watch running in the background to automatically recompile JS and CSS whenever there are changes. Lastly, make sure photoprism is running and open the Web UI in a supported browser. Changing the language in Settings automatically triggers a reload. To extract new or changed text needing translation from *.js and *.vue source code, run npm run gettext-extract in the frontend directory. This updates the POT file translations.pot . Apply changes to existing translations by clicking on \"Catalogue\" > \"Update from POT File...\" in the Poedit app menu. Note A binary *.mo (machine object) file will be automatically saved along with every *.po file. You won't be able to open those in a text editor, but please include them in git commits or when sending translations via email. The compiled translations.json file is not required for pull requests and often causes merge conflicts.","title":"Frontend"},{"location":"developer-guide/translations/#backend","text":"Only asynchronous notifications and certain API responses need translation to provide a consistent user experience. Technical log messages should be in English to avoid ambiguities and (even slightly) wrong translations. Localizations are kept in /assets/locales . The POT file, only containing message ids, is messages.pot . default.po files in sub directories contain localized messages for each language , identified by their two-letter locale , like de/default.po for German. You can open, edit and save them with Poedit. Please also add and commit binary *.mo files, which will be automatically created by Poedit. To add a new translation, open messages.pot , click on \"Create New Translation\" at the bottom, select the language, and start translating. When done, create a new directory (using the locale as name) and save your translation there as default.po . The POT file /assets/locales/messages.pot will be automatically updated when running go generate in /internal/i18n or make generate in the main project directory. Note that this will only work when you have gettext installed on your system. We recommend using our latest development image as described in the Developer Guide. Apply changes to existing translations by clicking on \"Catalogue\" > \"Update from POT File...\" in the Poedit app menu.","title":"Backend"},{"location":"developer-guide/frontend/browsers/","text":"We should at least support the latest Firefox and Chrome on Linux, OS X and Windows. Ideally also Safari (OS X) and Explorer/Edge (Windows). Testing \u00b6 BrowserStack is free for open-source projects","title":"Browsers"},{"location":"developer-guide/frontend/browsers/#testing","text":"BrowserStack is free for open-source projects","title":"Testing"},{"location":"developer-guide/frontend/components/","text":"Our frontend code is structured into reusable VueJS components. So far, it was clear enough for developers to add features and send pull requests, so it's probably not necessary to document individual components in our Developer Guide. Let us know via email or chat when you have any questions! Frontend contains general information about the front-end libraries we use and how to trigger a build.","title":"UI Components"},{"location":"developer-guide/frontend/design/","text":"We strive to build an application that embraces simplicity and avoids unexpected behavior. It must be able to run on a wide range of devices. Its user interface must be easy to use for everyone. Design is a funny word. Some people think design means how it looks. But of course, if you dig deeper, it's really how it works. \u2014 Steve Jobs Choice is the enemy of productivity. Put another way, if your solution does everything, and has no opinions about anything, then it solves nothing. \u2014 Asim Aslam Any fool can make something complicated. It takes a genius to make it simple. \u2014 Woody Guthrie Icons \u00b6 Since Vuetify is based on Material Design, we stick with the following icons and only use other icons when absolutely necessary (e.g. for sharing): https://material.io/resources/icons/ Colors \u00b6 Our UI themes should all contain a color spectrum so that they look like a prism: https://www.nordtheme.com/#palettes-modularity https://www.schemecolor.com/?s=colorful https://www.schemecolor.com/?s=google https://www.schemecolor.com/memories-of-the-garden.php https://www.schemecolor.com/double-disclosure.php https://www.schemecolor.com/true-lovers-color-scheme.php https://www.schemecolor.com/sunset-painting.php https://www.schemecolor.com/happy-with-self.php It's easiest to use the context menu for this: Links \u00b6 Screenshots - development of our user interface in time lapse \u23f1 [[Open Source]] - why this has to be free software The 7 pillars of design - slides by Raffaella Isidori (Codemotion Berlin 2018) A fork + fixes for Google's Material Design icons","title":"Design"},{"location":"developer-guide/frontend/design/#icons","text":"Since Vuetify is based on Material Design, we stick with the following icons and only use other icons when absolutely necessary (e.g. for sharing): https://material.io/resources/icons/","title":"Icons"},{"location":"developer-guide/frontend/design/#colors","text":"Our UI themes should all contain a color spectrum so that they look like a prism: https://www.nordtheme.com/#palettes-modularity https://www.schemecolor.com/?s=colorful https://www.schemecolor.com/?s=google https://www.schemecolor.com/memories-of-the-garden.php https://www.schemecolor.com/double-disclosure.php https://www.schemecolor.com/true-lovers-color-scheme.php https://www.schemecolor.com/sunset-painting.php https://www.schemecolor.com/happy-with-self.php It's easiest to use the context menu for this:","title":"Colors"},{"location":"developer-guide/frontend/design/#links","text":"Screenshots - development of our user interface in time lapse \u23f1 [[Open Source]] - why this has to be free software The 7 pillars of design - slides by Raffaella Isidori (Codemotion Berlin 2018) A fork + fixes for Google's Material Design icons","title":"Links"},{"location":"developer-guide/frontend/introduction/","text":"Open a terminal and type photoprism start to start the built-in server. It will listen on localhost:2342 by default, see docker-compose.yml and Configuration . Frameworks \u00b6 Vuetify is a powerful open-source Material Design UI component framework for building modern single-page applications. It is based on VueJS , a JavaScript library that combines the best ideas from AngularJS (Google) and React (Facebook); development is community driven and the API fairly stable. Vuetify and VueJS are initialized in frontend/src/app.js . Webpack is used as a module loader / bundler. It creates single, optimized JS and CSS files in the server assets public build directory from the original source code. You can find the build configuration in frontend/webpack.config.js . For our docs and landing pages, we may use https://materializecss.com/ as a lightweight alternative to Vuetify. Components \u00b6 Components are reusable user-interface widgets. UI Components contains a list of custom components. Standard components like buttons or forms are well documented on vuetifyjs.com . Dependencies \u00b6 The full list of dependencies can be found in frontend/package.json . You need to run npm install in the frontend directory to install them (automatically happens during installation, see Makefile ). Run npm install -P [package name] to add a new package (library or framework). Building \u00b6 A build can be triggered by running npm run watch (watches for changes and re-builds when needed) or npm run build (single build) in the frontend directory . NPM is the default package manager that comes with NodeJS , a JavaScript run-time environment that executes JavaScript code outside of a browser. Links \u00b6 https://developers.google.com/web/progressive-web-apps/ https://github.com/vuejs-templates/pwa - a progressive web app template for VueJS https://hackernoon.com/a-progressive-web-app-in-vue-tutorial-part-1-the-vue-app-f9231b032a0b https://medium.com/the-web-tub/creating-your-first-vue-js-pwa-project-22f7c552fb34 https://developers.google.com/web/fundamentals/native-hardware/fullscreen/ https://webpack.js.org/configuration/optimization/ https://photoswipe.com/documentation/responsive-images.html https://seregpie.github.io/VueWordCloud/ - Word cloud for VueJS https://github.com/snorpey/jpg-glitch - JPEG Glitch lib for JS https://stylable.io/ - scopes styles to components so they don\u2019t \u201cleak\u201d and clash with other styles (not sure if this is of any use for us) Building the Google Photos Web UI - Antin Harasymiv on Medium Progressive Image Grid - arrange images in a responsive, progressive-loading grid managed in JavaScript, see #85","title":"Introduction"},{"location":"developer-guide/frontend/introduction/#frameworks","text":"Vuetify is a powerful open-source Material Design UI component framework for building modern single-page applications. It is based on VueJS , a JavaScript library that combines the best ideas from AngularJS (Google) and React (Facebook); development is community driven and the API fairly stable. Vuetify and VueJS are initialized in frontend/src/app.js . Webpack is used as a module loader / bundler. It creates single, optimized JS and CSS files in the server assets public build directory from the original source code. You can find the build configuration in frontend/webpack.config.js . For our docs and landing pages, we may use https://materializecss.com/ as a lightweight alternative to Vuetify.","title":"Frameworks"},{"location":"developer-guide/frontend/introduction/#components","text":"Components are reusable user-interface widgets. UI Components contains a list of custom components. Standard components like buttons or forms are well documented on vuetifyjs.com .","title":"Components"},{"location":"developer-guide/frontend/introduction/#dependencies","text":"The full list of dependencies can be found in frontend/package.json . You need to run npm install in the frontend directory to install them (automatically happens during installation, see Makefile ). Run npm install -P [package name] to add a new package (library or framework).","title":"Dependencies"},{"location":"developer-guide/frontend/introduction/#building","text":"A build can be triggered by running npm run watch (watches for changes and re-builds when needed) or npm run build (single build) in the frontend directory . NPM is the default package manager that comes with NodeJS , a JavaScript run-time environment that executes JavaScript code outside of a browser.","title":"Building"},{"location":"developer-guide/frontend/introduction/#links","text":"https://developers.google.com/web/progressive-web-apps/ https://github.com/vuejs-templates/pwa - a progressive web app template for VueJS https://hackernoon.com/a-progressive-web-app-in-vue-tutorial-part-1-the-vue-app-f9231b032a0b https://medium.com/the-web-tub/creating-your-first-vue-js-pwa-project-22f7c552fb34 https://developers.google.com/web/fundamentals/native-hardware/fullscreen/ https://webpack.js.org/configuration/optimization/ https://photoswipe.com/documentation/responsive-images.html https://seregpie.github.io/VueWordCloud/ - Word cloud for VueJS https://github.com/snorpey/jpg-glitch - JPEG Glitch lib for JS https://stylable.io/ - scopes styles to components so they don\u2019t \u201cleak\u201d and clash with other styles (not sure if this is of any use for us) Building the Google Photos Web UI - Antin Harasymiv on Medium Progressive Image Grid - arrange images in a responsive, progressive-loading grid managed in JavaScript, see #85","title":"Links"},{"location":"developer-guide/frontend/rest-api/","text":"Routes and parameters can be found in our API docs: https://godoc.org/github.com/photoprism/photoprism/internal/api Example: GET /api/v1/photos?count=10 Note: Routes are going to change while we are developing the frontend. The API is not covered by a deprecation policy. Links \u00b6 Mat Ryer: How I write Go HTTP services after seven years","title":"REST API"},{"location":"developer-guide/frontend/rest-api/#links","text":"Mat Ryer: How I write Go HTTP services after seven years","title":"Links"},{"location":"developer-guide/frontend/screenshots/","text":"Development of our user interface in time lapse \u23f1 \u00b6 August 15 , 2018 \u00b6 The first prototype was based on Bootstrap 4. September 6, 2018 \u00b6 We switched to the Vuetify component framework, which comes complete with everything modern Web applications need. September 7, 2018 \u00b6 Navigation was extended. September 7, 2018 \u00b6 We started to experiment with the search form. September 8, 2018 \u00b6 Search dropdowns got populated with options. September 10, 2018 \u00b6 New logo and speed-dial action button. September 11, 2018 \u00b6 September 19, 2018 \u00b6 Pastel colored buttons and photo selection. September 26, 2018 \u00b6 The detail view. July 3, 2019 \u00b6 Improved UI with flat look, photo upload and powerful filters as well as new pages for searching places and labels. January 24, 2020 \u00b6 January 26, 2020 \u00b6 June 24, 2020 \u00b6","title":"Screenshots"},{"location":"developer-guide/frontend/screenshots/#development-of-our-user-interface-in-time-lapse","text":"","title":"Development of our user interface in time lapse \u23f1"},{"location":"developer-guide/frontend/screenshots/#august-15-2018","text":"The first prototype was based on Bootstrap 4.","title":"August 15 , 2018"},{"location":"developer-guide/frontend/screenshots/#september-6-2018","text":"We switched to the Vuetify component framework, which comes complete with everything modern Web applications need.","title":"September 6, 2018"},{"location":"developer-guide/frontend/screenshots/#september-7-2018","text":"Navigation was extended.","title":"September 7, 2018"},{"location":"developer-guide/frontend/screenshots/#september-7-2018_1","text":"We started to experiment with the search form.","title":"September 7, 2018"},{"location":"developer-guide/frontend/screenshots/#september-8-2018","text":"Search dropdowns got populated with options.","title":"September 8, 2018"},{"location":"developer-guide/frontend/screenshots/#september-10-2018","text":"New logo and speed-dial action button.","title":"September 10, 2018"},{"location":"developer-guide/frontend/screenshots/#september-11-2018","text":"","title":"September 11, 2018"},{"location":"developer-guide/frontend/screenshots/#september-19-2018","text":"Pastel colored buttons and photo selection.","title":"September 19, 2018"},{"location":"developer-guide/frontend/screenshots/#september-26-2018","text":"The detail view.","title":"September 26, 2018"},{"location":"developer-guide/frontend/screenshots/#july-3-2019","text":"Improved UI with flat look, photo upload and powerful filters as well as new pages for searching places and labels.","title":"July 3, 2019"},{"location":"developer-guide/frontend/screenshots/#january-24-2020","text":"","title":"January 24, 2020"},{"location":"developer-guide/frontend/screenshots/#january-26-2020","text":"","title":"January 26, 2020"},{"location":"developer-guide/frontend/screenshots/#june-24-2020","text":"","title":"June 24, 2020"},{"location":"developer-guide/library/converting/","text":"Many photographers keep their originals in some sort of lossless RAW format instead of compressed JPEG, especially when shooting with a Digital SLR. Some mobile phones also support RAW or use HEIC/HEIF for a similar purpose. PhotoPrism aims at providing excellent support for all RAW formats, independent of camera brand and model. Please let us know when there is an issue with your specific device. Web browsers in general can not display RAW image files. They need to be converted, which is what our import and convert commands do. You'll also find a checkbox for this step in our Web UI. In addition, PhotoPrism now also supports TIFF, PNG, BMP and GIF files. Be aware that files in those formats often don't contain useful metadata and are typically used for screenshots, charts, graphs and icons only. Read-only mode \u00b6 Conversion is currently disabled in read-only mode because creating JPEGs from RAWs is a pretty expensive operation and it makes sense to store JPEGs right next to their RAW files so that they can be found and used again in the future. Otherwise it might not be possible to match the files again and you don't want to put the expensively created JPEG file in a temporary directory or do all this on the fly in memory, unless you have a really fast computer. Most users want to make a backup of their files, so files that belong together should not be randomly distributed across the file system. 20 years from now, it's probably easier to open a JPEG than render a proprietary RAW file again in good quality. However, we see the point of users who want to use PhotoPrism as a read-only photo viewer that should not create any files in their originals directory. The easiest solution is to create JPEGs manually or use another tool you trust to do this automatically. With some effort, it might be possible to extract embedded JPEGs in acceptable quality from many RAW formats and use those in read-only mode. Alternatively, JPEGs could be created in the cache directory with all the disadvantages mentioned above, the storage will be gone one way or the other. Note that JPEGs in full-resolution are relatively large and you won't be able to find or reuse them as files there have a different naming scheme based on the hash of the original file. Idea: Put converted images in cache/converted by default with an option to automatically move / copy them to the originals directory. Feedback welcome. Sips \u00b6 On a Mac, PhotoPrism can convert multiple files at once using Sips (pre-installed on OS X). It is not available for other operating systems, as far as we know. Darktable \u00b6 We've recently upgraded Darktable from 2.6.2 to 3.0.0. Since the old PPA is not maintained anymore, we switched to this repository that is hosted by SuSE: https://software.opensuse.org/download.html?project=graphics:darktable:master&package=darktable Note that PhotoPrism can only run one instance of darktable-cli because it uses a lock file. If you run it more than once, it will fail. Be prepared to wait a bit. Using Darktable as library \u00b6 We had the idea to use cgo and link directly against libdarktable.so to convert RAW images to JPEG, see darktable-dev mailing list . However this requires calling/wrapping a large number of C functions and also has other disadvantages . The idea is postponed until a clear benefit becomes visible. Running darktable-cli or any other binary that does the job (see above) seems to be the way to go. Comparison of RAW to JPEG converters \u00b6 darktable - popular open-source photography app and raw developer; available for Mac, Linux and Windows; supports XMP (compatible with photoshop/lightroom?) Mac OS X ships with sips : sips -s format jpeg IMAGE.RAW --out IMAGE.JPG Photivo - open-source photo processor; available for Mac, Linux and Windows; no XMP support? RawTherapee - open-source RAW image processing app; available for Mac, Linux and Windows; no XMP support? digiKam - open-source digital photo management application based on Qt (KDE); available for Mac, Linux and Windows; supports XMP (compatible with photoshop/lightroom?) UFRaw - Unidentified Flying Raw is a utility to read and manipulate raw images from digital cameras Tool Command line options Compatible OS JPG Diff* XMP support Possible settings EXIF Diff* Compatible with Raspberry (ARM64) Darktable 1) darktable-cli IMG_0310.CR2 IMG_0310_darktable1.jpg 2) darktable-cli IMG_0310_EDITED.CR2 IMG_0310_EDITED.xmp IMG_0310_EDITED_darktable2.jpg MacOSx, Linux, Windows **** yes (but seems to be not compatible with adobe xmps) ? **** yes Sips sips -s format jpeg IMG_0310.CR2 --out IMG_0310_sips.jpg MacOSx ***** no ? **** not available for ubuntu Rawtherapee rawtherapee-cli -o IMG_0310_rawtherapee.jpg -c IMG_0310.CR2 MacOSx, Linux, Windows *** no ? **** yes UFraw ufraw-batch --out-type=jpg --output=IMG_0310_ufraw.jpg IMG_0310.CR2 MacOSx, Linux, Windows * no ? ** yes ImageMagick magick IMG_0310.CR2 IMG_0310_magick.jpg MacOSx, Linux, Windows * no ? ** yes Digikam ? MacOSx, Linux, Windows - - - - - Photiva ? MacOSx, Linux, Windows - - - - - * Compared to JPG/EXIF converted from photoshop Image Diff \u00b6 The following table shows the difference between the JPEG files converted by Darktable, Sips, Rawtherapee, UFraw and ImageMagick compared to Adobe Photoshop. Red are pixel that differ from the photoshop version, white are equal pixels. In total 5 Images have been compared ( full results ). The diff was created using https://github.com/ewanmellor/git-diff-image . Tool Diff (left is Photoshop) Darktable Sips Rawtherapee UFraw ImageMagick EXIF Diff \u00b6 The following table shows the difference between the JPG files converted by the tools compared to JPG files converted by photoshop. 5 Images have been compared. Info Photoshop Sips Darktable Raw-therapee Image Magick UFraw Kind identical identical identical identical identical identical Size 2.881.969 bytes (EXIF)/ 2.7M (ls -alh) 2.673.777 bytes / 2.5M 5.446.710 bytes / 5.2M always bigger 3.467.998 bytes / 3.3M 3.467.998 bytes / 3.3M 1.558.587 bytes / 1.5M always smaller Where reference different different different different different Created reference different different different different different Modified reference different different different different different Dimension identical - 5472\u200a\u00d7\u200a3648 5472\u200a\u00d7\u200a3648 different - 5494\u200a\u00d7\u200a3666 different - 5488\u200a\u00d7\u200a3662 different - 5496\u200a\u00d7\u200a3670 different - 5496\u200a\u00d7\u200a3670 Device Make refrence identical identical identical not set not set Colour space reference identical identical identical identical identical Colour profile Adobe RGB (1998) different - Display P3 different - sRGB different - RTv2_sRGB not set not set Focal length reference identical identical identical not set not set Alpha Channel reference identical identical identical not set not set Red eye reference identical identical identical not set not set Metering Mode reference identical identical identical not set not set F number reference identical identical identical not set not set Exposure program reference identical identical identical not set not set Exposure time reference identical identical identical not set not set Latitude reference sometimes very small differences identical identical not set not set Longitude reference sometimes very small differences identical identical not set not set Adobe Photoshop / Lightroom \u00b6 Ideally we can convert images directly with Photoshop or Lightroom, if installed. It seems like Photoshop comes with some sort of command-line automation tool based on NodeJS: https://github.com/adobe-photoshop/generator-core See https://photo.stackexchange.com/questions/39532/command-line-approach-to-develop-raw-images-with-adobe-xmp-sidecars This needs further investigation. Contributions welcome! Todo / Reading List \u00b6 Compare the quality and XMP compatibility of different RAW converters #65 Investigate if PhotoShop or Lightroom can be used to convert images on the command line Collect example RAW files of common camera brands and models Figure out how we can implement \"auto-enhance\" (automatically fix exposure and write XMP file while converting to JPEG) https://howtogimp.com/raw-photos-in-gimp/ - RAW converters to use with GIMP https://github.com/mdouchement/hdr - HDR is a library that handles RAW image format written with Golang","title":"Converting RAW to JPEG"},{"location":"developer-guide/library/converting/#read-only-mode","text":"Conversion is currently disabled in read-only mode because creating JPEGs from RAWs is a pretty expensive operation and it makes sense to store JPEGs right next to their RAW files so that they can be found and used again in the future. Otherwise it might not be possible to match the files again and you don't want to put the expensively created JPEG file in a temporary directory or do all this on the fly in memory, unless you have a really fast computer. Most users want to make a backup of their files, so files that belong together should not be randomly distributed across the file system. 20 years from now, it's probably easier to open a JPEG than render a proprietary RAW file again in good quality. However, we see the point of users who want to use PhotoPrism as a read-only photo viewer that should not create any files in their originals directory. The easiest solution is to create JPEGs manually or use another tool you trust to do this automatically. With some effort, it might be possible to extract embedded JPEGs in acceptable quality from many RAW formats and use those in read-only mode. Alternatively, JPEGs could be created in the cache directory with all the disadvantages mentioned above, the storage will be gone one way or the other. Note that JPEGs in full-resolution are relatively large and you won't be able to find or reuse them as files there have a different naming scheme based on the hash of the original file. Idea: Put converted images in cache/converted by default with an option to automatically move / copy them to the originals directory. Feedback welcome.","title":"Read-only mode"},{"location":"developer-guide/library/converting/#sips","text":"On a Mac, PhotoPrism can convert multiple files at once using Sips (pre-installed on OS X). It is not available for other operating systems, as far as we know.","title":"Sips"},{"location":"developer-guide/library/converting/#darktable","text":"We've recently upgraded Darktable from 2.6.2 to 3.0.0. Since the old PPA is not maintained anymore, we switched to this repository that is hosted by SuSE: https://software.opensuse.org/download.html?project=graphics:darktable:master&package=darktable Note that PhotoPrism can only run one instance of darktable-cli because it uses a lock file. If you run it more than once, it will fail. Be prepared to wait a bit.","title":"Darktable"},{"location":"developer-guide/library/converting/#using-darktable-as-library","text":"We had the idea to use cgo and link directly against libdarktable.so to convert RAW images to JPEG, see darktable-dev mailing list . However this requires calling/wrapping a large number of C functions and also has other disadvantages . The idea is postponed until a clear benefit becomes visible. Running darktable-cli or any other binary that does the job (see above) seems to be the way to go.","title":"Using Darktable as library"},{"location":"developer-guide/library/converting/#comparison-of-raw-to-jpeg-converters","text":"darktable - popular open-source photography app and raw developer; available for Mac, Linux and Windows; supports XMP (compatible with photoshop/lightroom?) Mac OS X ships with sips : sips -s format jpeg IMAGE.RAW --out IMAGE.JPG Photivo - open-source photo processor; available for Mac, Linux and Windows; no XMP support? RawTherapee - open-source RAW image processing app; available for Mac, Linux and Windows; no XMP support? digiKam - open-source digital photo management application based on Qt (KDE); available for Mac, Linux and Windows; supports XMP (compatible with photoshop/lightroom?) UFRaw - Unidentified Flying Raw is a utility to read and manipulate raw images from digital cameras Tool Command line options Compatible OS JPG Diff* XMP support Possible settings EXIF Diff* Compatible with Raspberry (ARM64) Darktable 1) darktable-cli IMG_0310.CR2 IMG_0310_darktable1.jpg 2) darktable-cli IMG_0310_EDITED.CR2 IMG_0310_EDITED.xmp IMG_0310_EDITED_darktable2.jpg MacOSx, Linux, Windows **** yes (but seems to be not compatible with adobe xmps) ? **** yes Sips sips -s format jpeg IMG_0310.CR2 --out IMG_0310_sips.jpg MacOSx ***** no ? **** not available for ubuntu Rawtherapee rawtherapee-cli -o IMG_0310_rawtherapee.jpg -c IMG_0310.CR2 MacOSx, Linux, Windows *** no ? **** yes UFraw ufraw-batch --out-type=jpg --output=IMG_0310_ufraw.jpg IMG_0310.CR2 MacOSx, Linux, Windows * no ? ** yes ImageMagick magick IMG_0310.CR2 IMG_0310_magick.jpg MacOSx, Linux, Windows * no ? ** yes Digikam ? MacOSx, Linux, Windows - - - - - Photiva ? MacOSx, Linux, Windows - - - - - * Compared to JPG/EXIF converted from photoshop","title":"Comparison of RAW to JPEG converters"},{"location":"developer-guide/library/converting/#image-diff","text":"The following table shows the difference between the JPEG files converted by Darktable, Sips, Rawtherapee, UFraw and ImageMagick compared to Adobe Photoshop. Red are pixel that differ from the photoshop version, white are equal pixels. In total 5 Images have been compared ( full results ). The diff was created using https://github.com/ewanmellor/git-diff-image . Tool Diff (left is Photoshop) Darktable Sips Rawtherapee UFraw ImageMagick","title":"Image Diff"},{"location":"developer-guide/library/converting/#exif-diff","text":"The following table shows the difference between the JPG files converted by the tools compared to JPG files converted by photoshop. 5 Images have been compared. Info Photoshop Sips Darktable Raw-therapee Image Magick UFraw Kind identical identical identical identical identical identical Size 2.881.969 bytes (EXIF)/ 2.7M (ls -alh) 2.673.777 bytes / 2.5M 5.446.710 bytes / 5.2M always bigger 3.467.998 bytes / 3.3M 3.467.998 bytes / 3.3M 1.558.587 bytes / 1.5M always smaller Where reference different different different different different Created reference different different different different different Modified reference different different different different different Dimension identical - 5472\u200a\u00d7\u200a3648 5472\u200a\u00d7\u200a3648 different - 5494\u200a\u00d7\u200a3666 different - 5488\u200a\u00d7\u200a3662 different - 5496\u200a\u00d7\u200a3670 different - 5496\u200a\u00d7\u200a3670 Device Make refrence identical identical identical not set not set Colour space reference identical identical identical identical identical Colour profile Adobe RGB (1998) different - Display P3 different - sRGB different - RTv2_sRGB not set not set Focal length reference identical identical identical not set not set Alpha Channel reference identical identical identical not set not set Red eye reference identical identical identical not set not set Metering Mode reference identical identical identical not set not set F number reference identical identical identical not set not set Exposure program reference identical identical identical not set not set Exposure time reference identical identical identical not set not set Latitude reference sometimes very small differences identical identical not set not set Longitude reference sometimes very small differences identical identical not set not set","title":"EXIF Diff"},{"location":"developer-guide/library/converting/#adobe-photoshop-lightroom","text":"Ideally we can convert images directly with Photoshop or Lightroom, if installed. It seems like Photoshop comes with some sort of command-line automation tool based on NodeJS: https://github.com/adobe-photoshop/generator-core See https://photo.stackexchange.com/questions/39532/command-line-approach-to-develop-raw-images-with-adobe-xmp-sidecars This needs further investigation. Contributions welcome!","title":"Adobe Photoshop / Lightroom"},{"location":"developer-guide/library/converting/#todo-reading-list","text":"Compare the quality and XMP compatibility of different RAW converters #65 Investigate if PhotoShop or Lightroom can be used to convert images on the command line Collect example RAW files of common camera brands and models Figure out how we can implement \"auto-enhance\" (automatically fix exposure and write XMP file while converting to JPEG) https://howtogimp.com/raw-photos-in-gimp/ - RAW converters to use with GIMP https://github.com/mdouchement/hdr - HDR is a library that handles RAW image format written with Golang","title":"Todo / Reading List"},{"location":"developer-guide/library/heif/","text":"HEIF is a new image file format employing HEVC (h.265) image coding for the best compression ratios currently possible. Newer iPhones use it for internal photo storage. It is supported on iOS 11 and macOS High Sierra and later. Todo \u00b6 Figure out how to use HEIF with Go to create thumbnails (ideally without using cgo / c++ libraries) Links \u00b6 https://www.idownloadblog.com/2017/10/18/how-to-convert-heif-to-jpeg-imazing-heic-converter/ - How to convert HEIF images to JPEGs with iMazing HEIC Converter https://github.com/strukturag/libheif - libheif is a ISO/IEC 23008-12:2017 HEIF file format decoder and encoder (C++) https://github.com/nokiatech/heif - Reader/Writer Engine is an implementation of the HEIF standard to demonstrate its powerful features and capabilities (C++) https://github.com/monostream/tifig - A fast HEIF image converter aimed at thumbnailing https://github.com/perkeep/perkeep/issues/969 - HEIC/HEVC support in Perkeep https://github.com/jdeng/goheif/ - A decoder/converter for HEIC based on libde265 (CGO)","title":"High Efficiency Image File Format"},{"location":"developer-guide/library/heif/#todo","text":"Figure out how to use HEIF with Go to create thumbnails (ideally without using cgo / c++ libraries)","title":"Todo"},{"location":"developer-guide/library/heif/#links","text":"https://www.idownloadblog.com/2017/10/18/how-to-convert-heif-to-jpeg-imazing-heic-converter/ - How to convert HEIF images to JPEGs with iMazing HEIC Converter https://github.com/strukturag/libheif - libheif is a ISO/IEC 23008-12:2017 HEIF file format decoder and encoder (C++) https://github.com/nokiatech/heif - Reader/Writer Engine is an implementation of the HEIF standard to demonstrate its powerful features and capabilities (C++) https://github.com/monostream/tifig - A fast HEIF image converter aimed at thumbnailing https://github.com/perkeep/perkeep/issues/969 - HEIC/HEVC support in Perkeep https://github.com/jdeng/goheif/ - A decoder/converter for HEIC based on libde265 (CGO)","title":"Links"},{"location":"developer-guide/library/importing/","text":"As PhotoPrism is a complete photo management solution, it is not only possible to index existing images, but also to add / upload new files to a photo collection or delete existing photos to save storage. There has been a debate on whether PhotoPrism should be responsible for file naming, see Support Photos In Place on Hard Drive #41 and [[Concerns]]. As soon as you want the software to create new files or merge photo libraries from different devices, there is no other way. Therefore we're going to implement a read-only mode for those who want to use it as a gallery with reduced functionality, see Read-only mode #56 . Post Processing / Keyboard Shortcuts \u00b6 After importing new images, it would be amazing to be able to quickly sort / review them. This way the library stays clean and well organized, even without applying filters to hide bad shots. Apparently this is common among users of Adobe Bridge , a tool used by many professionals. They go through complete asset collections and sort photos using keyboard shortcuts, where keys toggle pre-defined tags or flags like \"favorite\". Upload \u00b6 Idea: We can use Webassembly for performance improvements / faster upload.","title":"Importing"},{"location":"developer-guide/library/importing/#post-processing-keyboard-shortcuts","text":"After importing new images, it would be amazing to be able to quickly sort / review them. This way the library stays clean and well organized, even without applying filters to hide bad shots. Apparently this is common among users of Adobe Bridge , a tool used by many professionals. They go through complete asset collections and sort photos using keyboard shortcuts, where keys toggle pre-defined tags or flags like \"favorite\".","title":"Post Processing / Keyboard Shortcuts"},{"location":"developer-guide/library/importing/#upload","text":"Idea: We can use Webassembly for performance improvements / faster upload.","title":"Upload"},{"location":"developer-guide/library/samples/","text":"For now we only want to support RAW and JPEG from the most popular camera brands/models. Therefore we need an archive of example pictures for testing purposes. In the tables below you see for which camera models we still need images. In case you have images from the requested cameras you want to share with us: * You can get an account for uploading example images to https://dl.photoprism.org/samples/ , please ask * You can also send us images per mail Most Popular Brands according to Flickr \u00b6 https://www.flickr.com/cameras Market Share by Brand (2016): \u00b6 DSLR cameras: Brand Share Canon 63.3% Nikon 31.6% Ricoh Imaging (Pentax) 4.8% System cameras: Brand Share Olympus 26.8% Canon 18.5% Sony 17.9% Brands with the highest market share 2016 Most popular camera models: \u00b6 Camera models supported by photoshop: \u00b6 https://helpx.adobe.com/camera-raw/kb/camera-raw-plug-supported-cameras.html","title":"Samples"},{"location":"developer-guide/library/samples/#most-popular-brands-according-to-flickr","text":"https://www.flickr.com/cameras","title":"Most Popular Brands according to Flickr"},{"location":"developer-guide/library/samples/#market-share-by-brand-2016","text":"DSLR cameras: Brand Share Canon 63.3% Nikon 31.6% Ricoh Imaging (Pentax) 4.8% System cameras: Brand Share Olympus 26.8% Canon 18.5% Sony 17.9% Brands with the highest market share 2016","title":"Market Share by Brand (2016):"},{"location":"developer-guide/library/samples/#most-popular-camera-models","text":"","title":"Most popular camera models:"},{"location":"developer-guide/library/samples/#camera-models-supported-by-photoshop","text":"https://helpx.adobe.com/camera-raw/kb/camera-raw-plug-supported-cameras.html","title":"Camera models supported by photoshop:"},{"location":"developer-guide/library/storage/","text":"We need to add file system abstraction, also to speed up testing. Afero seems to be the gold standard for this in the Go world: https://github.com/spf13/afero Issues \u00b6 Embedded Database + Bleve for search? #55 Postgres support? #47 Links \u00b6 https://github.com/rclone/rclone - rsync for cloud storage (Google Drive, AWS, One Drive, ...) https://github.com/minio - Object Storage for AI upper.io/db.v3 - a productive data access layer for Go LevelDB - fast key-value storage library written at Google (written in Go) Bleve - full-text search and indexing for Go TiDB - a distributed HTAP database compatible with the MySQL protocol (written in Go) KSQL - the Streaming SQL Engine for Apache Kafka CockroachDB - ultra-resilient SQL for global business (written in Go) LedisDB - a high performance NoSQL like Redis powered by Go https://github.com/go-pg/pg - Golang ORM with focus on PostgreSQL features and performance https://github.com/go-redis/redis - Type-safe Redis client for Golang","title":"Storage"},{"location":"developer-guide/library/storage/#issues","text":"Embedded Database + Bleve for search? #55 Postgres support? #47","title":"Issues"},{"location":"developer-guide/library/storage/#links","text":"https://github.com/rclone/rclone - rsync for cloud storage (Google Drive, AWS, One Drive, ...) https://github.com/minio - Object Storage for AI upper.io/db.v3 - a productive data access layer for Go LevelDB - fast key-value storage library written at Google (written in Go) Bleve - full-text search and indexing for Go TiDB - a distributed HTAP database compatible with the MySQL protocol (written in Go) KSQL - the Streaming SQL Engine for Apache Kafka CockroachDB - ultra-resilient SQL for global business (written in Go) LedisDB - a high performance NoSQL like Redis powered by Go https://github.com/go-pg/pg - Golang ORM with focus on PostgreSQL features and performance https://github.com/go-redis/redis - Type-safe Redis client for Golang","title":"Links"},{"location":"developer-guide/library/thumbnails/","text":"We use the disintegration/imaging package to create thumbnails. For best results, you should (at least) set jpeg quality to 95 and use the \"lanczos\" filter. Obviously this will require significantly more storage and CPU time. From our experience, \"cubic\" might be 30% faster than \"lanczos\" on modern desktop and server CPUs. Keep in mind that you only need to create thumbnails once and then can enjoy them for the rest of your life. Config Options \u00b6 --jpeg-quality value, -q value set to 95 for high-quality thumbnails (25-100) (default: 90) [$PHOTOPRISM_JPEG_QUALITY] --thumb-size value, -s value default thumbnail size limit in pixels (720-3840) (default: 2048) [$PHOTOPRISM_THUMB_SIZE] --thumb-limit value, -x value on-demand thumbnail size limit in pixels (720-3840) (default: 3840) [$PHOTOPRISM_THUMB_LIMIT] --thumb-uncached, -u on-demand rendering of default thumbnails (high memory and cpu usage) [$PHOTOPRISM_THUMB_UNCACHED] --thumb-filter value, -f value resample filter (best to worst: blackman, lanczos, cubic, linear) (default: \"lanczos\") [$PHOTOPRISM_THUMB_FILTER] Example \u00b6 You can limit the size of JPEG thumbnails using the -s parameter when you run commands: photoprism -s 720 start The minimum size is 720px. This will render the following images: 500px is used for tiles in search results, the others are mostly needed for classification. Size is still ~550kb with high quality (95). With lower JPEG quality (80), you'll get it down to ~100kb: photoprism -s 720 -q 80 start This page demonstrates and discusses the effects of JPEG compression: http://fotoforensics.com/tutorial-estq.php Image classification obviously works better with sharp images, so it's possible you'll get less accurate labels with higher compression. Please share your experience. If size limit is exceeded, for example because you use a large screen, originals will be used for displaying images in the frontend. This might result in the image displayed with wrong rotation if the browser doesn't rotate it automatically. Sizes \u00b6 Name Source Width Height Use colors fit_720 3 3 colors tile_50 tile_500 50 50 maps tile_100 tile_500 100 100 maps tile_224 tile_500 224 224 tensorflow left_224 fit_720 224 224 tensorflow right_224 fit_720 224 224 tensorflow tile_500 500 500 preview fit_720 720 720 lightbox fit_1280 fit_2048 1280 1024 lightbox fit_1920 fit_2048 1920 1200 lightbox fit_2048 2048 2048 lightbox fit_2560 2560 1600 lightbox / retina fit_3840 3840 2400 lightbox / retina Filters \u00b6 Source: https://ijarcce.com/wp-content/uploads/2016/02/IJARCCE-7.pdf Linear \u00b6 Bilinear interpolation takes a weighted average of the four neighborhood pixels to calculate its final interpolated value. The result is much smoother image than the original image. When all known pixel distances are equal, then the interpolated value is simply their sum divided by four. This technique performs interpolation in both directions, horizontal and vertical. This technique gives better result than nearest neighbor interpolation and take less computation time compared to bicubic interpolation. Cubic \u00b6 Catmull-Rom is a local interpolating spline developed for computer graphics purposes. Its initial use was in design of curves and surfaces, and has recently been used in several applications. Catmull-Rom splines are a family of cubic interpolating splines formulated such that the tangent at each point is calculated using the previous and next point on the spline. The results are similar to ones produced by bicubic interpolation with regards to sharpness, but the Catmull-Rom reconstruction is clearly superior in smooth signal region. Lanczos \u00b6 The Lanczos interpolation function is a mathematical formula used to smoothly interpolate the value of a digital image between its samples. It maps each sample of the given image to a translated and scaled copy of the Lanczos kernel, which is a sinc function windowed by the central hump of a dilated sinc function. The sum of these translated and scaled kernels is then evaluated at the desired pixel. Lanczos interpolation has the best properties in terms of detail preservation and minimal generation of aliasing artifacts for geometric transformations not involving strong down sampling. However higher order Lanczos interpolation requires high computational time, which makes it unsuitable for most commercial software. Blackman \u00b6 Blackman is a modification of Lanczos that has better control of ringing artifacts. Examples \u00b6 Original image: The same image resized from 600x400px to 150x100px using different resampling filters. From faster (lower quality) to slower (higher quality): Filter Resize result Nearest Neighbor Bilinear Sharp Bicubic Lanczos Links \u00b6 https://en.wikipedia.org/wiki/Comparison_gallery_of_image_scaling_algorithms https://en.wikipedia.org/wiki/Lanczos_resampling https://en.wikipedia.org/wiki/Image_scaling","title":"Thumbnails"},{"location":"developer-guide/library/thumbnails/#config-options","text":"--jpeg-quality value, -q value set to 95 for high-quality thumbnails (25-100) (default: 90) [$PHOTOPRISM_JPEG_QUALITY] --thumb-size value, -s value default thumbnail size limit in pixels (720-3840) (default: 2048) [$PHOTOPRISM_THUMB_SIZE] --thumb-limit value, -x value on-demand thumbnail size limit in pixels (720-3840) (default: 3840) [$PHOTOPRISM_THUMB_LIMIT] --thumb-uncached, -u on-demand rendering of default thumbnails (high memory and cpu usage) [$PHOTOPRISM_THUMB_UNCACHED] --thumb-filter value, -f value resample filter (best to worst: blackman, lanczos, cubic, linear) (default: \"lanczos\") [$PHOTOPRISM_THUMB_FILTER]","title":"Config Options"},{"location":"developer-guide/library/thumbnails/#example","text":"You can limit the size of JPEG thumbnails using the -s parameter when you run commands: photoprism -s 720 start The minimum size is 720px. This will render the following images: 500px is used for tiles in search results, the others are mostly needed for classification. Size is still ~550kb with high quality (95). With lower JPEG quality (80), you'll get it down to ~100kb: photoprism -s 720 -q 80 start This page demonstrates and discusses the effects of JPEG compression: http://fotoforensics.com/tutorial-estq.php Image classification obviously works better with sharp images, so it's possible you'll get less accurate labels with higher compression. Please share your experience. If size limit is exceeded, for example because you use a large screen, originals will be used for displaying images in the frontend. This might result in the image displayed with wrong rotation if the browser doesn't rotate it automatically.","title":"Example"},{"location":"developer-guide/library/thumbnails/#sizes","text":"Name Source Width Height Use colors fit_720 3 3 colors tile_50 tile_500 50 50 maps tile_100 tile_500 100 100 maps tile_224 tile_500 224 224 tensorflow left_224 fit_720 224 224 tensorflow right_224 fit_720 224 224 tensorflow tile_500 500 500 preview fit_720 720 720 lightbox fit_1280 fit_2048 1280 1024 lightbox fit_1920 fit_2048 1920 1200 lightbox fit_2048 2048 2048 lightbox fit_2560 2560 1600 lightbox / retina fit_3840 3840 2400 lightbox / retina","title":"Sizes"},{"location":"developer-guide/library/thumbnails/#filters","text":"Source: https://ijarcce.com/wp-content/uploads/2016/02/IJARCCE-7.pdf","title":"Filters"},{"location":"developer-guide/library/thumbnails/#linear","text":"Bilinear interpolation takes a weighted average of the four neighborhood pixels to calculate its final interpolated value. The result is much smoother image than the original image. When all known pixel distances are equal, then the interpolated value is simply their sum divided by four. This technique performs interpolation in both directions, horizontal and vertical. This technique gives better result than nearest neighbor interpolation and take less computation time compared to bicubic interpolation.","title":"Linear"},{"location":"developer-guide/library/thumbnails/#cubic","text":"Catmull-Rom is a local interpolating spline developed for computer graphics purposes. Its initial use was in design of curves and surfaces, and has recently been used in several applications. Catmull-Rom splines are a family of cubic interpolating splines formulated such that the tangent at each point is calculated using the previous and next point on the spline. The results are similar to ones produced by bicubic interpolation with regards to sharpness, but the Catmull-Rom reconstruction is clearly superior in smooth signal region.","title":"Cubic"},{"location":"developer-guide/library/thumbnails/#lanczos","text":"The Lanczos interpolation function is a mathematical formula used to smoothly interpolate the value of a digital image between its samples. It maps each sample of the given image to a translated and scaled copy of the Lanczos kernel, which is a sinc function windowed by the central hump of a dilated sinc function. The sum of these translated and scaled kernels is then evaluated at the desired pixel. Lanczos interpolation has the best properties in terms of detail preservation and minimal generation of aliasing artifacts for geometric transformations not involving strong down sampling. However higher order Lanczos interpolation requires high computational time, which makes it unsuitable for most commercial software.","title":"Lanczos"},{"location":"developer-guide/library/thumbnails/#blackman","text":"Blackman is a modification of Lanczos that has better control of ringing artifacts.","title":"Blackman"},{"location":"developer-guide/library/thumbnails/#examples","text":"Original image: The same image resized from 600x400px to 150x100px using different resampling filters. From faster (lower quality) to slower (higher quality): Filter Resize result Nearest Neighbor Bilinear Sharp Bicubic Lanczos","title":"Examples"},{"location":"developer-guide/library/thumbnails/#links","text":"https://en.wikipedia.org/wiki/Comparison_gallery_of_image_scaling_algorithms https://en.wikipedia.org/wiki/Lanczos_resampling https://en.wikipedia.org/wiki/Image_scaling","title":"Links"},{"location":"developer-guide/metadata/classification/","text":"Image classification is performed using a pre-trained model , NASNet Mobile 224 , that we have chosen because of its size, performance and accuracy. To get a basic understanding of how this works, you can read Image Classification using Deep Neural Networks . In addition, we manually matched the model classification with the labels you see in our UI: cat: label: cat threshold: 0.3 priority: 5 categories: - animal tabby cat: see: cat This was necessary because we didn't find a taxonomy suitable for consumers (mainly just scientific ones) and needed a lot of control to fine tune terms and their probability thresholds. The raw results were not useful to a typical user. Indexing too many words, categories and alternatives also negatively affects performance and leads to noise . It took us several months of testing until we were happy with the results and there are still labels to improve. Updating labels \u00b6 After editing or adding labels in rules.yml , you now have to run make generate in the main project directory to generate native Go source from this file. Pre-trained Models \u00b6 See also: TensorFlow Hub Source: https://github.com/tensorflow/models/blob/master/research/slim/README.md Neural nets work best when they have many parameters, making them powerful function approximators. However, this means they must be trained on very large datasets. Because training models from scratch can be a very computationally intensive process requiring days or even weeks, there are various pre-trained models available. These CNNs have been trained on the ILSVRC-2012-CLS image classification dataset. Note that the VGG and ResNet V1 parameters have been converted from their original caffe formats ( here and here ), whereas the Inception and ResNet V2 parameters have been trained internally at Google. Also be aware that these accuracies were computed by evaluating using a single image crop. PhotoPrism uses three crops, except for square images. Model TF-Slim File Checkpoint Top-1 Accuracy Top-5 Accuracy Inception V1 Code inception_v1_2016_08_28.tar.gz 69.8 89.6 Inception V2 Code inception_v2_2016_08_28.tar.gz 73.9 91.8 Inception V3 Code inception_v3_2016_08_28.tar.gz 78.0 93.9 Inception V4 Code inception_v4_2016_09_09.tar.gz 80.2 95.2 Inception-ResNet-v2 Code inception_resnet_v2_2016_08_30.tar.gz 80.4 95.3 ResNet V1 50 Code resnet_v1_50_2016_08_28.tar.gz 75.2 92.2 ResNet V1 101 Code resnet_v1_101_2016_08_28.tar.gz 76.4 92.9 ResNet V1 152 Code resnet_v1_152_2016_08_28.tar.gz 76.8 93.2 ResNet V2 50 ^ Code resnet_v2_50_2017_04_14.tar.gz 75.6 92.8 ResNet V2 101 ^ Code resnet_v2_101_2017_04_14.tar.gz 77.0 93.7 ResNet V2 152 ^ Code resnet_v2_152_2017_04_14.tar.gz 77.8 94.1 ResNet V2 200 Code TBA 79.9* 95.2* VGG 16 Code vgg_16_2016_08_28.tar.gz 71.5 89.8 VGG 19 Code vgg_19_2016_08_28.tar.gz 71.1 89.8 MobileNet_v1_1.0_224 Code mobilenet_v1_1.0_224.tgz 70.9 89.9 MobileNet_v1_0.50_160 Code mobilenet_v1_0.50_160.tgz 59.1 81.9 MobileNet_v1_0.25_128 Code mobilenet_v1_0.25_128.tgz 41.5 66.3 MobileNet_v2_1.4_224^* Code mobilenet_v2_1.4_224.tgz 74.9 92.5 MobileNet_v2_1.0_224^* Code mobilenet_v2_1.0_224.tgz 71.9 91.0 NASNet-A_Mobile_224 # Code nasnet-a_mobile_04_10_2017.tar.gz 74.0 91.6 NASNet-A_Large_331 # Code nasnet-a_large_04_10_2017.tar.gz 82.7 96.2 PNASNet-5_Large_331 Code pnasnet-5_large_2017_12_13.tar.gz 82.9 96.2 PNASNet-5_Mobile_224 Code pnasnet-5_mobile_2017_12_13.tar.gz 74.2 91.9 ^ ResNet V2 models use Inception pre-processing and input image size of 299 (use --preprocessing_name inception --eval_image_size 299 when using eval_image_classifier.py ). Performance numbers for ResNet V2 models are reported on the ImageNet validation set. (#) More information and details about the NASNet architectures are available at this README All 16 float MobileNet V1 models reported in the MobileNet Paper and all 16 quantized TensorFlow Lite compatible MobileNet V1 models can be found here . (^#) More details on MobileNetV2 models can be found here . (*): Results quoted from the paper . Here is an example of how to download the Inception V3 checkpoint: $ CHECKPOINT_DIR = /tmp/checkpoints $ mkdir ${ CHECKPOINT_DIR } $ wget http://download.tensorflow.org/models/inception_v3_2016_08_28.tar.gz $ tar -xvf inception_v3_2016_08_28.tar.gz $ mv inception_v3.ckpt ${ CHECKPOINT_DIR } $ rm inception_v3_2016_08_28.tar.gz Landmark detection \u00b6 DELF: DEep Local Features - https://github.com/tensorflow/models/tree/master/research/delf - Tensorflow implementation Types of neural networks \u00b6 Source: http://www.asimovinstitute.org/neural-network-zoo/ Links \u00b6 https://ai.facebook.com/blog/roberta-an-optimized-method-for-pretraining-self-supervised-nlp-systems/ - An optimized method for pretraining self-supervised NLP systems https://github.com/zihangdai/xlnet - Generalized Autoregressive Pretraining for Language Understanding https://pjreddie.com/darknet/yolo/ - real time image detection https://pjreddie.com/darknet/imagenet/ - using use Darknet to classify images https://github.com/ZanLabs/go-yolo - Golang binding for YOLO/Darknet recognition framework https://itnext.io/implementing-yolo-v3-in-tensorflow-tf-slim-c3c55ff59dbe - Implementing YOLO v3 in Tensorflow (TF-Slim) https://github.com/chewxy/lingo - provides the data structures and algorithms required for natural language processing https://modelzoo.co/ - Discover open source deep learning code and pretrained models https://polarr.ai/ - Efficient and Immersive C.V. experiences on the edge https://github.com/gildasch/gildas-ai https://www.tensorflow.org/lite/guide/hosted_models https://github.com/tensorflow/models/tree/master/research/slim/nets/nasnet https://www.wikidata.org/wiki/Wikidata:Database_download https://github.com/ropensci/wikitaxa https://datahub.io/collections/yago - YAGO3 is a huge semantic knowledge base, derived from Wikipedia WordNet and GeoNames Google AI Blog: Improving Inception and Image Classification in TensorFlow CNN Architectures: LeNet, AlexNet, VGG, GoogLeNet, ResNet and more Gildas Chabot - AI image search with Go & Tensorflow (slides)","title":"Image Classification"},{"location":"developer-guide/metadata/classification/#updating-labels","text":"After editing or adding labels in rules.yml , you now have to run make generate in the main project directory to generate native Go source from this file.","title":"Updating labels"},{"location":"developer-guide/metadata/classification/#pre-trained-models","text":"See also: TensorFlow Hub Source: https://github.com/tensorflow/models/blob/master/research/slim/README.md Neural nets work best when they have many parameters, making them powerful function approximators. However, this means they must be trained on very large datasets. Because training models from scratch can be a very computationally intensive process requiring days or even weeks, there are various pre-trained models available. These CNNs have been trained on the ILSVRC-2012-CLS image classification dataset. Note that the VGG and ResNet V1 parameters have been converted from their original caffe formats ( here and here ), whereas the Inception and ResNet V2 parameters have been trained internally at Google. Also be aware that these accuracies were computed by evaluating using a single image crop. PhotoPrism uses three crops, except for square images. Model TF-Slim File Checkpoint Top-1 Accuracy Top-5 Accuracy Inception V1 Code inception_v1_2016_08_28.tar.gz 69.8 89.6 Inception V2 Code inception_v2_2016_08_28.tar.gz 73.9 91.8 Inception V3 Code inception_v3_2016_08_28.tar.gz 78.0 93.9 Inception V4 Code inception_v4_2016_09_09.tar.gz 80.2 95.2 Inception-ResNet-v2 Code inception_resnet_v2_2016_08_30.tar.gz 80.4 95.3 ResNet V1 50 Code resnet_v1_50_2016_08_28.tar.gz 75.2 92.2 ResNet V1 101 Code resnet_v1_101_2016_08_28.tar.gz 76.4 92.9 ResNet V1 152 Code resnet_v1_152_2016_08_28.tar.gz 76.8 93.2 ResNet V2 50 ^ Code resnet_v2_50_2017_04_14.tar.gz 75.6 92.8 ResNet V2 101 ^ Code resnet_v2_101_2017_04_14.tar.gz 77.0 93.7 ResNet V2 152 ^ Code resnet_v2_152_2017_04_14.tar.gz 77.8 94.1 ResNet V2 200 Code TBA 79.9* 95.2* VGG 16 Code vgg_16_2016_08_28.tar.gz 71.5 89.8 VGG 19 Code vgg_19_2016_08_28.tar.gz 71.1 89.8 MobileNet_v1_1.0_224 Code mobilenet_v1_1.0_224.tgz 70.9 89.9 MobileNet_v1_0.50_160 Code mobilenet_v1_0.50_160.tgz 59.1 81.9 MobileNet_v1_0.25_128 Code mobilenet_v1_0.25_128.tgz 41.5 66.3 MobileNet_v2_1.4_224^* Code mobilenet_v2_1.4_224.tgz 74.9 92.5 MobileNet_v2_1.0_224^* Code mobilenet_v2_1.0_224.tgz 71.9 91.0 NASNet-A_Mobile_224 # Code nasnet-a_mobile_04_10_2017.tar.gz 74.0 91.6 NASNet-A_Large_331 # Code nasnet-a_large_04_10_2017.tar.gz 82.7 96.2 PNASNet-5_Large_331 Code pnasnet-5_large_2017_12_13.tar.gz 82.9 96.2 PNASNet-5_Mobile_224 Code pnasnet-5_mobile_2017_12_13.tar.gz 74.2 91.9 ^ ResNet V2 models use Inception pre-processing and input image size of 299 (use --preprocessing_name inception --eval_image_size 299 when using eval_image_classifier.py ). Performance numbers for ResNet V2 models are reported on the ImageNet validation set. (#) More information and details about the NASNet architectures are available at this README All 16 float MobileNet V1 models reported in the MobileNet Paper and all 16 quantized TensorFlow Lite compatible MobileNet V1 models can be found here . (^#) More details on MobileNetV2 models can be found here . (*): Results quoted from the paper . Here is an example of how to download the Inception V3 checkpoint: $ CHECKPOINT_DIR = /tmp/checkpoints $ mkdir ${ CHECKPOINT_DIR } $ wget http://download.tensorflow.org/models/inception_v3_2016_08_28.tar.gz $ tar -xvf inception_v3_2016_08_28.tar.gz $ mv inception_v3.ckpt ${ CHECKPOINT_DIR } $ rm inception_v3_2016_08_28.tar.gz","title":"Pre-trained Models"},{"location":"developer-guide/metadata/classification/#landmark-detection","text":"DELF: DEep Local Features - https://github.com/tensorflow/models/tree/master/research/delf - Tensorflow implementation","title":"Landmark detection"},{"location":"developer-guide/metadata/classification/#types-of-neural-networks","text":"Source: http://www.asimovinstitute.org/neural-network-zoo/","title":"Types of neural networks"},{"location":"developer-guide/metadata/classification/#links","text":"https://ai.facebook.com/blog/roberta-an-optimized-method-for-pretraining-self-supervised-nlp-systems/ - An optimized method for pretraining self-supervised NLP systems https://github.com/zihangdai/xlnet - Generalized Autoregressive Pretraining for Language Understanding https://pjreddie.com/darknet/yolo/ - real time image detection https://pjreddie.com/darknet/imagenet/ - using use Darknet to classify images https://github.com/ZanLabs/go-yolo - Golang binding for YOLO/Darknet recognition framework https://itnext.io/implementing-yolo-v3-in-tensorflow-tf-slim-c3c55ff59dbe - Implementing YOLO v3 in Tensorflow (TF-Slim) https://github.com/chewxy/lingo - provides the data structures and algorithms required for natural language processing https://modelzoo.co/ - Discover open source deep learning code and pretrained models https://polarr.ai/ - Efficient and Immersive C.V. experiences on the edge https://github.com/gildasch/gildas-ai https://www.tensorflow.org/lite/guide/hosted_models https://github.com/tensorflow/models/tree/master/research/slim/nets/nasnet https://www.wikidata.org/wiki/Wikidata:Database_download https://github.com/ropensci/wikitaxa https://datahub.io/collections/yago - YAGO3 is a huge semantic knowledge base, derived from Wikipedia WordNet and GeoNames Google AI Blog: Improving Inception and Image Classification in TensorFlow CNN Architectures: LeNet, AlexNet, VGG, GoogLeNet, ResNet and more Gildas Chabot - AI image search with Go & Tensorflow (slides)","title":"Links"},{"location":"developer-guide/metadata/colors/","text":"We've reimplemented color indexing using a 3x3 thumbnail. It enables us to search specific parts of an image. Our previous algorithm was not deterministic, so search would have returned different results every time. Demo: https://demo.photoprism.org/photos?q=green Colors \u00b6 See https://vuetifyjs.com/en/framework/colors TODO: Complete table with ID, Color Name, HTML Code and Sample ID Name Code Sample 0 Black #000000 1 Brown #795548 2 Grey #9E9E9E 3 White #FFFFFF 4 Purple #9C27B0 5 Gold #FFDF00 6 Blue #3F51B5 7 Cyan #00BCD4 8 Teal #009688 9 Green #4CAF50 A Lime #CDDC39 B Yellow #FFEB3B C Magenta #FF00FF D Orange #FF9800 E Red #F44336 F Pink #E91E63 ID Name Code Sample 0 Black #000000 1 Brown #A1887F #8D6E63 #A07F6C #9B7B5B #75645B #795548 #6D4C41 #5D4037 #9B6136 #C1A487 #AA8062 #6B5546 #B4B59C #B2B49B 2 Grey #E0E0E0 #9E9E9E #757575 #616161 #424242 #847A72 #DFE0E1 3 White #FFFFFF #E4E4E4 #E7E7E7 4 Purple #F3E5F5 #E1BEE7 #CE93D8 #BA68C8 #AB47BC #9C27B0 #9B318F #86007E #8E24AA #7B1FA2 #6A1B9A #4A148C #AA00FF #EDE7F6 #D1C4E9 #B39DDB #9575CD #7E57C2 #5E35B1 #673AB7 #512DA8 #4527A0 #311B92 #B388FF #7C4DFF #8E6493 #5E3A5E #440E79 #483678 #4E3880 #3B0E79 5 Gold #EDDEAC #E8B451 #C08A3E #A27D4b #755531 #D19327 #DEA253 #D5AA6F #F5EAD4 6 Blue #3F51B5 #C5CAE9 #5C6BC0 #3949AB #303F9F #283593 #1A237E #536DFE #3D5AFE #304FFE #2196F3 #BBDEFB #90CAF9 #64B5F6 #42A5F5 #1E88E5 #1976D2 #1565C0 #0D47A1 #82B1FF #448AFF #2979FF #2962FF #03A9F6 #B3E5FC #81D4FA #4FC3F7 #29B6F6 #039BE5 #0288D1 #0277BD #01579B #80D8FF #40C4FF #00B0FF #0091EA #607D8B #78909C #546E7A #37474F #E4EBFD #7DD3EA #076399 #28446B #4AC8F5 #0800F4 #012D5F 7 Cyan #B2EBF2 #80DEEA #4DD0E1 #26C6DA #00B8D4 #00BCD4 #00ACC1 #0097A7 #00838F #006064 #84FFFF #18FFFF #00E5FF 8 Teal #009688 #00897B #00796B #00695C #045D5C #245A5F #03454F #2C545E #174741 9 Green #E8F5E9 #C8E6C9 #ABC7B0 #A5D6A7 #81C784 #66BB6A #4CAF50 #43A047 #388E3C #2E7D32 #1B5E20 #F1F8E9 #DCEDC8 #C5E1A5 #AED581 #8BC34A #9CCC65 #7CB342 #689F38 #558B2F #33691E #B9F6CA #69F0AE #00C853 #00E676 #CCFF90 #B2FF59 #76FF03 #64DD17 #DDD579 #EEECA2 #244E3B #9A9D47 #BEBD76 #5C5A30 #B3C16C #ACA783 #474C25 #CDD087 #796D41 A Lime #F0F4C3 #E6EE9C #DCE775 #D4E157 #CDDC39 #C0CA33 #AFB42B #EEFF41 #C6FF00 #AEEA00 B Yellow #FFF9C4 #FFF59D #FFF176 #FFEE58 #FFFF8D #FFFF00 #FFD54F #FFCA28 #E3CE81 #D1AF52 #EEBB2B #D3A83A #C5A702 #9F8201 #E8CE03 C Magenta #FF00FF #E500E5 #F000B5 #CE009B #C0055B #B00085 #A82863 #5B002F #4B0121 #860225 #CB023D #64071A #9E0047 #DC7ACF D Orange #FF9800 #FFA726 #FB8C00 #F57C00 #EF6C00 #FF9100 #FF6D00 #FD9A31 #7D2704 #FD571F #F86704 #FD9A00 #FE8A00 #F19652 #E58347 #C94C30 #9F5601 #FA6801 #F9A825 #BB723D E Red #FF5252 #F44336 #EF5350 #E53935 #F6292E #FC252D #D32F2F #C62828 #BA2830 #B71C1C #D50000 #DB0806 #CF0904 #D81A14 #CC1708 #D80807 #DE2616 #EE240F #A1211F #701219 #511218 #491114 F Pink #FCE4EC #FDC8EB #E79FA6 #F8BBD0 #F48FB1 #FF80AB #FF4081 #F50057 #F06292 #EC407A #E91E63 #D81B60 #C2185B Black: \"black\", // 0 Brown: \"brown\", // 1 Grey: \"grey\", // 2 White: \"white\", // 3 Purple: \"purple\", // 4 Gold: \"gold\", // 5 Blue: \"blue\", // 6 Cyan: \"cyan\", // 7 Teal: \"teal\", // 8 Green: \"green\", // 9 Lime: \"lime\", // A Yellow: \"yellow\", // B Magenta: \"magenta\", // C Orange: \"orange\", // D Red: \"red\", // E Pink: \"pink\", // F HCL vs HSL \u00b6 See also https://github.com/lucasb-eyer/go-colorful#so-which-colorspace-should-i-use Issues \u00b6 Improved color indexing #7 Links \u00b6 https://opencv.org/ https://github.com/RobCherry/vibrant","title":"Color Extraction"},{"location":"developer-guide/metadata/colors/#colors","text":"See https://vuetifyjs.com/en/framework/colors TODO: Complete table with ID, Color Name, HTML Code and Sample ID Name Code Sample 0 Black #000000 1 Brown #795548 2 Grey #9E9E9E 3 White #FFFFFF 4 Purple #9C27B0 5 Gold #FFDF00 6 Blue #3F51B5 7 Cyan #00BCD4 8 Teal #009688 9 Green #4CAF50 A Lime #CDDC39 B Yellow #FFEB3B C Magenta #FF00FF D Orange #FF9800 E Red #F44336 F Pink #E91E63 ID Name Code Sample 0 Black #000000 1 Brown #A1887F #8D6E63 #A07F6C #9B7B5B #75645B #795548 #6D4C41 #5D4037 #9B6136 #C1A487 #AA8062 #6B5546 #B4B59C #B2B49B 2 Grey #E0E0E0 #9E9E9E #757575 #616161 #424242 #847A72 #DFE0E1 3 White #FFFFFF #E4E4E4 #E7E7E7 4 Purple #F3E5F5 #E1BEE7 #CE93D8 #BA68C8 #AB47BC #9C27B0 #9B318F #86007E #8E24AA #7B1FA2 #6A1B9A #4A148C #AA00FF #EDE7F6 #D1C4E9 #B39DDB #9575CD #7E57C2 #5E35B1 #673AB7 #512DA8 #4527A0 #311B92 #B388FF #7C4DFF #8E6493 #5E3A5E #440E79 #483678 #4E3880 #3B0E79 5 Gold #EDDEAC #E8B451 #C08A3E #A27D4b #755531 #D19327 #DEA253 #D5AA6F #F5EAD4 6 Blue #3F51B5 #C5CAE9 #5C6BC0 #3949AB #303F9F #283593 #1A237E #536DFE #3D5AFE #304FFE #2196F3 #BBDEFB #90CAF9 #64B5F6 #42A5F5 #1E88E5 #1976D2 #1565C0 #0D47A1 #82B1FF #448AFF #2979FF #2962FF #03A9F6 #B3E5FC #81D4FA #4FC3F7 #29B6F6 #039BE5 #0288D1 #0277BD #01579B #80D8FF #40C4FF #00B0FF #0091EA #607D8B #78909C #546E7A #37474F #E4EBFD #7DD3EA #076399 #28446B #4AC8F5 #0800F4 #012D5F 7 Cyan #B2EBF2 #80DEEA #4DD0E1 #26C6DA #00B8D4 #00BCD4 #00ACC1 #0097A7 #00838F #006064 #84FFFF #18FFFF #00E5FF 8 Teal #009688 #00897B #00796B #00695C #045D5C #245A5F #03454F #2C545E #174741 9 Green #E8F5E9 #C8E6C9 #ABC7B0 #A5D6A7 #81C784 #66BB6A #4CAF50 #43A047 #388E3C #2E7D32 #1B5E20 #F1F8E9 #DCEDC8 #C5E1A5 #AED581 #8BC34A #9CCC65 #7CB342 #689F38 #558B2F #33691E #B9F6CA #69F0AE #00C853 #00E676 #CCFF90 #B2FF59 #76FF03 #64DD17 #DDD579 #EEECA2 #244E3B #9A9D47 #BEBD76 #5C5A30 #B3C16C #ACA783 #474C25 #CDD087 #796D41 A Lime #F0F4C3 #E6EE9C #DCE775 #D4E157 #CDDC39 #C0CA33 #AFB42B #EEFF41 #C6FF00 #AEEA00 B Yellow #FFF9C4 #FFF59D #FFF176 #FFEE58 #FFFF8D #FFFF00 #FFD54F #FFCA28 #E3CE81 #D1AF52 #EEBB2B #D3A83A #C5A702 #9F8201 #E8CE03 C Magenta #FF00FF #E500E5 #F000B5 #CE009B #C0055B #B00085 #A82863 #5B002F #4B0121 #860225 #CB023D #64071A #9E0047 #DC7ACF D Orange #FF9800 #FFA726 #FB8C00 #F57C00 #EF6C00 #FF9100 #FF6D00 #FD9A31 #7D2704 #FD571F #F86704 #FD9A00 #FE8A00 #F19652 #E58347 #C94C30 #9F5601 #FA6801 #F9A825 #BB723D E Red #FF5252 #F44336 #EF5350 #E53935 #F6292E #FC252D #D32F2F #C62828 #BA2830 #B71C1C #D50000 #DB0806 #CF0904 #D81A14 #CC1708 #D80807 #DE2616 #EE240F #A1211F #701219 #511218 #491114 F Pink #FCE4EC #FDC8EB #E79FA6 #F8BBD0 #F48FB1 #FF80AB #FF4081 #F50057 #F06292 #EC407A #E91E63 #D81B60 #C2185B Black: \"black\", // 0 Brown: \"brown\", // 1 Grey: \"grey\", // 2 White: \"white\", // 3 Purple: \"purple\", // 4 Gold: \"gold\", // 5 Blue: \"blue\", // 6 Cyan: \"cyan\", // 7 Teal: \"teal\", // 8 Green: \"green\", // 9 Lime: \"lime\", // A Yellow: \"yellow\", // B Magenta: \"magenta\", // C Orange: \"orange\", // D Red: \"red\", // E Pink: \"pink\", // F","title":"Colors"},{"location":"developer-guide/metadata/colors/#hcl-vs-hsl","text":"See also https://github.com/lucasb-eyer/go-colorful#so-which-colorspace-should-i-use","title":"HCL vs HSL"},{"location":"developer-guide/metadata/colors/#issues","text":"Improved color indexing #7","title":"Issues"},{"location":"developer-guide/metadata/colors/#links","text":"https://opencv.org/ https://github.com/RobCherry/vibrant","title":"Links"},{"location":"developer-guide/metadata/edit-exif/","text":"Edit EXIF metadata for testing \u00b6 Exiftool \u2192 https://exiftool.org/ Installation possible via brew or from homepage Command line example \u00b6 exiftool -CreateDate=\"1919:05:04 05:59:26+02:00\" dog_toshi_yellow.jpg Further examples can be found here: https://exiftool.org/examples.html","title":"Edit EXIF"},{"location":"developer-guide/metadata/edit-exif/#edit-exif-metadata-for-testing","text":"Exiftool \u2192 https://exiftool.org/ Installation possible via brew or from homepage","title":"Edit EXIF metadata for testing"},{"location":"developer-guide/metadata/edit-exif/#command-line-example","text":"exiftool -CreateDate=\"1919:05:04 05:59:26+02:00\" dog_toshi_yellow.jpg Further examples can be found here: https://exiftool.org/examples.html","title":"Command line example"},{"location":"developer-guide/metadata/exif/","text":"We are using the dsoprea/go-exif package to extract EXIF information. See internal/meta/exif.go for which tags are integrated into PhotoPrism. See the official EXIF specification for more information about EXIF tags. Screenshots \u00b6 This is how other apps show metadata:","title":"EXIF"},{"location":"developer-guide/metadata/exif/#screenshots","text":"This is how other apps show metadata:","title":"Screenshots"},{"location":"developer-guide/metadata/face-recognition/","text":"Since we're already linking against TensorFlow and want to keep the number of dependencies small, we should investigate alternative approaches in addition to the obvious solution to use dlib (which is the popular/standard way, see go-face ). Pigo is a pure Go implementation for Face Detection , but it can not do Face Recognition . Lots of useful information provided by Emmanuel Leroy can be found in [[Inbox]]. Links \u00b6 https://cheppers.com/deploying-distributed-face-recognition-application-kubernetes - Deploying a distributed face-recognition application with Kubernetes http://dlib.net/ - Machine learning library, good for face recognition https://github.com/Kagami/go-face - implements face recognition for Go using dlib https://hackernoon.com/face-recognition-with-go-676a555b8a7e - face recognition howto using Kagami/go-face https://github.com/esimov/pigo - Pigo is a face detection library implemented in Go https://gocv.io/ - GoCV gives access to the OpenCV 4 computer vision library https://github.com/davidsandberg/facenet - Face Recognition using Tensorflow (Python, not Go)","title":"Face Recognition"},{"location":"developer-guide/metadata/face-recognition/#links","text":"https://cheppers.com/deploying-distributed-face-recognition-application-kubernetes - Deploying a distributed face-recognition application with Kubernetes http://dlib.net/ - Machine learning library, good for face recognition https://github.com/Kagami/go-face - implements face recognition for Go using dlib https://hackernoon.com/face-recognition-with-go-676a555b8a7e - face recognition howto using Kagami/go-face https://github.com/esimov/pigo - Pigo is a face detection library implemented in Go https://gocv.io/ - GoCV gives access to the OpenCV 4 computer vision library https://github.com/davidsandberg/facenet - Face Recognition using Tensorflow (Python, not Go)","title":"Links"},{"location":"developer-guide/metadata/geocoding/","text":"We've recently launched PhotoPrism Places , a Geocoding API that replaces OpenStreetMap development infrastructure. Our users now enjoy much better performance, higher availability and more privacy. In addition, we're going to add information about public events that have taken place at a location. This can be used to automatically create albums of popular music festivals or sports events. We are happy to assist other OSS projects that don't have the time or expertise to run their own infrastructure. Example Request ## \u00b6 https://places.photoprism.org/v1/location/149ce78563 { \"id\" : \"149ce78563\" , \"name\" : \"Pink Beach\" , \"category\" : \"nature\" , \"timezone\" : \"Europe/Athens\" , \"lat\" : 35.26963621850717 , \"lng\" : 23.53695076231683 , \"place\" : { \"id\" : \"149ce78563\" , \"label\" : \"Chrisoskalitissa, Crete, Greece\" , \"city\" : \"Chrisoskalitissa\" , \"state\" : \"Crete\" , \"country\" : \"gr\" }, \"events\" :[], \"licence\" : \"Data \u00a9 OpenStreetMap contributors\" } Privacy \u00b6 Geocoding requests are NOT logged, but developers can of course see cached items in MariaDB without personal information. That's the point of a cache. Those will be randomly distributed with hot spots around tourist attractions and big cities. Because of HTTPS, your internet provider can't see the exact request, just that you contacted a server. The API approximates coordinates, encodes them with S2 and doesn't care about street or house number: Performance \u00b6 First benchmarks show that up to 2500 req/s can be handled. Compare this with the pricing of commercial providers and you'll see the value. Response times range from 10ms to 7\u03bcs, depending on the query and cache. If you prefer running this on-site: We use a 6-core Intel Xeon processor, 320 GB of SSD and 16 GB of memory. In addition you'll have to download ~100 GB of data. Due to the properties of S2 cell IDs, scaling and sharding should be easy if needed. Event Discovery \u00b6 https://schedjoules.github.io/event-discovery-api/#introduction https://www.gdeltproject.org/data.html#rawdatafiles Open Source Libraries \u00b6 https://tegola.io/ - An open source vector tile server written in Go https://tegola.io/tutorials/tegola-with-open-layers/ - Using Tegola with OpenLayers https://github.com/go-spatial/tegola-osm - scripts for importing and running a mirror of OSM with tegola https://pelias.io/ - Pelias Geocoder ( GitHub ) https://github.com/Leaflet/Leaflet - JavaScript library for mobile-friendly interactive maps https://github.com/tidwall/tile38 - a geospatial database and realtime geofencing server https://github.com/melihmucuk/geocache - an in-memory cache that is suitable for geolocation based applications https://github.com/aaronland/go-slippy-tiles - a proxy for map tiles https://github.com/paulmach/osm - a general purpose library for reading, writing and working with OpenStreetMap data https://github.com/maguro/pbf - a Go-based OpenStreetMap PBF encoder/ decoder https://github.com/golang/geo - S2 geometry library in Go https://gist.github.com/antoniomo/3371e44cbe2f0cc75a525aac0d188cfb - example for S2 geometry library https://github.com/tidwall/redcon - Redis compatible server framework (Go) https://github.com/siddontang/ledisdb - a high performance NoSQL DB powered by Go ( homepage ) https://github.com/blevesearch/bleve/tree/master/geo - geo support in bleve OpenStreetMap \u00b6 At the moment, we use the reverse lookup API of OpenStreetMap as well as the their tiles for our Leaflet-based Places page. Code: https://github.com/photoprism/photoprism/blob/develop/internal/photoprism/openstreetmap.go Commercial Maps \u00b6 https://developers.google.com/maps/documentation/ https://www.mapbox.com/maps/ Tutorials \u00b6 https://developers.google.com/maps/solutions/store-locator/clothing-store-locator#findnearsql https://blog.mastermaps.com/2014/08/showing-geotagged-photos-on-leaflet-map.html - Showing geotagged photos on a Leaflet map https://rubenspgcavalcante.github.io/leaflet-ant-path/ - Animate polylines as ants walking in a path","title":"Geocoding"},{"location":"developer-guide/metadata/geocoding/#example-request","text":"https://places.photoprism.org/v1/location/149ce78563 { \"id\" : \"149ce78563\" , \"name\" : \"Pink Beach\" , \"category\" : \"nature\" , \"timezone\" : \"Europe/Athens\" , \"lat\" : 35.26963621850717 , \"lng\" : 23.53695076231683 , \"place\" : { \"id\" : \"149ce78563\" , \"label\" : \"Chrisoskalitissa, Crete, Greece\" , \"city\" : \"Chrisoskalitissa\" , \"state\" : \"Crete\" , \"country\" : \"gr\" }, \"events\" :[], \"licence\" : \"Data \u00a9 OpenStreetMap contributors\" }","title":"Example Request ##"},{"location":"developer-guide/metadata/geocoding/#privacy","text":"Geocoding requests are NOT logged, but developers can of course see cached items in MariaDB without personal information. That's the point of a cache. Those will be randomly distributed with hot spots around tourist attractions and big cities. Because of HTTPS, your internet provider can't see the exact request, just that you contacted a server. The API approximates coordinates, encodes them with S2 and doesn't care about street or house number:","title":"Privacy"},{"location":"developer-guide/metadata/geocoding/#performance","text":"First benchmarks show that up to 2500 req/s can be handled. Compare this with the pricing of commercial providers and you'll see the value. Response times range from 10ms to 7\u03bcs, depending on the query and cache. If you prefer running this on-site: We use a 6-core Intel Xeon processor, 320 GB of SSD and 16 GB of memory. In addition you'll have to download ~100 GB of data. Due to the properties of S2 cell IDs, scaling and sharding should be easy if needed.","title":"Performance"},{"location":"developer-guide/metadata/geocoding/#event-discovery","text":"https://schedjoules.github.io/event-discovery-api/#introduction https://www.gdeltproject.org/data.html#rawdatafiles","title":"Event Discovery"},{"location":"developer-guide/metadata/geocoding/#open-source-libraries","text":"https://tegola.io/ - An open source vector tile server written in Go https://tegola.io/tutorials/tegola-with-open-layers/ - Using Tegola with OpenLayers https://github.com/go-spatial/tegola-osm - scripts for importing and running a mirror of OSM with tegola https://pelias.io/ - Pelias Geocoder ( GitHub ) https://github.com/Leaflet/Leaflet - JavaScript library for mobile-friendly interactive maps https://github.com/tidwall/tile38 - a geospatial database and realtime geofencing server https://github.com/melihmucuk/geocache - an in-memory cache that is suitable for geolocation based applications https://github.com/aaronland/go-slippy-tiles - a proxy for map tiles https://github.com/paulmach/osm - a general purpose library for reading, writing and working with OpenStreetMap data https://github.com/maguro/pbf - a Go-based OpenStreetMap PBF encoder/ decoder https://github.com/golang/geo - S2 geometry library in Go https://gist.github.com/antoniomo/3371e44cbe2f0cc75a525aac0d188cfb - example for S2 geometry library https://github.com/tidwall/redcon - Redis compatible server framework (Go) https://github.com/siddontang/ledisdb - a high performance NoSQL DB powered by Go ( homepage ) https://github.com/blevesearch/bleve/tree/master/geo - geo support in bleve","title":"Open Source Libraries"},{"location":"developer-guide/metadata/geocoding/#openstreetmap","text":"At the moment, we use the reverse lookup API of OpenStreetMap as well as the their tiles for our Leaflet-based Places page. Code: https://github.com/photoprism/photoprism/blob/develop/internal/photoprism/openstreetmap.go","title":"OpenStreetMap"},{"location":"developer-guide/metadata/geocoding/#commercial-maps","text":"https://developers.google.com/maps/documentation/ https://www.mapbox.com/maps/","title":"Commercial Maps"},{"location":"developer-guide/metadata/geocoding/#tutorials","text":"https://developers.google.com/maps/solutions/store-locator/clothing-store-locator#findnearsql https://blog.mastermaps.com/2014/08/showing-geotagged-photos-on-leaflet-map.html - Showing geotagged photos on a Leaflet map https://rubenspgcavalcante.github.io/leaflet-ant-path/ - Animate polylines as ants walking in a path","title":"Tutorials"},{"location":"developer-guide/metadata/xmp/","text":"XMP (Extensible Metadata Platform) is the standard sidecar file format supported by Adobe Lightroom. While YAML files might be easier to understand, read and edit for humans, using the XML-based XMP format simplifies importing metadata from Lightroom and we can leverage a documented standard. Ideally, data can be kept in sync continuously between PhotoPrism and other photo management applications. A proof-of-concept for reading Title , Copyright , Artist and Description is implemented but full support is a lot more work, contributions welcome. One issue is proper XML parsing in Go as basic types like date and time are not supported by xml.Unmarshaler . GPS coordinates are not stored as float but as a string like 52,27.5814N . The original plan to build upon go-xmp didn't work out as we couldn't read many fields, so we're using pure Go for now until we find a way to get the data we need with go-xmp . It might be a bug and/or it's an issue with our specific XMP files. Please send more XMP files for testing ( pull request ): https://github.com/photoprism/photoprism/tree/develop/internal/meta/testdata Todo \u00b6 Experiment with Adobe Lightroom to see how it uses sidecar files. The new version doesn't seem to use XMP to automatically sync metadata anymore, probably because Adobe focuses on cloud storage. Needs further investigation. Create a matrix showing what fields are used/supported by which application/tool (Photoshop, Lightroom, Darktable and others, see Read http://www.exiv2.org/tags-xmp-crs.html (Camera Raw Schema) Issues ## \u00b6 Store metadata in the filesystem #4 Compare the quality and XMP compatibility of different RAW converters #65 Links \u00b6 https://github.com/trimmer-io/go-xmp - A native Go SDK for the Extensible Metadata Platform (XMP) Adobe XMP Specification Part 1 , Part 2 and Part 3 , a.k.a ISO 16684-1:2011(E) XMP code in GIMP - Nothing beyond some comments. It was a code drop, we needed the feature, but unfortunately the original contributor left.","title":"XMP"},{"location":"developer-guide/metadata/xmp/#todo","text":"Experiment with Adobe Lightroom to see how it uses sidecar files. The new version doesn't seem to use XMP to automatically sync metadata anymore, probably because Adobe focuses on cloud storage. Needs further investigation. Create a matrix showing what fields are used/supported by which application/tool (Photoshop, Lightroom, Darktable and others, see Read http://www.exiv2.org/tags-xmp-crs.html (Camera Raw Schema)","title":"Todo"},{"location":"developer-guide/metadata/xmp/#issues","text":"Store metadata in the filesystem #4 Compare the quality and XMP compatibility of different RAW converters #65","title":"Issues ##"},{"location":"developer-guide/metadata/xmp/#links","text":"https://github.com/trimmer-io/go-xmp - A native Go SDK for the Extensible Metadata Platform (XMP) Adobe XMP Specification Part 1 , Part 2 and Part 3 , a.k.a ISO 16684-1:2011(E) XMP code in GIMP - Nothing beyond some comments. It was a code drop, we needed the feature, but unfortunately the original contributor left.","title":"Links"},{"location":"developer-guide/technologies/broadway/","text":"Broadway is a display server for using GTK+ applications in a web browser like Chrome or Firefox. It is based on HTML5 and WebSockets . GTK (originally GIMP Toolkit) is a GUI toolkit used by many Linux desktop applications like Darktable , Gimp and RawTherapee . Obviously this technology is ideal for editing images in the browser, at least when the connection is fast enough. Docker Configuration \u00b6 # Configure broadwayd (HTML5 display server) RUN apt-get update && apt-get install libgtk-3-bin ENV GDK_BACKEND broadway ENV BROADWAY_DISPLAY :5 EXPOSE 8080 CMD broadwayd -p 8080 -a 0 .0.0.0 :5 When this is configured, all you need to do is open http://localhost:8080 in a browser and start any GTK application in the same container (broadwayd must be running). It should be displayed instantly, otherwise the screen is white, but you shouldn't see an error. Screenshot \u00b6","title":"Broadway"},{"location":"developer-guide/technologies/broadway/#docker-configuration","text":"# Configure broadwayd (HTML5 display server) RUN apt-get update && apt-get install libgtk-3-bin ENV GDK_BACKEND broadway ENV BROADWAY_DISPLAY :5 EXPOSE 8080 CMD broadwayd -p 8080 -a 0 .0.0.0 :5 When this is configured, all you need to do is open http://localhost:8080 in a browser and start any GTK application in the same container (broadwayd must be running). It should be displayed instantly, otherwise the screen is white, but you shouldn't see an error.","title":"Docker Configuration"},{"location":"developer-guide/technologies/broadway/#screenshot","text":"","title":"Screenshot"},{"location":"developer-guide/technologies/docker/","text":"Docker is an open-source container virtualization application mainly written in Go (like PhotoPrism). It is ideal for running applications on any computer without extensive installation, configuration or performance overhead. All you need to do is download an image and start it. However, Docker is not commonly used by end users and more popular among developers / admins. For that reason, PhotoPrism must also be usable without running in a container, at least on Linux and OS X. Continuous Integration / Deployment \u00b6 Build and push of an updated container image to Docker Hub is automatically performed by Travis CI whenever develop is merged into master and the tests are all green. For that reason, we don't use semantic versioning for our binaries and container images. A version string might look like 181112-edc7c2f-Darwin-i386-DEBUG instead. Travis CI uses the photoprism/development image for running unit and integration tests on all branches and for pull requests, see Dockerfile and docker-compose.travis.yml . Multi-Stage Build \u00b6 When creating new images, Docker supports so called multi-stage builds, that means you can compile an application like PhotoPrism in a container that contains all development dependencies (like source code, debugger, compiler,...) and later copy the binary to a fresh container. This way we could reduce the compressed container size from ~1 GB to less than 200 MB. Most of that is used by Darktable, TensorFlow and Ubuntu 18.04. Our photoprism binary is smaller than 20 MB. Example: FROM photoprism/development:20181112 as build # Build PhotoPrism WORKDIR \"/go/src/github.com/photoprism/photoprism\" COPY . . RUN make all install # Base base image as photoprism/development FROM ubuntu:18.04 WORKDIR /srv/photoprism # Copy built binaries and assets to this image COPY --from = build /usr/local/bin/photoprism /usr/local/bin/photoprism COPY --from = build /srv/photoprism /srv/photoprism # Expose HTTP port EXPOSE 80 # Start PhotoPrism server CMD photoprism start Kubernetes \u00b6 https://forge.sh/ - Define and deploy multi-container apps in Kubernetes, from source https://www.telepresence.io/ - a local development environment for a remote Kubernetes cluster Links \u00b6 https://github.com/estesp/manifest-tool https://github.com/docker/app https://github.com/moby/moby https://hub.docker.com/r/multiarch/qemu-user-static/ - quemu for building multiarch images with Docker https://github.com/opencontainers/image-spec - standard labels for Docker image metadata https://github.com/Yelp/dumb-init - A minimal init system for Linux containers","title":"Docker"},{"location":"developer-guide/technologies/docker/#continuous-integration-deployment","text":"Build and push of an updated container image to Docker Hub is automatically performed by Travis CI whenever develop is merged into master and the tests are all green. For that reason, we don't use semantic versioning for our binaries and container images. A version string might look like 181112-edc7c2f-Darwin-i386-DEBUG instead. Travis CI uses the photoprism/development image for running unit and integration tests on all branches and for pull requests, see Dockerfile and docker-compose.travis.yml .","title":"Continuous Integration / Deployment"},{"location":"developer-guide/technologies/docker/#multi-stage-build","text":"When creating new images, Docker supports so called multi-stage builds, that means you can compile an application like PhotoPrism in a container that contains all development dependencies (like source code, debugger, compiler,...) and later copy the binary to a fresh container. This way we could reduce the compressed container size from ~1 GB to less than 200 MB. Most of that is used by Darktable, TensorFlow and Ubuntu 18.04. Our photoprism binary is smaller than 20 MB. Example: FROM photoprism/development:20181112 as build # Build PhotoPrism WORKDIR \"/go/src/github.com/photoprism/photoprism\" COPY . . RUN make all install # Base base image as photoprism/development FROM ubuntu:18.04 WORKDIR /srv/photoprism # Copy built binaries and assets to this image COPY --from = build /usr/local/bin/photoprism /usr/local/bin/photoprism COPY --from = build /srv/photoprism /srv/photoprism # Expose HTTP port EXPOSE 80 # Start PhotoPrism server CMD photoprism start","title":"Multi-Stage Build"},{"location":"developer-guide/technologies/docker/#kubernetes","text":"https://forge.sh/ - Define and deploy multi-container apps in Kubernetes, from source https://www.telepresence.io/ - a local development environment for a remote Kubernetes cluster","title":"Kubernetes"},{"location":"developer-guide/technologies/docker/#links","text":"https://github.com/estesp/manifest-tool https://github.com/docker/app https://github.com/moby/moby https://hub.docker.com/r/multiarch/qemu-user-static/ - quemu for building multiarch images with Docker https://github.com/opencontainers/image-spec - standard labels for Docker image metadata https://github.com/Yelp/dumb-init - A minimal init system for Linux containers","title":"Links"},{"location":"developer-guide/technologies/external-apis/","text":"Photo Sharing \u00b6 Instagram Developer API Twitter API Facebook Photo API Google Photos API EyeEm API Nextcloud API Books / Prints \u00b6 Cewe Stiftung & Co. KGaA - Europe's leading online printing experts Tools \u00b6 KrakenD - API Gateway that sits between clients and services to offer tailored endpoints Photobak - Back up your content from Google Photos","title":"External APIs"},{"location":"developer-guide/technologies/external-apis/#photo-sharing","text":"Instagram Developer API Twitter API Facebook Photo API Google Photos API EyeEm API Nextcloud API","title":"Photo Sharing"},{"location":"developer-guide/technologies/external-apis/#books-prints","text":"Cewe Stiftung & Co. KGaA - Europe's leading online printing experts","title":"Books / Prints"},{"location":"developer-guide/technologies/external-apis/#tools","text":"KrakenD - API Gateway that sits between clients and services to offer tailored endpoints Photobak - Back up your content from Google Photos","title":"Tools"},{"location":"developer-guide/technologies/golang/","text":"We have chosen Go because of its simplicity and performance. On top, it enables us to build a single binary for [[distribution]]. Learning \u00b6 https://golang.org/doc/code.html - how to write Go code https://golang.org/doc/effective_go.html - gives tips for writing clear, idiomatic Go code https://golangbridge.org/ - Go workshops for underrepresented communities https://www.sohamkamani.com/blog/golang/2018-06-20-golang-factory-patterns/ - there are many different ways in which you can use the factory pattern to make your code cleaner and more concise https://www.alexedwards.net/blog/form-validation-and-processing - Form Validation and Processing in Go Testing \u00b6 https://medium.com/@povilasve/go-advanced-tips-tricks-a872503ac859 - Go advanced testing tips & tricks Golang version of Pact - contract testing framework for HTTP APIs and non-HTTP asynchronous messaging systems Integration Tests in Go - blog post Parallelize your table-driven tests - blog post Useful libraries and frameworks \u00b6 https://github.com/spf13/afero - a filesystem abstraction library https://github.com/gin-gonic/gin - HTTP web framework https://github.com/gobuffalo/pop - a database abstraction layer https://github.com/jinzhu/gorm - another database abstraction layer https://github.com/appleboy/gorush - a push notification micro server for Gin https://github.com/cavaliercoder/grab - a download manager package https://github.com/russross/blackfriday - a library for rendering Markdown https://github.com/sirupsen/logrus - structured, pluggable logging for Go https://github.com/alecthomas/participle - a dead simple parser package for Go https://github.com/tidwall/tile38 - a geospatial database and realtime geofencing server https://github.com/melihmucuk/geocache - an in-memory cache that is suitable for geolocation based applications https://github.com/aaronland/go-slippy-tiles - a proxy for map tiles https://github.com/paulmach/osm - a general purpose library for reading, writing and working with OpenStreetMap data https://github.com/minio - Object Storage for AI http://www.gorillatoolkit.org/pkg/schema - fills a struct with form values Jobs \u00b6 SoundCloud is looking for backend developers (Berlin, permanent, full-time)","title":"Golang"},{"location":"developer-guide/technologies/golang/#learning","text":"https://golang.org/doc/code.html - how to write Go code https://golang.org/doc/effective_go.html - gives tips for writing clear, idiomatic Go code https://golangbridge.org/ - Go workshops for underrepresented communities https://www.sohamkamani.com/blog/golang/2018-06-20-golang-factory-patterns/ - there are many different ways in which you can use the factory pattern to make your code cleaner and more concise https://www.alexedwards.net/blog/form-validation-and-processing - Form Validation and Processing in Go","title":"Learning"},{"location":"developer-guide/technologies/golang/#testing","text":"https://medium.com/@povilasve/go-advanced-tips-tricks-a872503ac859 - Go advanced testing tips & tricks Golang version of Pact - contract testing framework for HTTP APIs and non-HTTP asynchronous messaging systems Integration Tests in Go - blog post Parallelize your table-driven tests - blog post","title":"Testing"},{"location":"developer-guide/technologies/golang/#useful-libraries-and-frameworks","text":"https://github.com/spf13/afero - a filesystem abstraction library https://github.com/gin-gonic/gin - HTTP web framework https://github.com/gobuffalo/pop - a database abstraction layer https://github.com/jinzhu/gorm - another database abstraction layer https://github.com/appleboy/gorush - a push notification micro server for Gin https://github.com/cavaliercoder/grab - a download manager package https://github.com/russross/blackfriday - a library for rendering Markdown https://github.com/sirupsen/logrus - structured, pluggable logging for Go https://github.com/alecthomas/participle - a dead simple parser package for Go https://github.com/tidwall/tile38 - a geospatial database and realtime geofencing server https://github.com/melihmucuk/geocache - an in-memory cache that is suitable for geolocation based applications https://github.com/aaronland/go-slippy-tiles - a proxy for map tiles https://github.com/paulmach/osm - a general purpose library for reading, writing and working with OpenStreetMap data https://github.com/minio - Object Storage for AI http://www.gorillatoolkit.org/pkg/schema - fills a struct with form values","title":"Useful libraries and frameworks"},{"location":"developer-guide/technologies/golang/#jobs","text":"SoundCloud is looking for backend developers (Berlin, permanent, full-time)","title":"Jobs"},{"location":"developer-guide/technologies/tensorflow/","text":"Using TensorFlow with Go \u00b6 For an introduction please read Understanding Tensorflow using Go . The TensorFlow API for Go is well suited to loading existing models and executing them within a Go application. It requires the TensorFlow C library to be installed. A full TensorFlow installation is not needed. It is not possible to statically link against the C library, but the issue is known and there might be a fix later this year . Vision \u00b6 Our long-term goal is to become an open platform for machine learning research based on real-world photo collections. Links \u00b6 https://tfhub.dev/ - TensorFlow Hub is a library for reusable machine learning modules https://www.tensorflow.org/install/lang_c - TensorFlow for C http://www.asimovinstitute.org/neural-network-zoo/ - types of neural networks explained http://playground.tensorflow.org/ - Experiment with neural networks in your browser http://jupyter.org/ - open-source web application for creating and sharing documents that contain live code https://developers.google.com/machine-learning/crash-course/ - Machine Learning Crash Course with TensorFlow APIs https://medium.com/implodinggradients/tensorflow-or-keras-which-one-should-i-learn-5dd7fa3f9ca0 https://medium.com/analytics-vidhya/deploy-your-first-deep-learning-model-on-kubernetes-with-python-keras-flask-and-docker-575dc07d9e76 - Deploy Your First Deep Learning Model On Kubernetes With Python, Keras, Flask, and Docker https://medium.com/mlreview/getting-inception-architectures-to-work-with-style-transfer-767d53475bf8 - Getting Inception Architectures to Work with Style Transfer https://github.com/jdeng/goface - Face Detector based on MTCNN, tensorflow and golang https://www.tensorflow.org/tutorials/representation/word2vec - Vector Representations of Words (for searching/tagging) https://github.com/chtorr/go-tensorflow-realtime-object-detection - Real-time object detection with Go, Tensorflow, and OpenCV https://ai.googleblog.com/2018/07/accelerated-training-and-inference-with.html - Accelerated Training and Inference with the Tensorflow Object Detection API https://github.com/NanoNets/object-detection-sample-golang - NanoNets Object Detection API Example for Golang https://hub.packtpub.com/object-detection-go-tensorflow/ - Implementing Object detection with Go using TensorFlow https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/makefile - Build TensorFlow C lib statically","title":"TensorFlow"},{"location":"developer-guide/technologies/tensorflow/#using-tensorflow-with-go","text":"For an introduction please read Understanding Tensorflow using Go . The TensorFlow API for Go is well suited to loading existing models and executing them within a Go application. It requires the TensorFlow C library to be installed. A full TensorFlow installation is not needed. It is not possible to statically link against the C library, but the issue is known and there might be a fix later this year .","title":"Using TensorFlow with Go"},{"location":"developer-guide/technologies/tensorflow/#vision","text":"Our long-term goal is to become an open platform for machine learning research based on real-world photo collections.","title":"Vision"},{"location":"developer-guide/technologies/tensorflow/#links","text":"https://tfhub.dev/ - TensorFlow Hub is a library for reusable machine learning modules https://www.tensorflow.org/install/lang_c - TensorFlow for C http://www.asimovinstitute.org/neural-network-zoo/ - types of neural networks explained http://playground.tensorflow.org/ - Experiment with neural networks in your browser http://jupyter.org/ - open-source web application for creating and sharing documents that contain live code https://developers.google.com/machine-learning/crash-course/ - Machine Learning Crash Course with TensorFlow APIs https://medium.com/implodinggradients/tensorflow-or-keras-which-one-should-i-learn-5dd7fa3f9ca0 https://medium.com/analytics-vidhya/deploy-your-first-deep-learning-model-on-kubernetes-with-python-keras-flask-and-docker-575dc07d9e76 - Deploy Your First Deep Learning Model On Kubernetes With Python, Keras, Flask, and Docker https://medium.com/mlreview/getting-inception-architectures-to-work-with-style-transfer-767d53475bf8 - Getting Inception Architectures to Work with Style Transfer https://github.com/jdeng/goface - Face Detector based on MTCNN, tensorflow and golang https://www.tensorflow.org/tutorials/representation/word2vec - Vector Representations of Words (for searching/tagging) https://github.com/chtorr/go-tensorflow-realtime-object-detection - Real-time object detection with Go, Tensorflow, and OpenCV https://ai.googleblog.com/2018/07/accelerated-training-and-inference-with.html - Accelerated Training and Inference with the Tensorflow Object Detection API https://github.com/NanoNets/object-detection-sample-golang - NanoNets Object Detection API Example for Golang https://hub.packtpub.com/object-detection-go-tensorflow/ - Implementing Object detection with Go using TensorFlow https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/makefile - Build TensorFlow C lib statically","title":"Links"},{"location":"faq/developer-faq/","text":"","title":"Developer faq"},{"location":"faq/enterprise-faq/","text":"","title":"Enterprise faq"},{"location":"faq/faq/","text":"Frequently Asked Questions \u00b6","title":"Frequently Asked Questions #"},{"location":"faq/faq/#frequently-asked-questions","text":"","title":"Frequently Asked Questions"},{"location":"getting-started/","text":"For the early birds \u00b6 You are welcome to get an impression and provide early feedback. We've set up a public demo at demo.photoprism.org for you to play with. Note that this is work in progress. We do our best to provide a complete, stable version. Financial support makes a huge difference and enables us to spend more time with this project. Leave your email to get a release notification . System Requirements \u00b6 We recommend a modern computer with at least 2 cores and 4 GB of memory for running PhotoPrism. Indexing large photo and video collections significantly benefits from fast, local SSD storage and enough memory for caching. If you're running out of memory, you can reduce the number of workers in the configuration. As a measure of last resort, you can additionally disable image classification using TensorFlow. Attention When installing PhotoPrism on a public server outside your home network, please always run it behind a secure HTTPS reverse proxy like Caddy , Traefik , or Nginx . Your files and passwords will be transmitted in clear text otherwise, and can be intercepted by anyone in between including your provider, hackers, and governments.","title":"Introduction"},{"location":"getting-started/#for-the-early-birds","text":"You are welcome to get an impression and provide early feedback. We've set up a public demo at demo.photoprism.org for you to play with. Note that this is work in progress. We do our best to provide a complete, stable version. Financial support makes a huge difference and enables us to spend more time with this project. Leave your email to get a release notification .","title":"For the early birds"},{"location":"getting-started/#system-requirements","text":"We recommend a modern computer with at least 2 cores and 4 GB of memory for running PhotoPrism. Indexing large photo and video collections significantly benefits from fast, local SSD storage and enough memory for caching. If you're running out of memory, you can reduce the number of workers in the configuration. As a measure of last resort, you can additionally disable image classification using TensorFlow. Attention When installing PhotoPrism on a public server outside your home network, please always run it behind a secure HTTPS reverse proxy like Caddy , Traefik , or Nginx . Your files and passwords will be transmitted in clear text otherwise, and can be intercepted by anyone in between including your provider, hackers, and governments.","title":"System Requirements"},{"location":"getting-started/caching/","text":"How to Optimize Caching for Performance \u00b6 Note: This is contributed content. Some users might want to place the thumbnail cache on a separate, faster file system while keeping the actual photo files on large, slow bulk storage. This should result in faster access to the thumbnails. To do this, we add a further volume ( -v ) parameter to the docker script so we use an external path (outside the container) for the cache files. You can get the internal path with photoprism config , or as a docker command in a running system (for Linux/BSD systems): sudo docker exec photoprism photoprism config | grep cache-path This should return a line such as: cache-path /home/photoprism/.cache/photoprism for the internal path. We now know to add a line like -v <MYCACHE_FOLDER>:/home/photoprism/.cache/photoprism \\ to the docker invocation, with your actual path to the cache folder replacing <MYCACHE_FOLDER> . As an example, let's assume a ZFS filesystem with two pools (\"volumes\" in classical terminology): A pool tank in a raidz2 (RAID6) configuration based on hard drives that holds the original pictures, and a pool dozer in a mirrored (RAID1) configuration based on SSD or NVMe drives to store the thumbnails. Our docker script could be: docker run -d \\ --name photoprism \\ -p 2342:2342 \\ -v /tank/photos/:/home/photoprism/Pictures/Originals \\ -v /dozer/cache/:/home/photoprism/.cache/photoprism \\ photoprism/photoprism:latest In a case like this, you will probably also want to optimize the datasets (\"file systems\") tank/photos and dozer/cache further. For instance, the original photo files will call for a larger recordsize than the smaller cache files.","title":"Caching"},{"location":"getting-started/caching/#how-to-optimize-caching-for-performance","text":"Note: This is contributed content. Some users might want to place the thumbnail cache on a separate, faster file system while keeping the actual photo files on large, slow bulk storage. This should result in faster access to the thumbnails. To do this, we add a further volume ( -v ) parameter to the docker script so we use an external path (outside the container) for the cache files. You can get the internal path with photoprism config , or as a docker command in a running system (for Linux/BSD systems): sudo docker exec photoprism photoprism config | grep cache-path This should return a line such as: cache-path /home/photoprism/.cache/photoprism for the internal path. We now know to add a line like -v <MYCACHE_FOLDER>:/home/photoprism/.cache/photoprism \\ to the docker invocation, with your actual path to the cache folder replacing <MYCACHE_FOLDER> . As an example, let's assume a ZFS filesystem with two pools (\"volumes\" in classical terminology): A pool tank in a raidz2 (RAID6) configuration based on hard drives that holds the original pictures, and a pool dozer in a mirrored (RAID1) configuration based on SSD or NVMe drives to store the thumbnails. Our docker script could be: docker run -d \\ --name photoprism \\ -p 2342:2342 \\ -v /tank/photos/:/home/photoprism/Pictures/Originals \\ -v /dozer/cache/:/home/photoprism/.cache/photoprism \\ photoprism/photoprism:latest In a case like this, you will probably also want to optimize the datasets (\"file systems\") tank/photos and dozer/cache further. For instance, the original photo files will call for a larger recordsize than the smaller cache files.","title":"How to Optimize Caching for Performance"},{"location":"getting-started/config-options/","text":"Variable Parameter Description PHOTOPRISM_DEBUG --debug run in debug mode (shows additional log messages) PHOTOPRISM_PUBLIC --public, -p no authentication required (disables password protection) PHOTOPRISM_READONLY --read-only, -r don't modify originals directory (import and upload disabled) PHOTOPRISM_TENSORFLOW_OFF --tf-off don't use TensorFlow for image classification (or anything else) PHOTOPRISM_EXPERIMENTAL --experimental, -e enable experimental features PHOTOPRISM_ADMIN_PASSWORD --admin-password value initial admin password (can be changed in settings) PHOTOPRISM_WORKERS --workers value, -w value number of workers for indexing (default: 0) PHOTOPRISM_WAKEUP_INTERVAL --wakeup-interval value background worker wakeup interval in seconds (default: 0) PHOTOPRISM_SITE_URL --site-url URL public site URL (default: \" http://localhost:2342/ \") PHOTOPRISM_SITE_PREVIEW --site-preview URL public preview image URL PHOTOPRISM_SITE_TITLE --site-title value site title (default: \"PhotoPrism\") PHOTOPRISM_SITE_CAPTION --site-caption value short site caption (default: \"Browse Your Life\") PHOTOPRISM_SITE_DESCRIPTION --site-description value long site description PHOTOPRISM_SITE_AUTHOR --site-author value site artist or copyright PHOTOPRISM_HTTP_PORT --http-port NUMBER http server port NUMBER (default: 2342) PHOTOPRISM_HTTP_HOST --http-host IP http server IP address PHOTOPRISM_HTTP_MODE --http-mode value, -m value debug, release or test PHOTOPRISM_DATABASE_DRIVER --database-driver NAME database driver NAME (sqlite or mysql) (default: \"sqlite\") PHOTOPRISM_DATABASE_DSN --database-dsn DSN data source or file name (DSN) PHOTOPRISM_DATABASE_CONNS --database-conns NUMBER max NUMBER of open connections to the database (default: 0) PHOTOPRISM_DATABASE_CONNS_IDLE --database-conns-idle NUMBER max NUMBER of idle connections (equal or less than open) (default: 0) PHOTOPRISM_ASSETS_PATH --assets-path PATH assets PATH for static files like templates and TensorFlow models PHOTOPRISM_STORAGE_PATH --storage-path PATH storage PATH for generated files like cache and index PHOTOPRISM_IMPORT_PATH --import-path PATH optional import PATH for copying files to originals PHOTOPRISM_ORIGINALS_PATH --originals-path PATH originals PATH for photo, video and sidecar files PHOTOPRISM_ORIGINALS_LIMIT --originals-limit MEGABYTE file size limit for originals in MEGABYTE (default: 1000) PHOTOPRISM_LOG_LEVEL --log-level value, -l value trace, debug, info, warning, error, fatal or panic (default: \"info\") PHOTOPRISM_LOG_FILENAME --log-filename value filename for storing server logs PHOTOPRISM_PID_FILENAME --pid-filename value filename for the server process id (pid) PHOTOPRISM_CACHE_PATH --cache-path PATH cache PATH PHOTOPRISM_TEMP_PATH --temp-path PATH temporary PATH for uploads and downloads PHOTOPRISM_CONFIG_FILE --config-file FILENAME, -c FILENAME load configuration from FILENAME PHOTOPRISM_SETTINGS_PATH --settings-path PATH settings PATH PHOTOPRISM_SETTINGS_HIDDEN --settings-hidden users can not view or change settings PHOTOPRISM_RAWTHERAPEE_BIN --rawtherapee-bin FILENAME rawtherapee-cli executable FILENAME (default: \"rawtherapee-cli\") PHOTOPRISM_DARKTABLE_BIN --darktable-bin FILENAME darktable-cli executable FILENAME (default: \"darktable-cli\") PHOTOPRISM_DARKTABLE_PRESETS --darktable-presets use darktable presets (disables concurrent raw to jpeg conversion) PHOTOPRISM_SIPS_BIN --sips-bin FILENAME sips executable FILENAME (default: \"sips\") PHOTOPRISM_HEIFCONVERT_BIN --heifconvert-bin FILENAME heif-convert executable FILENAME (default: \"heif-convert\") PHOTOPRISM_FFMPEG_BIN --ffmpeg-bin FILENAME ffmpeg executable FILENAME (default: \"ffmpeg\") PHOTOPRISM_EXIFTOOL_BIN --exiftool-bin FILENAME exiftool executable FILENAME (default: \"exiftool\") PHOTOPRISM_SIDECAR_JSON --sidecar-json, -j read metadata from JSON sidecar files created by exiftool PHOTOPRISM_SIDECAR_YAML --sidecar-yaml, -y backup photo metadata to YAML sidecar files PHOTOPRISM_SIDECAR_HIDDEN --sidecar-hidden create JSON and YAML sidecar files in .photoprism if enabled PHOTOPRISM_SIDECAR_PATH --sidecar-path PATH storage PATH for automatically created sidecar files (relative or absolute) PHOTOPRISM_DETECT_NSFW --detect-nsfw flag photos as private that may be offensive PHOTOPRISM_UPLOAD_NSFW --upload-nsfw allow uploads that may be offensive PHOTOPRISM_GEOCODING_API --geocoding-api value, -g value geocoding api (none, osm or places) (default: \"places\") PHOTOPRISM_DOWNLOAD_TOKEN --download-token SECRET SECRET url token for file downloads PHOTOPRISM_PREVIEW_TOKEN --preview-token SECRET SECRET url token for preview images and video streaming (default: \"public\") PHOTOPRISM_THUMB_FILTER --thumb-filter NAME, -f NAME resample filter NAME (best to worst: blackman, lanczos, cubic, linear) (default: \"lanczos\") PHOTOPRISM_THUMB_UNCACHED --thumb-uncached, -u enable on-demand thumbnail rendering (high memory and cpu usage) PHOTOPRISM_THUMB_SIZE --thumb-size PIXELS, -s PIXELS pre-rendered thumbnail size limit in PIXELS (720-7680) (default: 2048) PHOTOPRISM_THUMB_SIZE_UNCACHED --thumb-size-uncached PIXELS, -x PIXELS on-demand rendering size limit in PIXELS (720-7680) (default: 7680) PHOTOPRISM_JPEG_SIZE --jpeg-size PIXELS size limit for converted image files in PIXELS (720-30000) (default: 7680) PHOTOPRISM_JPEG_QUALITY --jpeg-quality value, -q value choose 95 for high-quality thumbnails (25-100) (default: 92)","title":"Config Options"},{"location":"getting-started/demo/","text":"Testing PhotoPrism With Our Demo Image \u00b6 For a quick test, you can start a demo that comes with pre-indexed photos: docker run -p 2342:2342 -d --name demo photoprism/demo After running the command, open http://localhost:2342/ in a Web browser. It may take a few seconds to become available. To stop and remove the container: docker rm -f demo It's the same image we use for demo.photoprism.org .","title":"Demo Image"},{"location":"getting-started/demo/#testing-photoprism-with-our-demo-image","text":"For a quick test, you can start a demo that comes with pre-indexed photos: docker run -p 2342:2342 -d --name demo photoprism/demo After running the command, open http://localhost:2342/ in a Web browser. It may take a few seconds to become available. To stop and remove the container: docker rm -f demo It's the same image we use for demo.photoprism.org .","title":"Testing PhotoPrism With Our Demo Image"},{"location":"getting-started/docker-compose/","text":"Setup Using Docker Compose \u00b6 To simplify running PhotoPrism on a server, we strongly recommend using Docker Compose . Before you start, make sure you have Docker installed on your system. It is available for Mac, Linux and Windows. Developers can skip this and move on to the Developer Guide . An image for the Raspberry Pi is available as well. In addition, we plan to ship the final app as a single binary for users that don't know or like Docker. Step 1: Configure \u00b6 Download our docker-compose.yml file (right click and Save Link As... or use wget ) to a folder of your choice, and change the configuration as needed: wget https://dl.photoprism.org/docker/docker-compose.yml Your personal photo and video collection will be mounted from ~/Pictures by default, where ~ is a placeholder for your home directory . You may change this to any folder accessible from your computer, including network drives. Note that PhotoPrism won't be able to see folders that have not been mounted. Multiple folders can be indexed by mounting them as subfolders: volumes: - \"~/Family:/photoprism/originals/Family\" - \"~/Friends:/photoprism/originals/Friends\" The import folder points to ~/PhotoPrism/Import by default, so that you can easily access it. If you don't need this feature, for example because you manage files manually or use a different tool, you can safely remove the volume. Using import is strictly optional and can be disabled as well. Settings, index, sidecar files, and generated thumbnails will be stored in ~/PhotoPrism/Storage by default. You may use an anonymous volume instead, just don't remove it completely so that you don't lose your data after restarting or upgrading the container. To enable the read-only mode, set PHOTOPRISM_READONLY to \"true\" . You may additionally want to mount originals with a :ro flag so that Docker prevents write operations. Note that this automatically disables any features that require write permissions, like importing files via Web upload. Info Your original media files won't be deleted, modified or moved. We might later update metadata in XMP sidecar files to sync with Adobe Lightroom. A JPEG representation might be created for RAW, HEIF, TIFF, PNG, BMP and GIF images in order to render thumbnails. You can enable read-only mode to prevent this completely, but you will also lose the functionality. Step 2: Start the server \u00b6 Open a terminal, go to the folder in which you saved the config file and run this command to start the server: docker-compose up -d Now open http://localhost:2342/ in a Web browser to see the user interface. The initial password is \"photoprism\". You can change it in Settings or using the photoprism passwd command in a terminal. The port and other basic settings can be changed in docker-compose.yml . Remember to stop and re-create the container whenever configuration values changed: docker-compose stop photoprism docker-compose up -d --no-deps photoprism To also update the Docker image: docker-compose pull photoprism docker-compose stop photoprism docker-compose up -d --no-deps photoprism Be aware that later builds may expect more or different configuration values. We always keep our example configuration up to date for reference. In addition, you can run photoprism help inside the container to see all options incl. environment variable names and a short description. Step 3: Index your library \u00b6 Go to Library in our Web UI to start indexing or importing. Alternatively, you can run this command in a terminal to index all files in your originals folder: docker-compose exec photoprism photoprism index The index command will automatically create JPEGs from other file types when needed to display them in a browser. They will be stored in the same folder next to the original using the best possible quality. You can disable this in Settings. Converting is currently not possible in read-only mode. Photos will become visible one after another. You can watch the indexer working in the terminal, or the logs tab in Library. Tip photoprism index --all will re-index all originals, including already indexed and unchanged files. This can be useful after updates that add new features. To import files, run photoprism import after putting them in the import folder: docker-compose exec photoprism photoprism import For a list of commands and config options run docker-compose exec photoprism photoprism help You should now be able to see your photos. You can continue using your favorite tools like Photoshop or Lightroom to edit images in the originals folder. Run photoprism index to reindex them as needed. Even deleting and adding is possible. Easy, isn't it? Configure storage on external NAS / server \u00b6 If you wish to store the data on an external server, there are multiple approaches, but the simplest might be to directly mount a NFS share with docker. You can mount any number of NFS shares as folders. For example, if you want to store the originals in a share, just specify the following in your docker-compose.yml : volumes : # ... (other mounts) ... - \"photoprism-originals:/photoprism/originals\" # Map originals folder to its own volume. photoprism-originals : driver : local driver_opts : type : nfs o : \"addr=10.0.20.2,soft,rw\" # The IP of your NAS device : \":/mnt/red/photoprism/originals\" # Path of the created share on your NAS Info This specific example was tested with TrueNAS, but any NFS (and even other types) can be mounted by docker. So as long as you have some sort of share that can be mounted by docker, you can configure it here. Tip Mounting the import folder to a share which is also accessible via other ways (e.g. Samba/CIFS) is especially handy, because you can dump all the data from you SD card / camera directly into that folder and trigger the index in the GUI afterwards. So you can skip the upload dialog in the GUI and it's a little faster.","title":"Docker Compose"},{"location":"getting-started/docker-compose/#setup-using-docker-compose","text":"To simplify running PhotoPrism on a server, we strongly recommend using Docker Compose . Before you start, make sure you have Docker installed on your system. It is available for Mac, Linux and Windows. Developers can skip this and move on to the Developer Guide . An image for the Raspberry Pi is available as well. In addition, we plan to ship the final app as a single binary for users that don't know or like Docker.","title":"Setup Using Docker Compose"},{"location":"getting-started/docker-compose/#step-1-configure","text":"Download our docker-compose.yml file (right click and Save Link As... or use wget ) to a folder of your choice, and change the configuration as needed: wget https://dl.photoprism.org/docker/docker-compose.yml Your personal photo and video collection will be mounted from ~/Pictures by default, where ~ is a placeholder for your home directory . You may change this to any folder accessible from your computer, including network drives. Note that PhotoPrism won't be able to see folders that have not been mounted. Multiple folders can be indexed by mounting them as subfolders: volumes: - \"~/Family:/photoprism/originals/Family\" - \"~/Friends:/photoprism/originals/Friends\" The import folder points to ~/PhotoPrism/Import by default, so that you can easily access it. If you don't need this feature, for example because you manage files manually or use a different tool, you can safely remove the volume. Using import is strictly optional and can be disabled as well. Settings, index, sidecar files, and generated thumbnails will be stored in ~/PhotoPrism/Storage by default. You may use an anonymous volume instead, just don't remove it completely so that you don't lose your data after restarting or upgrading the container. To enable the read-only mode, set PHOTOPRISM_READONLY to \"true\" . You may additionally want to mount originals with a :ro flag so that Docker prevents write operations. Note that this automatically disables any features that require write permissions, like importing files via Web upload. Info Your original media files won't be deleted, modified or moved. We might later update metadata in XMP sidecar files to sync with Adobe Lightroom. A JPEG representation might be created for RAW, HEIF, TIFF, PNG, BMP and GIF images in order to render thumbnails. You can enable read-only mode to prevent this completely, but you will also lose the functionality.","title":"Step 1: Configure"},{"location":"getting-started/docker-compose/#step-2-start-the-server","text":"Open a terminal, go to the folder in which you saved the config file and run this command to start the server: docker-compose up -d Now open http://localhost:2342/ in a Web browser to see the user interface. The initial password is \"photoprism\". You can change it in Settings or using the photoprism passwd command in a terminal. The port and other basic settings can be changed in docker-compose.yml . Remember to stop and re-create the container whenever configuration values changed: docker-compose stop photoprism docker-compose up -d --no-deps photoprism To also update the Docker image: docker-compose pull photoprism docker-compose stop photoprism docker-compose up -d --no-deps photoprism Be aware that later builds may expect more or different configuration values. We always keep our example configuration up to date for reference. In addition, you can run photoprism help inside the container to see all options incl. environment variable names and a short description.","title":"Step 2: Start the server"},{"location":"getting-started/docker-compose/#step-3-index-your-library","text":"Go to Library in our Web UI to start indexing or importing. Alternatively, you can run this command in a terminal to index all files in your originals folder: docker-compose exec photoprism photoprism index The index command will automatically create JPEGs from other file types when needed to display them in a browser. They will be stored in the same folder next to the original using the best possible quality. You can disable this in Settings. Converting is currently not possible in read-only mode. Photos will become visible one after another. You can watch the indexer working in the terminal, or the logs tab in Library. Tip photoprism index --all will re-index all originals, including already indexed and unchanged files. This can be useful after updates that add new features. To import files, run photoprism import after putting them in the import folder: docker-compose exec photoprism photoprism import For a list of commands and config options run docker-compose exec photoprism photoprism help You should now be able to see your photos. You can continue using your favorite tools like Photoshop or Lightroom to edit images in the originals folder. Run photoprism index to reindex them as needed. Even deleting and adding is possible. Easy, isn't it?","title":"Step 3: Index your library"},{"location":"getting-started/docker-compose/#configure-storage-on-external-nas-server","text":"If you wish to store the data on an external server, there are multiple approaches, but the simplest might be to directly mount a NFS share with docker. You can mount any number of NFS shares as folders. For example, if you want to store the originals in a share, just specify the following in your docker-compose.yml : volumes : # ... (other mounts) ... - \"photoprism-originals:/photoprism/originals\" # Map originals folder to its own volume. photoprism-originals : driver : local driver_opts : type : nfs o : \"addr=10.0.20.2,soft,rw\" # The IP of your NAS device : \":/mnt/red/photoprism/originals\" # Path of the created share on your NAS Info This specific example was tested with TrueNAS, but any NFS (and even other types) can be mounted by docker. So as long as you have some sort of share that can be mounted by docker, you can configure it here. Tip Mounting the import folder to a share which is also accessible via other ways (e.g. Samba/CIFS) is especially handy, because you can dump all the data from you SD card / camera directly into that folder and trigger the index in the GUI afterwards. So you can skip the upload dialog in the GUI and it's a little faster.","title":"Configure storage on external NAS / server"},{"location":"getting-started/docker/","text":"Running PhotoPrism with Docker \u00b6 These instructions are for users who don't like Docker Compose for any reason and prefer pure Docker instead. If you are not sure, try using Docker Compose first. Step 1: Start the server \u00b6 Open a terminal and run this command after replacing ~/Pictures with the folder containing your personal photo and video collection: docker run -d \\ --name photoprism \\ --security-opt seccomp=unconfined \\ --security-opt apparmor=unconfined \\ -p 2342:2342 \\ -e PHOTOPRISM_UPLOAD_NSFW=\"true\" \\ -e PHOTOPRISM_ADMIN_PASSWORD=\"photoprism\" \\ -v /photoprism/storage \\ -v ~/Pictures:/photoprism/originals \\ photoprism/photoprism Now open http://localhost:2342/ in a Web browser to see the user interface. The initial password is photoprism . You can change it in Settings or using the photoprism passwd command in a terminal. This is a simplified configuration compared to our Docker Compose example: The /photoprism/import folder is not mounted so that you can't easily access it from your host machine. Uploading files or mounting it via WebDAV is still possible. Settings, index, sidecar files, and generated thumbnails will be stored in /photoprism/storage . You may also mount this path to a local folder instead of an anonymous volume. The default port 2342 and other configuration values can be changed as needed, see Config Options . To enable the read-only mode, add -e PHOTOPRISM_READONLY=\"true\" . You may additionally want to mount originals with a :ro flag so that Docker prevents write operations. Note that this automatically disables any features that require write permissions, like importing files via Web upload. Multiple folders can be indexed by mounting them as subfolders e.g. -v ~/Example:/photoprism/originals/Example . Info Your original media files won't be deleted, modified or moved. We might later update metadata in XMP sidecar files to sync with Adobe Lightroom. A JPEG representation might be created for RAW, HEIF, TIFF, PNG, BMP and GIF images in order to render thumbnails and display them in a browser. You can enable read-only mode to prevent this completely, but you will also lose the functionality. Step 2: Index your library \u00b6 Go to Library in our Web UI to start indexing or importing. Alternatively, you can run this command in a terminal to index all files in your originals folder: docker exec -ti photoprism photoprism index The index command will automatically create JPEGs from other file types when needed to display them in a browser. They will be stored in the same folder next to the original using the best possible quality. You can disable this in Settings. Converting is currently not possible in read-only mode. Photos will become visible one after another. You can watch the indexer working in the terminal, or the logs tab in Library. Tip photoprism index --all will re-index all originals, including already indexed and unchanged files. This can be useful after updates that add new features. Step 3: When you're done... \u00b6 You can stop the server and start it again using the following commands: docker stop photoprism docker start photoprism To remove the container completely: docker rm -f photoprism","title":"Docker"},{"location":"getting-started/docker/#running-photoprism-with-docker","text":"These instructions are for users who don't like Docker Compose for any reason and prefer pure Docker instead. If you are not sure, try using Docker Compose first.","title":"Running PhotoPrism with Docker"},{"location":"getting-started/docker/#step-1-start-the-server","text":"Open a terminal and run this command after replacing ~/Pictures with the folder containing your personal photo and video collection: docker run -d \\ --name photoprism \\ --security-opt seccomp=unconfined \\ --security-opt apparmor=unconfined \\ -p 2342:2342 \\ -e PHOTOPRISM_UPLOAD_NSFW=\"true\" \\ -e PHOTOPRISM_ADMIN_PASSWORD=\"photoprism\" \\ -v /photoprism/storage \\ -v ~/Pictures:/photoprism/originals \\ photoprism/photoprism Now open http://localhost:2342/ in a Web browser to see the user interface. The initial password is photoprism . You can change it in Settings or using the photoprism passwd command in a terminal. This is a simplified configuration compared to our Docker Compose example: The /photoprism/import folder is not mounted so that you can't easily access it from your host machine. Uploading files or mounting it via WebDAV is still possible. Settings, index, sidecar files, and generated thumbnails will be stored in /photoprism/storage . You may also mount this path to a local folder instead of an anonymous volume. The default port 2342 and other configuration values can be changed as needed, see Config Options . To enable the read-only mode, add -e PHOTOPRISM_READONLY=\"true\" . You may additionally want to mount originals with a :ro flag so that Docker prevents write operations. Note that this automatically disables any features that require write permissions, like importing files via Web upload. Multiple folders can be indexed by mounting them as subfolders e.g. -v ~/Example:/photoprism/originals/Example . Info Your original media files won't be deleted, modified or moved. We might later update metadata in XMP sidecar files to sync with Adobe Lightroom. A JPEG representation might be created for RAW, HEIF, TIFF, PNG, BMP and GIF images in order to render thumbnails and display them in a browser. You can enable read-only mode to prevent this completely, but you will also lose the functionality.","title":"Step 1: Start the server"},{"location":"getting-started/docker/#step-2-index-your-library","text":"Go to Library in our Web UI to start indexing or importing. Alternatively, you can run this command in a terminal to index all files in your originals folder: docker exec -ti photoprism photoprism index The index command will automatically create JPEGs from other file types when needed to display them in a browser. They will be stored in the same folder next to the original using the best possible quality. You can disable this in Settings. Converting is currently not possible in read-only mode. Photos will become visible one after another. You can watch the indexer working in the terminal, or the logs tab in Library. Tip photoprism index --all will re-index all originals, including already indexed and unchanged files. This can be useful after updates that add new features.","title":"Step 2: Index your library"},{"location":"getting-started/docker/#step-3-when-youre-done","text":"You can stop the server and start it again using the following commands: docker stop photoprism docker start photoprism To remove the container completely: docker rm -f photoprism","title":"Step 3: When you're done..."},{"location":"getting-started/faq/","text":"Frequently Asked Questions \u00b6 I'm having issues understanding the difference between the import and originals folders? \u00b6 Import is a temporary folder from which you can move or copy files to originals in a structured way that avoids duplicates. Most users with existing collections will want to index their originals directly without importing them, so that existing file and directory names stay the same. On the other hand, importing is more efficient when adding files as you don't need to re-index all originals to find new photos and videos. What exactly does read-only mode? \u00b6 There are users who don't want us to modify their original files and folders in any way, so we've added a configuration option for this use case. It will disable uploads, import and future features that might rename, update or delete files in the originals folder. I could not find a good documentation of the config parameters in the docker-compose.yml file? \u00b6 Our example configuration files are continuously maintained and documentation has been added: https://dl.photoprism.org/docker/docker-compose.yml Let us know if you're missing something. I'm using an operating system without Docker support. How to install and use PhotoPrism without Docker? \u00b6 In general, you would build / install it like a developer since we don't have packages for specific operating systems yet. Instead of using Docker, you can manually type the commands listed in our development Dockerfile and replace packages with what is available in your environment. You often don't need to use the exact same versions for dependencies. If your operating system has Docker support, we recommend learning Docker as it vastly simplifies installing and upgrading. Do you support Podman? \u00b6 Podman works just fine both in rootless and under root. Mind the SELinux which is enabled on Red Hat compatible systems, you may hit permission error problems. More details on on how to run PhotoPrism with Podman on CentOS in this blog post , it includes all the details including root and rootless modes, user mapping and SELinux. Do you provide LXC images? \u00b6 There is currently no LXC build for PhotoPrism, see issue #147 for details.","title":"FAQ"},{"location":"getting-started/faq/#frequently-asked-questions","text":"","title":"Frequently Asked Questions"},{"location":"getting-started/faq/#im-having-issues-understanding-the-difference-between-the-import-and-originals-folders","text":"Import is a temporary folder from which you can move or copy files to originals in a structured way that avoids duplicates. Most users with existing collections will want to index their originals directly without importing them, so that existing file and directory names stay the same. On the other hand, importing is more efficient when adding files as you don't need to re-index all originals to find new photos and videos.","title":"I'm having issues understanding the difference between the import and originals folders?"},{"location":"getting-started/faq/#what-exactly-does-read-only-mode","text":"There are users who don't want us to modify their original files and folders in any way, so we've added a configuration option for this use case. It will disable uploads, import and future features that might rename, update or delete files in the originals folder.","title":"What exactly does read-only mode?"},{"location":"getting-started/faq/#i-could-not-find-a-good-documentation-of-the-config-parameters-in-the-docker-composeyml-file","text":"Our example configuration files are continuously maintained and documentation has been added: https://dl.photoprism.org/docker/docker-compose.yml Let us know if you're missing something.","title":"I could not find a good documentation of the config parameters in the docker-compose.yml file?"},{"location":"getting-started/faq/#im-using-an-operating-system-without-docker-support-how-to-install-and-use-photoprism-without-docker","text":"In general, you would build / install it like a developer since we don't have packages for specific operating systems yet. Instead of using Docker, you can manually type the commands listed in our development Dockerfile and replace packages with what is available in your environment. You often don't need to use the exact same versions for dependencies. If your operating system has Docker support, we recommend learning Docker as it vastly simplifies installing and upgrading.","title":"I'm using an operating system without Docker support. How to install and use PhotoPrism without Docker?"},{"location":"getting-started/faq/#do-you-support-podman","text":"Podman works just fine both in rootless and under root. Mind the SELinux which is enabled on Red Hat compatible systems, you may hit permission error problems. More details on on how to run PhotoPrism with Podman on CentOS in this blog post , it includes all the details including root and rootless modes, user mapping and SELinux.","title":"Do you support Podman?"},{"location":"getting-started/faq/#do-you-provide-lxc-images","text":"There is currently no LXC build for PhotoPrism, see issue #147 for details.","title":"Do you provide LXC images?"},{"location":"getting-started/kubernetes/","text":"Running PhotoPrism with Kubernetes \u00b6 Note: This is contributed content and may be outdated. Running PhotoPrism on a Kubernetes cluster is straightforward. At a minimum, you can just define a Kubernetes Service and a StatefulSet and be up and running. For more real-world usage, you'll probably want to at least include persistent storage, and possibly some Ingress rules for exposing PhotoPrism outside your cluster. For those familiar with Helm , a PhotoPrism Helm chart is available . Once you've got PhotoPrism deployed, you can exec into the running container and photoprism import your photos. Here's an example YAML file that creates a Kubernetes: - Namespace - Service exposing PhotoPrism on port 80 - StatefulSet with persistent NFS volumes - Ingress rule for a Kubernetes ingress controller - Annotations for a Kubernetes Certificate Manager apiVersion : v1 kind : Namespace metadata : name : photoprism --- apiVersion : apps/v1 kind : StatefulSet metadata : name : photoprism namespace : photoprism spec : selector : matchLabels : app : photoprism serviceName : photoprism replicas : 1 template : metadata : labels : app : photoprism spec : containers : - name : photoprism image : photoprism/photoprism:20190522 env : - name : PHOTOPRISM_DEBUG value : \"true\" - name : PHOTOPRISM_SERVER_MODE value : debug - name : PHOTOPRISM_CACHE_PATH value : /assets/cache - name : PHOTOPRISM_IMPORT_PATH value : /assets/photos/import - name : PHOTOPRISM_EXPORT_PATH value : /assets/photos/export - name : PHOTOPRISM_ORIGINALS_PATH vale : /assets/photos/originals - name : PHOTOPRISM_DATABASE_DRIVER value : mysql - name : PHOTOPRISM_DATABASE_DSN value : photoprism:photoprism@tcp(mariadb.db:3306)/photoprism?parseTime=true - name : PHOTOPRISM_HTTP_HOST value : 0.0.0.0 - name : PHOTOPRISM_HTTP_PORT value : 2342 resources : requests : memory : 2Gi ports : - containerPort : 2342 name : http volumeMounts : - mountPath : /assets/photos/originals name : originals subPath : media/photos - mountPath : /asssets/cache name : photoprism subPath : cache - mountPath : /assets/photos/import name : photoprism subPath : import - mountPath : /assets/photos/export name : photoprism subPath : export volumes : - name : originals nfs : path : /share readOnly : true server : my.nas.host - name : photoprism nfs : path : /photoprism server : my.nas.host --- apiVersion : v1 kind : Service metadata : name : photoprism namespace : photoprism spec : ports : - name : http port : 80 protocol : TCP targetPort : http selector : app : photoprism type : ClusterIP --- apiVersion : extensions/v1beta1 kind : Ingress metadata : annotations : certmanager.k8s.io/cluster-issuer : letsencrypt-prod kubernetes.io/ingress.class : nginx kubernetes.io/tls-acme : \"true\" name : photoprism namespace : photoprism spec : rules : - host : photoprism.my.domain http : paths : - backend : serviceName : photoprism servicePort : http path : / tls : - hosts : - photoprism.my.domain secretName : photoprism-cert See also: https://github.com/p80n/photoprism-helm","title":"Kubernetes"},{"location":"getting-started/kubernetes/#running-photoprism-with-kubernetes","text":"Note: This is contributed content and may be outdated. Running PhotoPrism on a Kubernetes cluster is straightforward. At a minimum, you can just define a Kubernetes Service and a StatefulSet and be up and running. For more real-world usage, you'll probably want to at least include persistent storage, and possibly some Ingress rules for exposing PhotoPrism outside your cluster. For those familiar with Helm , a PhotoPrism Helm chart is available . Once you've got PhotoPrism deployed, you can exec into the running container and photoprism import your photos. Here's an example YAML file that creates a Kubernetes: - Namespace - Service exposing PhotoPrism on port 80 - StatefulSet with persistent NFS volumes - Ingress rule for a Kubernetes ingress controller - Annotations for a Kubernetes Certificate Manager apiVersion : v1 kind : Namespace metadata : name : photoprism --- apiVersion : apps/v1 kind : StatefulSet metadata : name : photoprism namespace : photoprism spec : selector : matchLabels : app : photoprism serviceName : photoprism replicas : 1 template : metadata : labels : app : photoprism spec : containers : - name : photoprism image : photoprism/photoprism:20190522 env : - name : PHOTOPRISM_DEBUG value : \"true\" - name : PHOTOPRISM_SERVER_MODE value : debug - name : PHOTOPRISM_CACHE_PATH value : /assets/cache - name : PHOTOPRISM_IMPORT_PATH value : /assets/photos/import - name : PHOTOPRISM_EXPORT_PATH value : /assets/photos/export - name : PHOTOPRISM_ORIGINALS_PATH vale : /assets/photos/originals - name : PHOTOPRISM_DATABASE_DRIVER value : mysql - name : PHOTOPRISM_DATABASE_DSN value : photoprism:photoprism@tcp(mariadb.db:3306)/photoprism?parseTime=true - name : PHOTOPRISM_HTTP_HOST value : 0.0.0.0 - name : PHOTOPRISM_HTTP_PORT value : 2342 resources : requests : memory : 2Gi ports : - containerPort : 2342 name : http volumeMounts : - mountPath : /assets/photos/originals name : originals subPath : media/photos - mountPath : /asssets/cache name : photoprism subPath : cache - mountPath : /assets/photos/import name : photoprism subPath : import - mountPath : /assets/photos/export name : photoprism subPath : export volumes : - name : originals nfs : path : /share readOnly : true server : my.nas.host - name : photoprism nfs : path : /photoprism server : my.nas.host --- apiVersion : v1 kind : Service metadata : name : photoprism namespace : photoprism spec : ports : - name : http port : 80 protocol : TCP targetPort : http selector : app : photoprism type : ClusterIP --- apiVersion : extensions/v1beta1 kind : Ingress metadata : annotations : certmanager.k8s.io/cluster-issuer : letsencrypt-prod kubernetes.io/ingress.class : nginx kubernetes.io/tls-acme : \"true\" name : photoprism namespace : photoprism spec : rules : - host : photoprism.my.domain http : paths : - backend : serviceName : photoprism servicePort : http path : / tls : - hosts : - photoprism.my.domain secretName : photoprism-cert See also: https://github.com/p80n/photoprism-helm","title":"Running PhotoPrism with Kubernetes"},{"location":"getting-started/raspberry-pi/","text":"Running PhotoPrism on a Raspberry Pi \u00b6 Big thank you to Guy Sheffer for building this! Download our docker-compose.yml file (right click and Save Link As... or use wget ) to a folder of your choice, change the configuration as needed, and run sudo docker-compose up to start PhotoPrism: wget https://dl.photoprism.org/docker/arm64/docker-compose.yml sudo docker-compose up See Setup Using Docker Compose for details. Image name on Docker Hub: photoprism/photoprism-arm64 Operating System and Hardware Requirements \u00b6 You need to boot your Raspberry Pi 3 / 4 with the parameter arm_64bit=1 in config.txt to be able to use this image. A fast SD card and 4 GB of RAM are recommended, in addition you might want to add swap for large photo collections. Make sure your docker compose configuration contains the following setting: photoprism: security_opt: - seccomp:unconfined Alternatively, you can run the image on UbuntuDockerPi . It's a 64bit Ubuntu Server with Docker pre-installed. See also: https://www.raspberrypi.org/documentation/installation/installing-images/README.md","title":"Raspberry Pi"},{"location":"getting-started/raspberry-pi/#running-photoprism-on-a-raspberry-pi","text":"Big thank you to Guy Sheffer for building this! Download our docker-compose.yml file (right click and Save Link As... or use wget ) to a folder of your choice, change the configuration as needed, and run sudo docker-compose up to start PhotoPrism: wget https://dl.photoprism.org/docker/arm64/docker-compose.yml sudo docker-compose up See Setup Using Docker Compose for details. Image name on Docker Hub: photoprism/photoprism-arm64","title":"Running PhotoPrism on a Raspberry Pi"},{"location":"getting-started/raspberry-pi/#operating-system-and-hardware-requirements","text":"You need to boot your Raspberry Pi 3 / 4 with the parameter arm_64bit=1 in config.txt to be able to use this image. A fast SD card and 4 GB of RAM are recommended, in addition you might want to add swap for large photo collections. Make sure your docker compose configuration contains the following setting: photoprism: security_opt: - seccomp:unconfined Alternatively, you can run the image on UbuntuDockerPi . It's a 64bit Ubuntu Server with Docker pre-installed. See also: https://www.raspberrypi.org/documentation/installation/installing-images/README.md","title":"Operating System and Hardware Requirements"},{"location":"getting-started/scalability/","text":"Scalability, Distributed Computing and Cloud Storage \u00b6 We aim to get the most of what is there, both in terms of hardware and development resources. So far, development and testing has been focused on smaller servers and typical home users with less than 200,000 files. Given enough time and demand, it's within the scope of this project to scale from a Raspberry Pi up to AMD Ryzen servers with 64 cores or more. If the primary focus was on larger servers or clusters, the current architecture might be different in some aspects and had other tradeoffs. For example, relying on database locking and conflict resolution tends to be inefficient with an increasing number of cores and workers. On the other hand, this simplifies application logic, especially when running multiple instances on the same index. Traditional database servers like MariaDB might be slower and less powerful than specialized NoSQL or in-memory engines, but are better documented and easier to maintain for the majority of users. Also, there is no native support for sharding or cloud storage APIs like S3. Instead, PhotoPrism prefers a fast, local solid-state drive. We welcome pull requests with optimizations and are happy to assist if you need a custom solution that runs well in a corporate cloud environment.","title":"Scalability"},{"location":"getting-started/scalability/#scalability-distributed-computing-and-cloud-storage","text":"We aim to get the most of what is there, both in terms of hardware and development resources. So far, development and testing has been focused on smaller servers and typical home users with less than 200,000 files. Given enough time and demand, it's within the scope of this project to scale from a Raspberry Pi up to AMD Ryzen servers with 64 cores or more. If the primary focus was on larger servers or clusters, the current architecture might be different in some aspects and had other tradeoffs. For example, relying on database locking and conflict resolution tends to be inefficient with an increasing number of cores and workers. On the other hand, this simplifies application logic, especially when running multiple instances on the same index. Traditional database servers like MariaDB might be slower and less powerful than specialized NoSQL or in-memory engines, but are better documented and easier to maintain for the majority of users. Also, there is no native support for sharding or cloud storage APIs like S3. Instead, PhotoPrism prefers a fast, local solid-state drive. We welcome pull requests with optimizations and are happy to assist if you need a custom solution that runs well in a corporate cloud environment.","title":"Scalability, Distributed Computing and Cloud Storage"},{"location":"getting-started/support/","text":"PhotoPrism Does Not Work, What Can I Do? \u00b6 If the application can not be opened in the browser or the container doesn't start at all, you might have found a bug, you might be using an outdated container image or your folder is not readable (check permissions). You're welcome to send a full report to help@photoprism.org so that we can assist you. Sponsors can also contact us for more general questions and advice regarding their specific environment.","title":"Support"},{"location":"getting-started/support/#photoprism-does-not-work-what-can-i-do","text":"If the application can not be opened in the browser or the container doesn't start at all, you might have found a bug, you might be using an outdated container image or your folder is not readable (check permissions). You're welcome to send a full report to help@photoprism.org so that we can assist you. Sponsors can also contact us for more general questions and advice regarding their specific environment.","title":"PhotoPrism Does Not Work, What Can I Do?"},{"location":"getting-started/updates/","text":"Getting Updates \u00b6 Open a terminal and run the following command to pull the latest container image: docker pull photoprism/photoprism:latest For our Raspberry Pi version: docker pull photoprism/photoprism-arm64:latest Pulling a new version can take several minutes, depending on your internet connection. You can use Watchtower to automatically update the image which is how our public demo stays up-to-date: services: photoprism: restart: unless-stopped command: photoprism --public start image: photoprism/demo:latest environment: PHOTOPRISM_URL: \"https://demo.photoprism.org/\" PHOTOPRISM_TITLE: \"PhotoPrism\" PHOTOPRISM_SUBTITLE: \"Try our demo\" PHOTOPRISM_DESCRIPTION: \"Personal Photo Management\" PHOTOPRISM_AUTHOR: \"PhotoPrism.org\" PHOTOPRISM_TWITTER: \"@browseyourlife\" watchtower: restart: unless-stopped image: containrrr/watchtower volumes: - /var/run/docker.sock:/var/run/docker.sock Info Our database schema still changes a lot as we do performance optimizations and add features. Therefore we cannot provide a smooth upgrade path and you should be prepared to delete your current database and re-index. To spare you a disappointment, we kindly advise you not to index large photo collections at the moment.","title":"Updates"},{"location":"getting-started/updates/#getting-updates","text":"Open a terminal and run the following command to pull the latest container image: docker pull photoprism/photoprism:latest For our Raspberry Pi version: docker pull photoprism/photoprism-arm64:latest Pulling a new version can take several minutes, depending on your internet connection. You can use Watchtower to automatically update the image which is how our public demo stays up-to-date: services: photoprism: restart: unless-stopped command: photoprism --public start image: photoprism/demo:latest environment: PHOTOPRISM_URL: \"https://demo.photoprism.org/\" PHOTOPRISM_TITLE: \"PhotoPrism\" PHOTOPRISM_SUBTITLE: \"Try our demo\" PHOTOPRISM_DESCRIPTION: \"Personal Photo Management\" PHOTOPRISM_AUTHOR: \"PhotoPrism.org\" PHOTOPRISM_TWITTER: \"@browseyourlife\" watchtower: restart: unless-stopped image: containrrr/watchtower volumes: - /var/run/docker.sock:/var/run/docker.sock Info Our database schema still changes a lot as we do performance optimizations and add features. Therefore we cannot provide a smooth upgrade path and you should be prepared to delete your current database and re-index. To spare you a disappointment, we kindly advise you not to index large photo collections at the moment.","title":"Getting Updates"},{"location":"user-guide/","text":"User Guide \u00b6 Step-by-step installation instructions can be found in Getting Started - all you need is a Web browser and Docker to run the server. It is available for Mac, Linux and Windows. Next, you'll have to index or import existing files. Please be patient, this will take a while depending on the size of your library. Already indexed photos can be browsed in Photos while videos show up in Videos . Counts are continuously updated in the navigation. If photos are missing, they might be in review due to low quality or missing metadata. You can turn this and other features off in Settings , depending on your specific use case.","title":"Introduction"},{"location":"user-guide/#user-guide","text":"Step-by-step installation instructions can be found in Getting Started - all you need is a Web browser and Docker to run the server. It is available for Mac, Linux and Windows. Next, you'll have to index or import existing files. Please be patient, this will take a while depending on the size of your library. Already indexed photos can be browsed in Photos while videos show up in Videos . Counts are continuously updated in the navigation. If photos are missing, they might be in review due to low quality or missing metadata. You can turn this and other features off in Settings , depending on your specific use case.","title":"User Guide"},{"location":"user-guide/metadata/","text":"PhotoPrisms intention is to give you the full power over your photos and videos as well as all the metadata you add to it. We want you to be able at any time to export all metadata you enter in PhotoPrism. In case you decide to choose another solution for your photos in the near or far future - all the work you put into your photo collection (like adding title, labels, locations etc.) will be available for you in standard formats. PhotoPrism automatically provides you with a json and a yml file containing all relevant data. You find those in your originals within the .photoprism folders.","title":"Metadata"},{"location":"user-guide/navigate/","text":"Navigate \u00b6 Photo and video search is based on the following components. Note that all pages are fully responsive, our screenshots show the user-interface in a desktop browser with medium resolution. 1. Main Navigation \u00b6 Located on the left, minimized on mobile devices. Click on the links to switch between different pages like Photos, Albums, Places, or Settings. 2. Toolbar \u00b6 Located on the top. Find photos or videos by entering search terms like cats and filters like label:cat . 3. Reload Button \u00b6 reloads search results without reloading the full page. 4. View Button \u00b6 Click to switch to a different search result view (cards: , mosaic: , or list: ). 5. Upload Button \u00b6 opens the upload dialog. Available on most pages, unless read-only mode is enabled or upload is disabled in Settings . 6. Expanded Toolbar \u00b6 The expanded toolbar contains additional options and search filters for country, year, month, camera, color, and category. 7. Context Menu \u00b6 When photos or videos are selected, the context menu appears in the lower right corner. The number displayed is the count of currently selected items. It also contains the following buttons: Archive photos Add photos to album Download photos Mark photos as private Open edit dialogue Share photos To unselect all items, click the cross at the top:","title":"Navigate"},{"location":"user-guide/navigate/#navigate","text":"Photo and video search is based on the following components. Note that all pages are fully responsive, our screenshots show the user-interface in a desktop browser with medium resolution.","title":"Navigate"},{"location":"user-guide/navigate/#1-main-navigation","text":"Located on the left, minimized on mobile devices. Click on the links to switch between different pages like Photos, Albums, Places, or Settings.","title":"1. Main Navigation"},{"location":"user-guide/navigate/#2-toolbar","text":"Located on the top. Find photos or videos by entering search terms like cats and filters like label:cat .","title":"2. Toolbar"},{"location":"user-guide/navigate/#3-reload-button","text":"reloads search results without reloading the full page.","title":"3. Reload Button"},{"location":"user-guide/navigate/#4-view-button","text":"Click to switch to a different search result view (cards: , mosaic: , or list: ).","title":"4. View Button"},{"location":"user-guide/navigate/#5-upload-button","text":"opens the upload dialog. Available on most pages, unless read-only mode is enabled or upload is disabled in Settings .","title":"5. Upload Button"},{"location":"user-guide/navigate/#6-expanded-toolbar","text":"The expanded toolbar contains additional options and search filters for country, year, month, camera, color, and category.","title":"6. Expanded Toolbar"},{"location":"user-guide/navigate/#7-context-menu","text":"When photos or videos are selected, the context menu appears in the lower right corner. The number displayed is the count of currently selected items. It also contains the following buttons: Archive photos Add photos to album Download photos Mark photos as private Open edit dialogue Share photos To unselect all items, click the cross at the top:","title":"7. Context Menu"},{"location":"user-guide/nextcloud/","text":"","title":"Nextcloud"},{"location":"user-guide/setup/","text":"When you start PhotoPrism for the first time, the app will guide you through the following configuration steps: Choose folder for import/originals Decide for one method (import + index or only import) Initial settings (group related files / private filter / review filter) Public mode or private mode + set username / password for application Enable webdav + set username + password Read only mode NSFW ppignore Info To change the initial configuration you need to XXXXXXXX","title":"Setup"},{"location":"user-guide/share/","text":"","title":"Share"},{"location":"user-guide/user-faq/","text":"FAQ \u00b6 What is the easiest way to install PhotoPrism on Mac/Windows? \u00b6 Should I install PhotoPrism on my laptop or on a server? \u00b6 What kind of files can I add to PhotoPrism? \u00b6 We aim to support all kinds of photos. You can add jpegs, live photos, pngs and various types of raw files. In case you have trouble with a special format please let us know. Metadata files in json/yml or xmp format are supported as well. We extract keywords out of them to organize your photo collection for you. In addition we support videos with avc1 codec. Other formats are planned. Is there a mobile app available? \u00b6 We do not offer a native app via the app stores. But our app is fully responsive and you can add it to the homescreen of your phone or tablet. This way you can use it like any other app. iOS: Open photoprism in the Safari browser on your phone or tablet Click Click add to home screen Android: How can I find/change my import/originals directories? \u00b6 Why do some of my photos get the import date as date instead of the date of the image creation? \u00b6 ????? Why do some of my photos have January 1 st 1980 as date? \u00b6 This happens in case there is a failure in your camera's time settings. In the edit dialog you can change the time of your photo. I do not find (some) of my photos after indexing, where are they? \u00b6 In case you have our quality filter enabled some of your photos might be located in the Review section. When do I need to do a complete rescan? \u00b6 ??? How can I permanently delete photos? \u00b6 Currently you can only archive photos using PhotoPrism. To permanently delete photos you need to delete them on your filesystem and start indexing your originals again. We plan to implement permanent deletion within PhotoPrism soon. Where are my files saved? \u00b6 Your original files stay in the directory you defined as Originals during the set up. Can PhotoPrism do backups of my files? \u00b6 Can I backup images from my phone directly to PhotoPrism? \u00b6 I removed a label but the related keyword is still existing, why? \u00b6 Keywords come from various sources: labels, file names, folder names, locations etc. If a label is removed the keyword is not automatically removed because it might originated from another source. You can delete the keyword manually on the edit dialogue . What are sidecar files and where do I find them? \u00b6 For us it is important that all the information you add to your photos like keywords, titles, labels etc is accessible to you at any time. That's why we create json files with all those data. What is the advantage of PhotoPrism being OpenSource for me as a user? \u00b6","title":"FAQ #"},{"location":"user-guide/user-faq/#faq","text":"","title":"FAQ"},{"location":"user-guide/user-faq/#what-is-the-easiest-way-to-install-photoprism-on-macwindows","text":"","title":"What is the easiest way to install PhotoPrism on Mac/Windows?"},{"location":"user-guide/user-faq/#should-i-install-photoprism-on-my-laptop-or-on-a-server","text":"","title":"Should I install PhotoPrism on my laptop or on a server?"},{"location":"user-guide/user-faq/#what-kind-of-files-can-i-add-to-photoprism","text":"We aim to support all kinds of photos. You can add jpegs, live photos, pngs and various types of raw files. In case you have trouble with a special format please let us know. Metadata files in json/yml or xmp format are supported as well. We extract keywords out of them to organize your photo collection for you. In addition we support videos with avc1 codec. Other formats are planned.","title":"What kind of files can I add to PhotoPrism?"},{"location":"user-guide/user-faq/#is-there-a-mobile-app-available","text":"We do not offer a native app via the app stores. But our app is fully responsive and you can add it to the homescreen of your phone or tablet. This way you can use it like any other app. iOS: Open photoprism in the Safari browser on your phone or tablet Click Click add to home screen Android:","title":"Is there a mobile app available?"},{"location":"user-guide/user-faq/#how-can-i-findchange-my-importoriginals-directories","text":"","title":"How can I find/change my import/originals directories?"},{"location":"user-guide/user-faq/#why-do-some-of-my-photos-get-the-import-date-as-date-instead-of-the-date-of-the-image-creation","text":"?????","title":"Why do some of my photos get the import date as date instead of the date of the image creation?"},{"location":"user-guide/user-faq/#why-do-some-of-my-photos-have-january-1st-1980-as-date","text":"This happens in case there is a failure in your camera's time settings. In the edit dialog you can change the time of your photo.","title":"Why do some of my photos have January 1st 1980 as date?"},{"location":"user-guide/user-faq/#i-do-not-find-some-of-my-photos-after-indexing-where-are-they","text":"In case you have our quality filter enabled some of your photos might be located in the Review section.","title":"I do not find (some) of my photos after indexing, where are they?"},{"location":"user-guide/user-faq/#when-do-i-need-to-do-a-complete-rescan","text":"???","title":"When do I need to do a complete rescan?"},{"location":"user-guide/user-faq/#how-can-i-permanently-delete-photos","text":"Currently you can only archive photos using PhotoPrism. To permanently delete photos you need to delete them on your filesystem and start indexing your originals again. We plan to implement permanent deletion within PhotoPrism soon.","title":"How can I permanently delete photos?"},{"location":"user-guide/user-faq/#where-are-my-files-saved","text":"Your original files stay in the directory you defined as Originals during the set up.","title":"Where are my files saved?"},{"location":"user-guide/user-faq/#can-photoprism-do-backups-of-my-files","text":"","title":"Can PhotoPrism do backups of my files?"},{"location":"user-guide/user-faq/#can-i-backup-images-from-my-phone-directly-to-photoprism","text":"","title":"Can I backup images from my phone directly to PhotoPrism?"},{"location":"user-guide/user-faq/#i-removed-a-label-but-the-related-keyword-is-still-existing-why","text":"Keywords come from various sources: labels, file names, folder names, locations etc. If a label is removed the keyword is not automatically removed because it might originated from another source. You can delete the keyword manually on the edit dialogue .","title":"I removed a label but the related keyword is still existing, why?"},{"location":"user-guide/user-faq/#what-are-sidecar-files-and-where-do-i-find-them","text":"For us it is important that all the information you add to your photos like keywords, titles, labels etc is accessible to you at any time. That's why we create json files with all those data.","title":"What are sidecar files and where do I find them?"},{"location":"user-guide/user-faq/#what-is-the-advantage-of-photoprism-being-opensource-for-me-as-a-user","text":"","title":"What is the advantage of PhotoPrism being OpenSource for me as a user?"},{"location":"user-guide/backup/webdav/","text":"Connect via WebDAV \u00b6 WebDAV clients, like Microsoft\u2019s Windows Explorer or Apple's Finder, can connect directly to PhotoPrism. This mounts the originals folder as a network drive and allows you to open, edit, and delete files from your computer or smartphone as if they were local. The originals folder URL for public servers is: https://admin@example.com/originals/ Please replace example.com with your actual domain. The slash at the end is important and cannot be omitted. When connecting, you'll have to authenticate using your regular password. It will also change when you update it in Settings. The user name is admin . Info You can also connect to the import folder by replacing originals/ with import/ in the URL. For users, who are running PhotoPrism locally on the default port 2342 , the originals folder URL is: http://admin@localhost:2342/originals/ Attention Never use WebDAV without https outside your local, private network as your password would be transmitted, in clear text, over the Internet. Connecting to a WebDAV server on macOS \u00b6 In the Finder on your Mac, choose Go > Connect to Server Enter the URL as shown above in the Server Address field Click Connect Connecting to a WebDAV server on Windows 10 \u00b6 Open Windows File Explorer Right click This PC From the dropdown, select Map network drive... Enter the drive letter and folder you want to map your WebDAV connection to Check the boxes Reconnect at sign-in and Connect using different credentials Click the Connect to a Web site that you can use to store your documents and pictures link Click the Next button Click Choose a custom network location and then click the Next button In the Internet or network address field, enter the URL as shown above Click the Next button and then Finish The originals folder appears as a mapped drive in Windows Explorer, and you can immediately add, edit, or delete files and directories using the Windows File Explorer. If you still have trouble connecting via WebDAV, you may have to update the Basic Authentication Level in the registry.","title":"Connect via WebDAV"},{"location":"user-guide/backup/webdav/#connect-via-webdav","text":"WebDAV clients, like Microsoft\u2019s Windows Explorer or Apple's Finder, can connect directly to PhotoPrism. This mounts the originals folder as a network drive and allows you to open, edit, and delete files from your computer or smartphone as if they were local. The originals folder URL for public servers is: https://admin@example.com/originals/ Please replace example.com with your actual domain. The slash at the end is important and cannot be omitted. When connecting, you'll have to authenticate using your regular password. It will also change when you update it in Settings. The user name is admin . Info You can also connect to the import folder by replacing originals/ with import/ in the URL. For users, who are running PhotoPrism locally on the default port 2342 , the originals folder URL is: http://admin@localhost:2342/originals/ Attention Never use WebDAV without https outside your local, private network as your password would be transmitted, in clear text, over the Internet.","title":"Connect via WebDAV"},{"location":"user-guide/backup/webdav/#connecting-to-a-webdav-server-on-macos","text":"In the Finder on your Mac, choose Go > Connect to Server Enter the URL as shown above in the Server Address field Click Connect","title":"Connecting to a WebDAV server on macOS"},{"location":"user-guide/backup/webdav/#connecting-to-a-webdav-server-on-windows-10","text":"Open Windows File Explorer Right click This PC From the dropdown, select Map network drive... Enter the drive letter and folder you want to map your WebDAV connection to Check the boxes Reconnect at sign-in and Connect using different credentials Click the Connect to a Web site that you can use to store your documents and pictures link Click the Next button Click Choose a custom network location and then click the Next button In the Internet or network address field, enter the URL as shown above Click the Next button and then Finish The originals folder appears as a mapped drive in Windows Explorer, and you can immediately add, edit, or delete files and directories using the Windows File Explorer. If you still have trouble connecting via WebDAV, you may have to update the Basic Authentication Level in the registry.","title":"Connecting to a WebDAV server on Windows 10"},{"location":"user-guide/library/files/","text":"Original files \u00b6 The Originals section displays all files of your originals directory. Clicking on a JPEG file opens it in fullscreen mode. Clicking on files other than JPEG downloads the file. The context menu allows you to perform the following actions: Download files \u00b6 Select files. Open context menu. Click . Create album from files \u00b6 Select file. Open context menu. Click . Select existing album or enter new album name. Click Add to album.","title":"Original Files"},{"location":"user-guide/library/files/#original-files","text":"The Originals section displays all files of your originals directory. Clicking on a JPEG file opens it in fullscreen mode. Clicking on files other than JPEG downloads the file. The context menu allows you to perform the following actions:","title":"Original files"},{"location":"user-guide/library/files/#download-files","text":"Select files. Open context menu. Click .","title":"Download files"},{"location":"user-guide/library/files/#create-album-from-files","text":"Select file. Open context menu. Click . Select existing album or enter new album name. Click Add to album.","title":"Create album from files"},{"location":"user-guide/library/import-vs-index/","text":"Shall I import or index my originals? \u00b6 Import is a temporary folder from which you can move or copy files to originals in a structured way that avoids duplicates. Most users with existing collections will want to index their originals directly without importing them, so that existing file and directory names stay the same. On the other hand, importing is more efficient when adding files as you don't need to re-index all originals to find new photos and videos. Index \u00b6 Use index when you want to index your photos and videos directly in the originals folder without copying, moving or renaming them in any way. Your folder structure might look like this: During indexing: Files are not renamed or moved. Your existing folder structure remains. You might decide to have your folders displayed as albums in PhotoPrism. Metadata from your files is read to create labels, titles and locations for your photos. Thumbnails are rendered for JPEGs. Optionally json and or yml files containing metadata are created After indexing your originals folder might look like this: Advantages \u00b6 You keep your existing folder structure. You can display your existing folder structure in PhotoPrism. Import \u00b6 Importing is more efficient when adding files as you don't need to re-index all originals to find new photos and videos. Uploads will also be treated as import, you can't directly upload to originals (yet). Your initial folder structure in import might look like this: During import: Files are moved or copied from import directory to originals directory. In the originals directory files are renamed and get a new folder structure. The original name is saved as property of the file. All imported files are indexed. After import using \"copy\" (this is the default) your folders could look like this: After import using \"move\" your folders might look like this: Advantages \u00b6 You will not have duplicates or files with an unsupported type in you Originals folder. Duplicates or unsupported files stay untouched in the import directory. Info Original file and folder names are used to create keywords. In case you import and index or only index a directory with the path \"Vacation/Africa\". All files from this folder get the keywords \"vacation\" and \"africa\". Conclusion \u00b6 In case you have no organization in your existing photo collection and you assume you have many duplicates on various hard drives. Import is the way to go. It will organize all your photos and videos due to time taken and it will avoid duplicates. In case you have your photo collection organized nicely in folders and you prefer to keep this organization displayed in the filesystem. Index will be the right option for you.","title":"Introduction"},{"location":"user-guide/library/import-vs-index/#shall-i-import-or-index-my-originals","text":"Import is a temporary folder from which you can move or copy files to originals in a structured way that avoids duplicates. Most users with existing collections will want to index their originals directly without importing them, so that existing file and directory names stay the same. On the other hand, importing is more efficient when adding files as you don't need to re-index all originals to find new photos and videos.","title":"Shall I import or index my originals?"},{"location":"user-guide/library/import-vs-index/#index","text":"Use index when you want to index your photos and videos directly in the originals folder without copying, moving or renaming them in any way. Your folder structure might look like this: During indexing: Files are not renamed or moved. Your existing folder structure remains. You might decide to have your folders displayed as albums in PhotoPrism. Metadata from your files is read to create labels, titles and locations for your photos. Thumbnails are rendered for JPEGs. Optionally json and or yml files containing metadata are created After indexing your originals folder might look like this:","title":"Index"},{"location":"user-guide/library/import-vs-index/#advantages","text":"You keep your existing folder structure. You can display your existing folder structure in PhotoPrism.","title":"Advantages"},{"location":"user-guide/library/import-vs-index/#import","text":"Importing is more efficient when adding files as you don't need to re-index all originals to find new photos and videos. Uploads will also be treated as import, you can't directly upload to originals (yet). Your initial folder structure in import might look like this: During import: Files are moved or copied from import directory to originals directory. In the originals directory files are renamed and get a new folder structure. The original name is saved as property of the file. All imported files are indexed. After import using \"copy\" (this is the default) your folders could look like this: After import using \"move\" your folders might look like this:","title":"Import"},{"location":"user-guide/library/import-vs-index/#advantages_1","text":"You will not have duplicates or files with an unsupported type in you Originals folder. Duplicates or unsupported files stay untouched in the import directory. Info Original file and folder names are used to create keywords. In case you import and index or only index a directory with the path \"Vacation/Africa\". All files from this folder get the keywords \"vacation\" and \"africa\".","title":"Advantages"},{"location":"user-guide/library/import-vs-index/#conclusion","text":"In case you have no organization in your existing photo collection and you assume you have many duplicates on various hard drives. Import is the way to go. It will organize all your photos and videos due to time taken and it will avoid duplicates. In case you have your photo collection organized nicely in folders and you prefer to keep this organization displayed in the filesystem. Index will be the right option for you.","title":"Conclusion"},{"location":"user-guide/library/import/","text":"Import \u00b6 Import files from your import directory \u00b6 Add files to your import folder. On the main navigation click Library and then Import. Select the folder you want to import. Select your preferred options. Click import. Info You can add photos to your import folder via your filesystem, WebDAV or using PhotoPrisms upload functionality. Import options \u00b6 Move files \u00b6 In case this option is selected, no copies are created but your original files will be renamed and moved to the originals folder. Attention Import is not available in read-only mode . Tip Enable upload-nsfw to prevent users from uploading offensive images via Web UI. Note that you'll still be able to manually add such images to the originals or import folders and index them.","title":"Import Files"},{"location":"user-guide/library/import/#import","text":"","title":"Import"},{"location":"user-guide/library/import/#import-files-from-your-import-directory","text":"Add files to your import folder. On the main navigation click Library and then Import. Select the folder you want to import. Select your preferred options. Click import. Info You can add photos to your import folder via your filesystem, WebDAV or using PhotoPrisms upload functionality.","title":"Import files from your import directory"},{"location":"user-guide/library/import/#import-options","text":"","title":"Import options"},{"location":"user-guide/library/import/#move-files","text":"In case this option is selected, no copies are created but your original files will be renamed and moved to the originals folder. Attention Import is not available in read-only mode . Tip Enable upload-nsfw to prevent users from uploading offensive images via Web UI. Note that you'll still be able to manually add such images to the originals or import folders and index them.","title":"Move files"},{"location":"user-guide/library/indexing/","text":"How to index your originals \u00b6 Configure the originals path to point to your photo and video collection. If you start with an empty folder, you need to copy files to it first. On the main navigation click Library. Optionally select a sub folder you want to index. Press button to start indexing. Info You can add photos to your originals folder in the file system or using WebDav . Index options \u00b6 Complete rescan \u00b6 All files are indexed again. In case this option is not selected only new or changed files will be indexed. Tip NSFW detection can be enabled ( detect-nsfw ) to flag images that may have offensive content ( nsfw search filter).","title":"Index Originals"},{"location":"user-guide/library/indexing/#how-to-index-your-originals","text":"Configure the originals path to point to your photo and video collection. If you start with an empty folder, you need to copy files to it first. On the main navigation click Library. Optionally select a sub folder you want to index. Press button to start indexing. Info You can add photos to your originals folder in the file system or using WebDav .","title":"How to index your originals"},{"location":"user-guide/library/indexing/#index-options","text":"","title":"Index options"},{"location":"user-guide/library/indexing/#complete-rescan","text":"All files are indexed again. In case this option is not selected only new or changed files will be indexed. Tip NSFW detection can be enabled ( detect-nsfw ) to flag images that may have offensive content ( nsfw search filter).","title":"Complete rescan"},{"location":"user-guide/library/upload/","text":"Upload files \u00b6 Upload files to the import folder \u00b6 Click in the upper right corner. Or On the main navigation click Library and then Import. Click Upload. In case you want to upload add the files directly to an album select one. Click Upload. Select files. Confirm. Once your files finished uploading you can start importing .","title":"Upload via Web UI"},{"location":"user-guide/library/upload/#upload-files","text":"","title":"Upload files"},{"location":"user-guide/library/upload/#upload-files-to-the-import-folder","text":"Click in the upper right corner. Or On the main navigation click Library and then Import. Click Upload. In case you want to upload add the files directly to an album select one. Click Upload. Select files. Confirm. Once your files finished uploading you can start importing .","title":"Upload files to the import folder"},{"location":"user-guide/library/webdav/","text":"Add files using WebDAV \u00b6 In case you have PhotoPrism running on a server you can use WebDAV to add files to your import or originals folder. Just follow those instructions . Once all files are added you can start importing or indexing your files. Tip You can use WebDAV to download photos from the server as well. Just connect to http://servername/originals/ and copy the files to your preferred destination.","title":"WebDAV Upload"},{"location":"user-guide/library/webdav/#add-files-using-webdav","text":"In case you have PhotoPrism running on a server you can use WebDAV to add files to your import or originals folder. Just follow those instructions . Once all files are added you can start importing or indexing your files. Tip You can use WebDAV to download photos from the server as well. Just connect to http://servername/originals/ and copy the files to your preferred destination.","title":"Add files using WebDAV"},{"location":"user-guide/organize/albums/","text":"Albums \u00b6 Create a new album \u00b6 Go to Albums. In the upper right corner click . A new album with name \"Month Year\" is created. Edit album \u00b6 Go to Albums. To open the edit dialogue click on the album title. OR Select album, open context menu and click . OR Open album and click in the upper right corner. Edit album details and click save. Add photos to album \u00b6 Select photos and videos. Click context menu. Click . Select album. Click add to album. Tip You can select many photos at once using shift. Remove photos from album \u00b6 Go to your album. Select photos/videos you want to remove. Click context menu. Click .","title":"Albums"},{"location":"user-guide/organize/albums/#albums","text":"","title":"Albums"},{"location":"user-guide/organize/albums/#create-a-new-album","text":"Go to Albums. In the upper right corner click . A new album with name \"Month Year\" is created.","title":"Create a new album"},{"location":"user-guide/organize/albums/#edit-album","text":"Go to Albums. To open the edit dialogue click on the album title. OR Select album, open context menu and click . OR Open album and click in the upper right corner. Edit album details and click save.","title":"Edit album"},{"location":"user-guide/organize/albums/#add-photos-to-album","text":"Select photos and videos. Click context menu. Click . Select album. Click add to album. Tip You can select many photos at once using shift.","title":"Add photos to album"},{"location":"user-guide/organize/albums/#remove-photos-from-album","text":"Go to your album. Select photos/videos you want to remove. Click context menu. Click .","title":"Remove photos from album"},{"location":"user-guide/organize/archive/","text":"Archive \u00b6 You can move photos and videos you do not want to keep in your collection to Archive. Content that is archived is not deleted but it will not appear in any section apart from Archive. Archive photos \u00b6 Select photos/videos. Click context menu. Click . Confirm. Restore photos from archive \u00b6 Go to Archive. Select photos/videos. Click context menu. Click . Currently there is no permanent deletion possible in PhotoPrism. In case you want to permanently delete a photo or video you must delete it in your Originals folder directly. We might add this functionality later.","title":"Archive"},{"location":"user-guide/organize/archive/#archive","text":"You can move photos and videos you do not want to keep in your collection to Archive. Content that is archived is not deleted but it will not appear in any section apart from Archive.","title":"Archive"},{"location":"user-guide/organize/archive/#archive-photos","text":"Select photos/videos. Click context menu. Click . Confirm.","title":"Archive photos"},{"location":"user-guide/organize/archive/#restore-photos-from-archive","text":"Go to Archive. Select photos/videos. Click context menu. Click . Currently there is no permanent deletion possible in PhotoPrism. In case you want to permanently delete a photo or video you must delete it in your Originals folder directly. We might add this functionality later.","title":"Restore photos from archive"},{"location":"user-guide/organize/browse/","text":"Browse through your photo collection \u00b6 PhotoPrisms photo/video views are a nice way for you to browse through your photo collection. They enable you to re-discover forgotten photos, find specific photos you are looking for or organize your photos. Sections \u00b6 Using the main navigation you can visit the different sections of your photo library: Photos \u00b6 shows all photos that are not in review or archived or private. Hint In case the review, private or archive functions are turned off - Photos displays those photos as well. Favorites \u00b6 Shows all photos and videos you liked. Private \u00b6 Shows photos and videos marked as private. Videos \u00b6 Shows videos that are not in review or archived or private. Albums \u00b6 Shows albums you created. Labels \u00b6 Shows your photos and videos grouped by labels like cat, dog or beach. Places \u00b6 Displays all photos and videos with location information on a worldmap. Moments \u00b6 Discover albums we automatically create for you. Calendar \u00b6 Organizes your photos due to time taken.","title":"Sections"},{"location":"user-guide/organize/browse/#browse-through-your-photo-collection","text":"PhotoPrisms photo/video views are a nice way for you to browse through your photo collection. They enable you to re-discover forgotten photos, find specific photos you are looking for or organize your photos.","title":"Browse through your photo collection"},{"location":"user-guide/organize/browse/#sections","text":"Using the main navigation you can visit the different sections of your photo library:","title":"Sections"},{"location":"user-guide/organize/browse/#photos","text":"shows all photos that are not in review or archived or private. Hint In case the review, private or archive functions are turned off - Photos displays those photos as well.","title":"Photos"},{"location":"user-guide/organize/browse/#favorites","text":"Shows all photos and videos you liked.","title":"Favorites "},{"location":"user-guide/organize/browse/#private","text":"Shows photos and videos marked as private.","title":"Private "},{"location":"user-guide/organize/browse/#videos","text":"Shows videos that are not in review or archived or private.","title":"Videos "},{"location":"user-guide/organize/browse/#albums","text":"Shows albums you created.","title":"Albums "},{"location":"user-guide/organize/browse/#labels","text":"Shows your photos and videos grouped by labels like cat, dog or beach.","title":"Labels "},{"location":"user-guide/organize/browse/#places","text":"Displays all photos and videos with location information on a worldmap.","title":"Places "},{"location":"user-guide/organize/browse/#moments","text":"Discover albums we automatically create for you.","title":"Moments "},{"location":"user-guide/organize/browse/#calendar","text":"Organizes your photos due to time taken.","title":"Calendar "},{"location":"user-guide/organize/calendar/","text":"Calendar \u00b6 Our Calendar enables you to browse through your photos by year and month. The context menu allows you to perform the following actions: Delete month \u00b6 Select month. Open context menu. Click . Confirm. Hint Only the representation of the month will be deleted. Your files stay untouched. Download month as zip \u00b6 Select month. Open context menu. Click . Create album from month \u00b6 Select month. Open context menu. Click . Select existing album or enter new album name. Click Add to album.","title":"Calendar"},{"location":"user-guide/organize/calendar/#calendar","text":"Our Calendar enables you to browse through your photos by year and month. The context menu allows you to perform the following actions:","title":"Calendar"},{"location":"user-guide/organize/calendar/#delete-month","text":"Select month. Open context menu. Click . Confirm. Hint Only the representation of the month will be deleted. Your files stay untouched.","title":"Delete month"},{"location":"user-guide/organize/calendar/#download-month-as-zip","text":"Select month. Open context menu. Click .","title":"Download month as zip"},{"location":"user-guide/organize/calendar/#create-album-from-month","text":"Select month. Open context menu. Click . Select existing album or enter new album name. Click Add to album.","title":"Create album from month"},{"location":"user-guide/organize/download/","text":"Download \u00b6 PhotoPrisms download functionality lets you download your photos in 5 different sizes. Download single photo \u00b6 Click on the photo. In fullscreen mode click . Download multiple photos \u00b6 Select photos. Click on the context menu. Click . Photos will be downloaded in original size. Tip You can select many photos at once using shift.","title":"Download photos"},{"location":"user-guide/organize/download/#download","text":"PhotoPrisms download functionality lets you download your photos in 5 different sizes.","title":"Download"},{"location":"user-guide/organize/download/#download-single-photo","text":"Click on the photo. In fullscreen mode click .","title":"Download single photo"},{"location":"user-guide/organize/download/#download-multiple-photos","text":"Select photos. Click on the context menu. Click . Photos will be downloaded in original size. Tip You can select many photos at once using shift.","title":"Download multiple photos"},{"location":"user-guide/organize/edit/","text":"Edit photo details \u00b6 PhotoPrisms edit dialogue enables you to add/edit various types of metadata related to your photos/videos. During indexing PhotoPrism collects as much data as possible from sidecar files and the photo itself. Open the edit dialogue \u00b6 From card view \u00b6 Click on the photos title, time or camera information. From full screen mode \u00b6 In the upper right corner click . From any view \u00b6 Select one or multiple photos. Click on context menu. Click . Edit Details \u00b6 In the edit dialogue's Detail tab you can view and edit the following data: Title Day Month Year UTC time UTC date Time zone Latitude Longitude Altitude Country Camera ISO Exposure Lens F Number Focal Length Subject Artist Copyright License Description Keywords Notes \"Apply\" saves changes. \"Ok\" saves changes and closes edit dialogue. Info Lots of metadata like labels, keywords, title, location, camera details are generated by PhotoPrism itself during indexing. Once you change data manually PhotoPrism always keeps your data even if you index again. Tip Every keyword can be used in PhotoPrisms search to find photos or videos. Edit Labels \u00b6 In the edit dialogue's Label tab you can view and edit labels . Edit Files \u00b6 In the edit dialogue's Files tab you see all files that belong to a photo. In PhotoPrism a photo can consist of multiple files like a raw file + a jpeg version of this raw file + a related xmp or json file. To open file details click . In case you have grouped files you can change the primary file or ungroup files using the respective buttons.","title":"Edit photos"},{"location":"user-guide/organize/edit/#edit-photo-details","text":"PhotoPrisms edit dialogue enables you to add/edit various types of metadata related to your photos/videos. During indexing PhotoPrism collects as much data as possible from sidecar files and the photo itself.","title":"Edit photo details"},{"location":"user-guide/organize/edit/#open-the-edit-dialogue","text":"","title":"Open the edit dialogue"},{"location":"user-guide/organize/edit/#from-card-view","text":"Click on the photos title, time or camera information.","title":"From card view"},{"location":"user-guide/organize/edit/#from-full-screen-mode","text":"In the upper right corner click .","title":"From full screen mode"},{"location":"user-guide/organize/edit/#from-any-view","text":"Select one or multiple photos. Click on context menu. Click .","title":"From any view"},{"location":"user-guide/organize/edit/#edit-details","text":"In the edit dialogue's Detail tab you can view and edit the following data: Title Day Month Year UTC time UTC date Time zone Latitude Longitude Altitude Country Camera ISO Exposure Lens F Number Focal Length Subject Artist Copyright License Description Keywords Notes \"Apply\" saves changes. \"Ok\" saves changes and closes edit dialogue. Info Lots of metadata like labels, keywords, title, location, camera details are generated by PhotoPrism itself during indexing. Once you change data manually PhotoPrism always keeps your data even if you index again. Tip Every keyword can be used in PhotoPrisms search to find photos or videos.","title":"Edit Details"},{"location":"user-guide/organize/edit/#edit-labels","text":"In the edit dialogue's Label tab you can view and edit labels .","title":"Edit Labels"},{"location":"user-guide/organize/edit/#edit-files","text":"In the edit dialogue's Files tab you see all files that belong to a photo. In PhotoPrism a photo can consist of multiple files like a raw file + a jpeg version of this raw file + a related xmp or json file. To open file details click . In case you have grouped files you can change the primary file or ungroup files using the respective buttons.","title":"Edit Files"},{"location":"user-guide/organize/folders/","text":"Folders \u00b6 We automatically display all folders of your originals directory in the Folders section. In case you add new files to your originals directory your folders will be updated. The context menu allows you to perform the following actions: Delete folder \u00b6 Select folder. Open context menu. Click . Confirm. Hint Only the representation of the folder will be deleted. Your files stay untouched. Download folder as zip \u00b6 Select folder. Open context menu. Click . Create album from folder \u00b6 Select folder. Open context menu. Click . Select existing album or enter new album name. Click Add to album.","title":"Folders"},{"location":"user-guide/organize/folders/#folders","text":"We automatically display all folders of your originals directory in the Folders section. In case you add new files to your originals directory your folders will be updated. The context menu allows you to perform the following actions:","title":"Folders"},{"location":"user-guide/organize/folders/#delete-folder","text":"Select folder. Open context menu. Click . Confirm. Hint Only the representation of the folder will be deleted. Your files stay untouched.","title":"Delete folder"},{"location":"user-guide/organize/folders/#download-folder-as-zip","text":"Select folder. Open context menu. Click .","title":"Download folder as zip"},{"location":"user-guide/organize/folders/#create-album-from-folder","text":"Select folder. Open context menu. Click . Select existing album or enter new album name. Click Add to album.","title":"Create album from folder"},{"location":"user-guide/organize/labels/","text":"Labels \u00b6 PhotoPrism uses labels to classify images. Other tools use the term tags instead of labels. Labels are set automatically when adding new photos. You can manually add new labels or edit/remove the ones that have been created by us. In Labels you find all labels of your photos and videos. You can star labels by clicking . Stared labels will be listed first. To see only labels with high priority click in the upper right corner. View all photos with a certain label \u00b6 Go to Labels. Click on the label you are interested in. Info Alternatively you can use the search field in Photos/Videos. You search for photos with a special label like this: label:dog . Add label to a photo/video \u00b6 Go to the photo edit dialogue . Go to Labels tab. Click on the label field in the last row of the label table. Enter a label name. Click on the right side of this row. Remove/delete label from a photo/video \u00b6 Labels that have been set automatically can be removed. Manually added labels can be deleted. Go to the photo edit dialogue . Go to Labels tab. Click the / button of the label you want to remove/delete. Info Removed labels have a confidence of 0% and can be activated again at any time by clicking add. Info You can hide Labels in the settings Rename a label \u00b6 Go to the photo edit dialogue of any photo that has the label you want to rename. Go to Labels tab. Click on the label name you want to change. Change the name and click enter. The changes will be applied to all photos with this label after the next indexing Attention Be aware this change applies to all photos that have this label. Delete a label \u00b6 You can permanently delete a label. No file will get a deleted label set during indexing. Go to Labels. Select the label you want to delete. Open the context menu. Click . Confirm. Attention In case you want a deleted label to appear again, you need to add it to one photo and then index all files again.","title":"Labels"},{"location":"user-guide/organize/labels/#labels","text":"PhotoPrism uses labels to classify images. Other tools use the term tags instead of labels. Labels are set automatically when adding new photos. You can manually add new labels or edit/remove the ones that have been created by us. In Labels you find all labels of your photos and videos. You can star labels by clicking . Stared labels will be listed first. To see only labels with high priority click in the upper right corner.","title":"Labels"},{"location":"user-guide/organize/labels/#view-all-photos-with-a-certain-label","text":"Go to Labels. Click on the label you are interested in. Info Alternatively you can use the search field in Photos/Videos. You search for photos with a special label like this: label:dog .","title":"View all photos with a certain label"},{"location":"user-guide/organize/labels/#add-label-to-a-photovideo","text":"Go to the photo edit dialogue . Go to Labels tab. Click on the label field in the last row of the label table. Enter a label name. Click on the right side of this row.","title":"Add label to a photo/video"},{"location":"user-guide/organize/labels/#removedelete-label-from-a-photovideo","text":"Labels that have been set automatically can be removed. Manually added labels can be deleted. Go to the photo edit dialogue . Go to Labels tab. Click the / button of the label you want to remove/delete. Info Removed labels have a confidence of 0% and can be activated again at any time by clicking add. Info You can hide Labels in the settings","title":"Remove/delete label from a photo/video"},{"location":"user-guide/organize/labels/#rename-a-label","text":"Go to the photo edit dialogue of any photo that has the label you want to rename. Go to Labels tab. Click on the label name you want to change. Change the name and click enter. The changes will be applied to all photos with this label after the next indexing Attention Be aware this change applies to all photos that have this label.","title":"Rename a label"},{"location":"user-guide/organize/labels/#delete-a-label","text":"You can permanently delete a label. No file will get a deleted label set during indexing. Go to Labels. Select the label you want to delete. Open the context menu. Click . Confirm. Attention In case you want a deleted label to appear again, you need to add it to one photo and then index all files again.","title":"Delete a label"},{"location":"user-guide/organize/moments/","text":"Moments \u00b6 PhotoPrism creates moments out of your memories. Moments get constantly updated in case you add new photos. The context menu allows you to perform the following actions: Delete moment \u00b6 Select moment. Open context menu. Click . Confirm. Hint Only the moment will be deleted. Your files stay untouched. Download moment as zip \u00b6 Select moment. Open context menu. Click . Create album from moment \u00b6 Select moment. Open context menu. Click . Select existing album or enter new album name. Click Add to album.","title":"Moments"},{"location":"user-guide/organize/moments/#moments","text":"PhotoPrism creates moments out of your memories. Moments get constantly updated in case you add new photos. The context menu allows you to perform the following actions:","title":"Moments"},{"location":"user-guide/organize/moments/#delete-moment","text":"Select moment. Open context menu. Click . Confirm. Hint Only the moment will be deleted. Your files stay untouched.","title":"Delete moment"},{"location":"user-guide/organize/moments/#download-moment-as-zip","text":"Select moment. Open context menu. Click .","title":"Download moment as zip"},{"location":"user-guide/organize/moments/#create-album-from-moment","text":"Select moment. Open context menu. Click . Select existing album or enter new album name. Click Add to album.","title":"Create album from moment"},{"location":"user-guide/organize/panoramas/","text":"Panoramas \u00b6 PhotoPrism automatically marks photos with an aspect ratio of 2/1 or higher as panorama. You can view all your panorama images in the Panorama section. Edit panorama flag \u00b6 Open the photo edit dialogue . Click . Set or unset the panorama flag.","title":"Panoramas"},{"location":"user-guide/organize/panoramas/#panoramas","text":"PhotoPrism automatically marks photos with an aspect ratio of 2/1 or higher as panorama. You can view all your panorama images in the Panorama section.","title":"Panoramas"},{"location":"user-guide/organize/panoramas/#edit-panorama-flag","text":"Open the photo edit dialogue . Click . Set or unset the panorama flag.","title":"Edit panorama flag"},{"location":"user-guide/organize/places/","text":"Places \u00b6 Places displays all photos with GPS information on a world map. You can zoom either by using or or by clicking on a photo or photo collector (the blue circles with a photo count inside). When using the search only photos matching the search term are shown on the map. You can choose between different map styles like streets or topographic in the settings . Tip To switch from a photos card view directly to the location of a photo on the world map click on the location.","title":"Places"},{"location":"user-guide/organize/places/#places","text":"Places displays all photos with GPS information on a world map. You can zoom either by using or or by clicking on a photo or photo collector (the blue circles with a photo count inside). When using the search only photos matching the search term are shown on the map. You can choose between different map styles like streets or topographic in the settings . Tip To switch from a photos card view directly to the location of a photo on the world map click on the location.","title":"Places"},{"location":"user-guide/organize/private/","text":"Hide your private photos \u00b6 What does private mean? \u00b6 Some of your photos might be private for personal reasons. Our private functionality provides you with a solution to hide private photos or videos from some sections. This way you can let family and friends browse through your photos without risking that they see photos you do not want them to see. By default, photos marked as private will not appear in the following sections: Photos Videos Labels Places Favorites Shared albums Info In case you want private content to appear everywhere you can configure that in the settings . Mark single photos/videos as private \u00b6 Go to Photos. Make sure you are in list view. Click on the right. Mark multiple photos as private \u00b6 Go to Photos. Select photos/videos. Click context menu. Click . Remove the private flag from single photo \u00b6 Go to Private. Make sure you are in list view. Click on the right. Remove the private flag from multiple photos/videos \u00b6 Go to Private. Select photos/videos. Click context menu. Click .","title":"Private"},{"location":"user-guide/organize/private/#hide-your-private-photos","text":"","title":"Hide your private photos"},{"location":"user-guide/organize/private/#what-does-private-mean","text":"Some of your photos might be private for personal reasons. Our private functionality provides you with a solution to hide private photos or videos from some sections. This way you can let family and friends browse through your photos without risking that they see photos you do not want them to see. By default, photos marked as private will not appear in the following sections: Photos Videos Labels Places Favorites Shared albums Info In case you want private content to appear everywhere you can configure that in the settings .","title":"What does private mean?"},{"location":"user-guide/organize/private/#mark-single-photosvideos-as-private","text":"Go to Photos. Make sure you are in list view. Click on the right.","title":"Mark single photos/videos as private"},{"location":"user-guide/organize/private/#mark-multiple-photos-as-private","text":"Go to Photos. Select photos/videos. Click context menu. Click .","title":"Mark multiple photos as private"},{"location":"user-guide/organize/private/#remove-the-private-flag-from-single-photo","text":"Go to Private. Make sure you are in list view. Click on the right.","title":"Remove the private flag from single photo"},{"location":"user-guide/organize/private/#remove-the-private-flag-from-multiple-photosvideos","text":"Go to Private. Select photos/videos. Click context menu. Click .","title":"Remove the private flag from multiple photos/videos"},{"location":"user-guide/organize/review/","text":"Review non-photographic and low-quality images \u00b6 When adding new photos a quality score from 1 to 5 is created automatically. Photos with a quality score lower than 3 do not appear in Photos until you approve them (unless review was disabled in Settings ) The quality score depends on the following: Known date and/or GPS coordinates At least 2 MP resolution if taken after 2012 Photo not classified as info or screenshot Photo is favorite, was edited or approved Info In case you do not need the review mechanism you can turn it off in the settings How to approve photos \u00b6 Open the photo's edit dialogue . Click approve. Or: In the review section make sure you are in card view. Click approve. Attention The quality score is constantly updated. If you add date or location information to a photo or like it, the quality score increases automatically. In case the new score is equal or greater than 3 the photo is approved automatically.","title":"Review"},{"location":"user-guide/organize/review/#review-non-photographic-and-low-quality-images","text":"When adding new photos a quality score from 1 to 5 is created automatically. Photos with a quality score lower than 3 do not appear in Photos until you approve them (unless review was disabled in Settings ) The quality score depends on the following: Known date and/or GPS coordinates At least 2 MP resolution if taken after 2012 Photo not classified as info or screenshot Photo is favorite, was edited or approved Info In case you do not need the review mechanism you can turn it off in the settings","title":"Review non-photographic and low-quality images"},{"location":"user-guide/organize/review/#how-to-approve-photos","text":"Open the photo's edit dialogue . Click approve. Or: In the review section make sure you are in card view. Click approve. Attention The quality score is constantly updated. If you add date or location information to a photo or like it, the quality score increases automatically. In case the new score is equal or greater than 3 the photo is approved automatically.","title":"How to approve photos"},{"location":"user-guide/organize/scans/","text":"Scans \u00b6 You can mark scanned photos as scans within the photo edit dialogue. We aim to automatically mark scans in the future. Set scan flag \u00b6 Open the photo edit dialogue . Click . Set or unset the scan flag.","title":"Scans"},{"location":"user-guide/organize/scans/#scans","text":"You can mark scanned photos as scans within the photo edit dialogue. We aim to automatically mark scans in the future.","title":"Scans"},{"location":"user-guide/organize/scans/#set-scan-flag","text":"Open the photo edit dialogue . Click . Set or unset the scan flag.","title":"Set scan flag"},{"location":"user-guide/organize/search/","text":"Search \u00b6 In all sections you can use the search bar to find certain photos, videos, albums or labels. You can search for all kind of things: Objects that are displayed on the photo The main color of the photo The filename or foldername of a photo Location where the photo has been taken ... Just try it! Tip In case you want to search for multiple things at once, enter the terms separated by a space. A search for cat blue berlin will find all photos that either display a cat, have blue as main color or have been taken in Berlin. Filters \u00b6 Additionally to the search you can set filters for: Country Year Order Camera Lens Color Category In case you set multiple filters only photos are shown in the search result that fulfill all filter criteria. Tip You can use filters as well in the search bar like this: label:cat color:green type: live You find the full list of filters below. Search filter \u00b6 PhotoPrism allows you to use multiple filters in its search. Filter Examples label cat color purple, magenta, pink, red, orange, gold, yellow, lime, green, teal, cyan, blue, brown, white, grey, black before 2009-01-02 after 2006-01-02 type image, video, raw, live name \"IMG_9831-112*\", \"IMG_9831-112\" original \"IMG_9831-112*\", \"IMG_9831-112\" country \"de\" state \"Baden-W\u00fcrttemberg\", \"Baden*\" title \"Holiday*\", \"Holiday / 2012\" lat 38.300457 lng 8.931358 fmin 1.8 fmax 4.5 chroma 5 year 2012 month 5 day 23 quality 1, 2, 3, 4, 5 panorama true, false scan true, false favorite true, false archived true, false private true, false review true, false unsorted true, false stack true, false mono true, false portrait true, false error true, false hidden true, false","title":"Search & Filters"},{"location":"user-guide/organize/search/#search","text":"In all sections you can use the search bar to find certain photos, videos, albums or labels. You can search for all kind of things: Objects that are displayed on the photo The main color of the photo The filename or foldername of a photo Location where the photo has been taken ... Just try it! Tip In case you want to search for multiple things at once, enter the terms separated by a space. A search for cat blue berlin will find all photos that either display a cat, have blue as main color or have been taken in Berlin.","title":"Search"},{"location":"user-guide/organize/search/#filters","text":"Additionally to the search you can set filters for: Country Year Order Camera Lens Color Category In case you set multiple filters only photos are shown in the search result that fulfill all filter criteria. Tip You can use filters as well in the search bar like this: label:cat color:green type: live You find the full list of filters below.","title":"Filters"},{"location":"user-guide/organize/search/#search-filter","text":"PhotoPrism allows you to use multiple filters in its search. Filter Examples label cat color purple, magenta, pink, red, orange, gold, yellow, lime, green, teal, cyan, blue, brown, white, grey, black before 2009-01-02 after 2006-01-02 type image, video, raw, live name \"IMG_9831-112*\", \"IMG_9831-112\" original \"IMG_9831-112*\", \"IMG_9831-112\" country \"de\" state \"Baden-W\u00fcrttemberg\", \"Baden*\" title \"Holiday*\", \"Holiday / 2012\" lat 38.300457 lng 8.931358 fmin 1.8 fmax 4.5 chroma 5 year 2012 month 5 day 23 quality 1, 2, 3, 4, 5 panorama true, false scan true, false favorite true, false archived true, false private true, false review true, false unsorted true, false stack true, false mono true, false portrait true, false error true, false hidden true, false","title":"Search filter"},{"location":"user-guide/organize/stacks/","text":"Stacks \u00b6 Grouped Files \u00b6 In case you have \"Grouped Sequentials\" enabled in settings you might have photos that consist of more than one JPEG file. Grouped files are displayed in Stacks. Info Files are grouped in two cases: Filenames are related: 'IMG_1234 (2)' or 'IMG_1234 copy 2' are assumed to belong to the same photo. Photos that have been taken at the same location AND in the same second. Browse through related files \u00b6 Click on sequence. Use arrows to see all photos of the sequence. Change primary file \u00b6 The JPEG file marked as primary is used in our views. It is listed first in the files section. To change the primary file: Open the photos edit dialogue . Open Files tab. Click of the file you want to set as primary. Click Primary. Ungroup files \u00b6 Open the photos edit dialogue . Open Files tab. Click of the JPEG file that is not marked as primary. Click Ungroup. Now, both files appear in our views.","title":"Stacks"},{"location":"user-guide/organize/stacks/#stacks","text":"","title":"Stacks"},{"location":"user-guide/organize/stacks/#grouped-files","text":"In case you have \"Grouped Sequentials\" enabled in settings you might have photos that consist of more than one JPEG file. Grouped files are displayed in Stacks. Info Files are grouped in two cases: Filenames are related: 'IMG_1234 (2)' or 'IMG_1234 copy 2' are assumed to belong to the same photo. Photos that have been taken at the same location AND in the same second.","title":"Grouped Files"},{"location":"user-guide/organize/stacks/#browse-through-related-files","text":"Click on sequence. Use arrows to see all photos of the sequence.","title":"Browse through related files"},{"location":"user-guide/organize/stacks/#change-primary-file","text":"The JPEG file marked as primary is used in our views. It is listed first in the files section. To change the primary file: Open the photos edit dialogue . Open Files tab. Click of the file you want to set as primary. Click Primary.","title":"Change primary file"},{"location":"user-guide/organize/stacks/#ungroup-files","text":"Open the photos edit dialogue . Open Files tab. Click of the JPEG file that is not marked as primary. Click Ungroup. Now, both files appear in our views.","title":"Ungroup files"},{"location":"user-guide/organize/video/","text":"Videos \u00b6 PhotoPrism currently supports avc1 videos. Of course there are a lot more formats to come! In Videos you find all your videos. To play a video click . To play videos in fullscreen mode click on the video or next to the videos title. Live photos \u00b6 Live photos are treated as photos. They are marked with in the upper left corner. You can filter for them using type:live . To play a live photo just hover over it.","title":"Videos"},{"location":"user-guide/organize/video/#videos","text":"PhotoPrism currently supports avc1 videos. Of course there are a lot more formats to come! In Videos you find all your videos. To play a video click . To play videos in fullscreen mode click on the video or next to the videos title.","title":"Videos"},{"location":"user-guide/organize/video/#live-photos","text":"Live photos are treated as photos. They are marked with in the upper left corner. You can filter for them using type:live . To play a live photo just hover over it.","title":"Live photos"},{"location":"user-guide/organize/views/","text":"Views \u00b6 PhotoPrism provides you three beautiful views to enjoy your photos and videos. The card view displays important metadata like title, time and location next to the photos. The mosaic view lets you enjoy your photos without distraction. The list view provides you photos and metadata in a well-arranged list. To switch between views you can either use the filter in the filter bar or the view button ( , , ) in the upper right corner. Additionally you can open your photos/videos in fullscreen mode and start a slideshow ( ).","title":"Views"},{"location":"user-guide/organize/views/#views","text":"PhotoPrism provides you three beautiful views to enjoy your photos and videos. The card view displays important metadata like title, time and location next to the photos. The mosaic view lets you enjoy your photos without distraction. The list view provides you photos and metadata in a well-arranged list. To switch between views you can either use the filter in the filter bar or the view button ( , , ) in the upper right corner. Additionally you can open your photos/videos in fullscreen mode and start a slideshow ( ).","title":"Views"},{"location":"user-guide/settings/account/","text":"Account Settings \u00b6 Change password \u00b6 Click Settings. Click Account. Enter current password. Enter new password twice. Click Change.","title":"Account"},{"location":"user-guide/settings/account/#account-settings","text":"","title":"Account Settings"},{"location":"user-guide/settings/account/#change-password","text":"Click Settings. Click Account. Enter current password. Enter new password twice. Click Change.","title":"Change password"},{"location":"user-guide/settings/library/","text":"Library Settings \u00b6 RAW to JPEG Conversion \u00b6 Many photographers keep their originals in some sort of lossless RAW format instead of compressed JPEG, especially when shooting with a Digital SLR. Some mobile phones also support RAW or use HEIC/HEIF for a similar purpose. PhotoPrism aims at providing excellent support for all RAW formats, independent of camera brand and model. Please let us know when there is an issue with your specific device. Web browsers in general cannot display RAW image files. They need to be converted, which is what our import and convert commands do. You'll also find a checkbox for this step in our Web UI . In addition, PhotoPrism now also supports TIFF, PNG, BMP and GIF files. Be aware that files in those formats often don't contain useful metadata and are typically used for screenshots, charts, graphs and icons only. Read-only mode \u00b6 Conversion is currently disabled in read-only mode because creating JPEGs from RAWs is a pretty expensive operation and it makes sense to store JPEGs right next to their RAW files so that they can be found and used again in the future. Otherwise it might not be possible to match the files again and you don't want to put the expensively created JPEG file in a temporary directory or do all this on the fly in memory, unless you have a really fast computer. Most users want to make a backup of their files, so files that belong together should not be randomly distributed across the file system. 20 years from now, it's probably easier to open a JPEG than render a proprietary RAW file again in good quality. However, we see the point of users who want to use PhotoPrism as a read-only photo viewer that should not create any files in their originals directory. The easiest solution is to create JPEGs manually or use another tool you trust to do this automatically. With some effort, it might be possible to extract embedded JPEGs in acceptable quality from many RAW formats and use those in read-only mode. Alternatively, JPEGs could be created in the cache directory with all the disadvantages mentioned above, the storage will be gone one way or the other. Note that JPEGs in full-resolution are relatively large and you won't be able to find or reuse them as files there have a different naming scheme based on the hash of the original file. Idea: Put converted images in cache/converted by default with an option to automatically move / copy them to the originals directory. Feedback welcome.","title":"Library"},{"location":"user-guide/settings/library/#library-settings","text":"","title":"Library Settings"},{"location":"user-guide/settings/library/#raw-to-jpeg-conversion","text":"Many photographers keep their originals in some sort of lossless RAW format instead of compressed JPEG, especially when shooting with a Digital SLR. Some mobile phones also support RAW or use HEIC/HEIF for a similar purpose. PhotoPrism aims at providing excellent support for all RAW formats, independent of camera brand and model. Please let us know when there is an issue with your specific device. Web browsers in general cannot display RAW image files. They need to be converted, which is what our import and convert commands do. You'll also find a checkbox for this step in our Web UI . In addition, PhotoPrism now also supports TIFF, PNG, BMP and GIF files. Be aware that files in those formats often don't contain useful metadata and are typically used for screenshots, charts, graphs and icons only.","title":"RAW to JPEG Conversion"},{"location":"user-guide/settings/library/#read-only-mode","text":"Conversion is currently disabled in read-only mode because creating JPEGs from RAWs is a pretty expensive operation and it makes sense to store JPEGs right next to their RAW files so that they can be found and used again in the future. Otherwise it might not be possible to match the files again and you don't want to put the expensively created JPEG file in a temporary directory or do all this on the fly in memory, unless you have a really fast computer. Most users want to make a backup of their files, so files that belong together should not be randomly distributed across the file system. 20 years from now, it's probably easier to open a JPEG than render a proprietary RAW file again in good quality. However, we see the point of users who want to use PhotoPrism as a read-only photo viewer that should not create any files in their originals directory. The easiest solution is to create JPEGs manually or use another tool you trust to do this automatically. With some effort, it might be possible to extract embedded JPEGs in acceptable quality from many RAW formats and use those in read-only mode. Alternatively, JPEGs could be created in the cache directory with all the disadvantages mentioned above, the storage will be gone one way or the other. Note that JPEGs in full-resolution are relatively large and you won't be able to find or reuse them as files there have a different naming scheme based on the hash of the original file. Idea: Put converted images in cache/converted by default with an option to automatically move / copy them to the originals directory. Feedback welcome.","title":"Read-only mode"},{"location":"user-guide/settings/places/","text":"PhotoPrism Places \u00b6 We've recently launched PhotoPrism Places , a Geocoding API that replaces OpenStreetMap development infrastructure. Our users now enjoy much better performance, higher availability and more privacy. In addition, we're going to add information about public events that have taken place at a location. This can be used to automatically create albums of popular music festivals or sports events. Privacy \u00b6 Geocoding requests are NOT logged, but developers can of course see cached items in MariaDB without personal information. That's the point of a cache. Those will be randomly distributed with hot spots around tourist attractions and big cities. Because of HTTPS, your internet provider can't see the exact request, just that you contacted a server. The API approximates coordinates, encodes them with S2 and doesn't care about street or house number: Performance \u00b6 First benchmarks show that up to 2500 req/s can be handled. Compare this with the pricing of commercial providers and you'll see the value. Response times range from 10ms to 7\u03bcs, depending on the query and cache. If you prefer running this on-site: We use a 6-core Intel Xeon processor, 320 GB of SSD and 16 GB of memory. In addition you'll have to download ~100 GB of data. Due to the properties of S2 cell IDs, scaling and sharding should be easy if needed.","title":"Places"},{"location":"user-guide/settings/places/#photoprism-places","text":"We've recently launched PhotoPrism Places , a Geocoding API that replaces OpenStreetMap development infrastructure. Our users now enjoy much better performance, higher availability and more privacy. In addition, we're going to add information about public events that have taken place at a location. This can be used to automatically create albums of popular music festivals or sports events.","title":"PhotoPrism Places"},{"location":"user-guide/settings/places/#privacy","text":"Geocoding requests are NOT logged, but developers can of course see cached items in MariaDB without personal information. That's the point of a cache. Those will be randomly distributed with hot spots around tourist attractions and big cities. Because of HTTPS, your internet provider can't see the exact request, just that you contacted a server. The API approximates coordinates, encodes them with S2 and doesn't care about street or house number:","title":"Privacy"},{"location":"user-guide/settings/places/#performance","text":"First benchmarks show that up to 2500 req/s can be handled. Compare this with the pricing of commercial providers and you'll see the value. Response times range from 10ms to 7\u03bcs, depending on the query and cache. If you prefer running this on-site: We use a 6-core Intel Xeon processor, 320 GB of SSD and 16 GB of memory. In addition you'll have to download ~100 GB of data. Due to the properties of S2 cell IDs, scaling and sharding should be easy if needed.","title":"Performance"},{"location":"user-guide/settings/thumbnails/","text":"Thumbnail Settings \u00b6 For best results, you should (at least) set jpeg quality to 95 and use the \"lanczos\" filter. Obviously this will require significantly more storage and CPU time. From our experience, \"cubic\" might be 30% faster than \"lanczos\" on modern desktop and server CPUs. Keep in mind that you only need to create thumbnails once and then can enjoy them for the rest of your life. Config Options \u00b6 --jpeg-quality value, -q value set to 95 for high-quality thumbnails (25-100) (default: 90) [$PHOTOPRISM_JPEG_QUALITY] --thumb-size value, -s value default thumbnail size limit in pixels (720-3840) (default: 2048) [$PHOTOPRISM_THUMB_SIZE] --thumb-limit value, -x value on-demand thumbnail size limit in pixels (720-3840) (default: 3840) [$PHOTOPRISM_THUMB_LIMIT] --thumb-uncached, -u on-demand rendering of default thumbnails (high memory and cpu usage) [$PHOTOPRISM_THUMB_UNCACHED] --thumb-filter value, -f value resample filter (best to worst: blackman, lanczos, cubic, linear) (default: \"lanczos\") [$PHOTOPRISM_THUMB_FILTER] Example \u00b6 You can limit the size of JPEG thumbnails using the -s parameter when you run commands: photoprism -s 720 start The minimum size is 720px. This will render the following images: 500px is used for tiles in search results, the others are mostly needed for classification. Size is still ~550kb with high quality (95). With lower JPEG quality (80), you'll get it down to ~100kb: photoprism -s 720 -q 80 start This page demonstrates and discusses the effects of JPEG compression: http://fotoforensics.com/tutorial-estq.php Image classification obviously works better with sharp images, so it's possible you'll get less accurate labels with higher compression. Please share your experience. If size limit is exceeded, for example because you use a large screen, originals will be used for displaying images in the frontend. This might result in the image displayed with wrong rotation if the browser doesn't rotate it automatically. Sizes \u00b6 Name Source Width Height Use colors fit_720 3 3 colors tile_50 tile_500 50 50 maps tile_100 tile_500 100 100 maps tile_224 tile_500 224 224 tensorflow left_224 fit_720 224 224 tensorflow right_224 fit_720 224 224 tensorflow tile_500 500 500 preview fit_720 720 720 lightbox fit_1280 fit_2048 1280 1024 lightbox fit_1920 fit_2048 1920 1200 lightbox fit_2048 2048 2048 lightbox fit_2560 2560 1600 lightbox / retina fit_3840 3840 2400 lightbox / retina Filters \u00b6 Source: https://ijarcce.com/wp-content/uploads/2016/02/IJARCCE-7.pdf Linear \u00b6 Bilinear interpolation takes a weighted average of the four neighborhood pixels to calculate its final interpolated value. The result is much smoother image than the original image. When all known pixel distances are equal, then the interpolated value is simply their sum divided by four. This technique performs interpolation in both directions, horizontal and vertical. This technique gives better result than nearest neighbor interpolation and take less computation time compared to bicubic interpolation. Cubic \u00b6 Catmull-Rom is a local interpolating spline developed for computer graphics purposes. Its initial use was in design of curves and surfaces, and has recently been used in several applications. Catmull-Rom splines are a family of cubic interpolating splines formulated such that the tangent at each point is calculated using the previous and next point on the spline. The results are similar to ones produced by bicubic interpolation with regards to sharpness, but the Catmull-Rom reconstruction is clearly superior in smooth signal region. Lanczos \u00b6 The Lanczos interpolation function is a mathematical formula used to smoothly interpolate the value of a digital image between its samples. It maps each sample of the given image to a translated and scaled copy of the Lanczos kernel, which is a sinc function windowed by the central hump of a dilated sinc function. The sum of these translated and scaled kernels is then evaluated at the desired pixel. Lanczos interpolation has the best properties in terms of detail preservation and minimal generation of aliasing artifacts for geometric transformations not involving strong down sampling. However higher order Lanczos interpolation requires high computational time, which makes it unsuitable for most commercial software. Blackman \u00b6 Blackman is a modification of Lanczos that has better control of ringing artifacts. Examples \u00b6 Original image: The same image resized from 600x400px to 150x100px using different resampling filters. From faster (lower quality) to slower (higher quality): Filter Resize result Nearest Neighbor Bilinear Sharp Bicubic Lanczos","title":"Thumbnails"},{"location":"user-guide/settings/thumbnails/#thumbnail-settings","text":"For best results, you should (at least) set jpeg quality to 95 and use the \"lanczos\" filter. Obviously this will require significantly more storage and CPU time. From our experience, \"cubic\" might be 30% faster than \"lanczos\" on modern desktop and server CPUs. Keep in mind that you only need to create thumbnails once and then can enjoy them for the rest of your life.","title":"Thumbnail Settings"},{"location":"user-guide/settings/thumbnails/#config-options","text":"--jpeg-quality value, -q value set to 95 for high-quality thumbnails (25-100) (default: 90) [$PHOTOPRISM_JPEG_QUALITY] --thumb-size value, -s value default thumbnail size limit in pixels (720-3840) (default: 2048) [$PHOTOPRISM_THUMB_SIZE] --thumb-limit value, -x value on-demand thumbnail size limit in pixels (720-3840) (default: 3840) [$PHOTOPRISM_THUMB_LIMIT] --thumb-uncached, -u on-demand rendering of default thumbnails (high memory and cpu usage) [$PHOTOPRISM_THUMB_UNCACHED] --thumb-filter value, -f value resample filter (best to worst: blackman, lanczos, cubic, linear) (default: \"lanczos\") [$PHOTOPRISM_THUMB_FILTER]","title":"Config Options"},{"location":"user-guide/settings/thumbnails/#example","text":"You can limit the size of JPEG thumbnails using the -s parameter when you run commands: photoprism -s 720 start The minimum size is 720px. This will render the following images: 500px is used for tiles in search results, the others are mostly needed for classification. Size is still ~550kb with high quality (95). With lower JPEG quality (80), you'll get it down to ~100kb: photoprism -s 720 -q 80 start This page demonstrates and discusses the effects of JPEG compression: http://fotoforensics.com/tutorial-estq.php Image classification obviously works better with sharp images, so it's possible you'll get less accurate labels with higher compression. Please share your experience. If size limit is exceeded, for example because you use a large screen, originals will be used for displaying images in the frontend. This might result in the image displayed with wrong rotation if the browser doesn't rotate it automatically.","title":"Example"},{"location":"user-guide/settings/thumbnails/#sizes","text":"Name Source Width Height Use colors fit_720 3 3 colors tile_50 tile_500 50 50 maps tile_100 tile_500 100 100 maps tile_224 tile_500 224 224 tensorflow left_224 fit_720 224 224 tensorflow right_224 fit_720 224 224 tensorflow tile_500 500 500 preview fit_720 720 720 lightbox fit_1280 fit_2048 1280 1024 lightbox fit_1920 fit_2048 1920 1200 lightbox fit_2048 2048 2048 lightbox fit_2560 2560 1600 lightbox / retina fit_3840 3840 2400 lightbox / retina","title":"Sizes"},{"location":"user-guide/settings/thumbnails/#filters","text":"Source: https://ijarcce.com/wp-content/uploads/2016/02/IJARCCE-7.pdf","title":"Filters"},{"location":"user-guide/settings/thumbnails/#linear","text":"Bilinear interpolation takes a weighted average of the four neighborhood pixels to calculate its final interpolated value. The result is much smoother image than the original image. When all known pixel distances are equal, then the interpolated value is simply their sum divided by four. This technique performs interpolation in both directions, horizontal and vertical. This technique gives better result than nearest neighbor interpolation and take less computation time compared to bicubic interpolation.","title":"Linear"},{"location":"user-guide/settings/thumbnails/#cubic","text":"Catmull-Rom is a local interpolating spline developed for computer graphics purposes. Its initial use was in design of curves and surfaces, and has recently been used in several applications. Catmull-Rom splines are a family of cubic interpolating splines formulated such that the tangent at each point is calculated using the previous and next point on the spline. The results are similar to ones produced by bicubic interpolation with regards to sharpness, but the Catmull-Rom reconstruction is clearly superior in smooth signal region.","title":"Cubic"},{"location":"user-guide/settings/thumbnails/#lanczos","text":"The Lanczos interpolation function is a mathematical formula used to smoothly interpolate the value of a digital image between its samples. It maps each sample of the given image to a translated and scaled copy of the Lanczos kernel, which is a sinc function windowed by the central hump of a dilated sinc function. The sum of these translated and scaled kernels is then evaluated at the desired pixel. Lanczos interpolation has the best properties in terms of detail preservation and minimal generation of aliasing artifacts for geometric transformations not involving strong down sampling. However higher order Lanczos interpolation requires high computational time, which makes it unsuitable for most commercial software.","title":"Lanczos"},{"location":"user-guide/settings/thumbnails/#blackman","text":"Blackman is a modification of Lanczos that has better control of ringing artifacts.","title":"Blackman"},{"location":"user-guide/settings/thumbnails/#examples","text":"Original image: The same image resized from 600x400px to 150x100px using different resampling filters. From faster (lower quality) to slower (higher quality): Filter Resize result Nearest Neighbor Bilinear Sharp Bicubic Lanczos","title":"Examples"},{"location":"user-guide/settings/ui/","text":"User Interface Settings \u00b6 In Settings you can configure properties of your photo library, user interface and places. Library Settings \u00b6 Hide Private \u00b6 Photos/videos marked as private do NOT appear in Photos, Videos, Favorites, Labels, Places and shared albums in case this option is selected. Quality Filter \u00b6 When selected, non-photographic photos/videos like screenshots and low-quality photos need to be reviewed before they appear in Photos or Videos. Convert to JPEG \u00b6 JPEGs are created for RAW files during indexing in case they do not yet exist. JPEGs will be stored in the same folder next to the original. Attention In case this is disabled and there is a RAW file without a JPEG there will be no preview. Group Sequential \u00b6 Related files will be grouped when selected. Grouped files will have one primary file that is shown in our views. You find your grouped files in Stacks . User Interface Settings \u00b6 You can change the theme and language of the User interface. To make PhotoPrism suite your individual needs the following sections and functionalities can be en- or disabled. Disables sections do not appear in the main navigation. Upload \u00b6 When disabled, uploading files via upload is not possible. This might be useful when you grant others access to your PhotoPrism but do not want them to upload photos. Download \u00b6 When disabled, no files can be downloaded. Share \u00b6 When disabled, album sharing and upload to remote services like Nextcloud is not possible. Archive \u00b6 When disabled, there is no Archive. Photos that have been archived beforehand will appear in Photos/Videos. Edit \u00b6 When disabled, it is not possible to edit photo information. Files \u00b6 When disabled, there is no Files section. Moments \u00b6 When disabled, there is no Moments section. Labels \u00b6 When disabled, there is no Labels section and you cannot add or edit labels. Library \u00b6 When disabled, there is no Library section. Import \u00b6 When disabled, there is no possibility to import photos. You need to use index instead to add new photos. Logs \u00b6 When disabled, server logs are not shown. Places \u00b6 When disabled, there is no Places section. Places Settings \u00b6 You can configure a map style and the speed of the places animation.","title":"User Interface"},{"location":"user-guide/settings/ui/#user-interface-settings","text":"In Settings you can configure properties of your photo library, user interface and places.","title":"User Interface Settings"},{"location":"user-guide/settings/ui/#library-settings","text":"","title":"Library Settings"},{"location":"user-guide/settings/ui/#hide-private","text":"Photos/videos marked as private do NOT appear in Photos, Videos, Favorites, Labels, Places and shared albums in case this option is selected.","title":"Hide Private "},{"location":"user-guide/settings/ui/#quality-filter","text":"When selected, non-photographic photos/videos like screenshots and low-quality photos need to be reviewed before they appear in Photos or Videos.","title":"Quality Filter "},{"location":"user-guide/settings/ui/#convert-to-jpeg","text":"JPEGs are created for RAW files during indexing in case they do not yet exist. JPEGs will be stored in the same folder next to the original. Attention In case this is disabled and there is a RAW file without a JPEG there will be no preview.","title":"Convert to JPEG "},{"location":"user-guide/settings/ui/#group-sequential","text":"Related files will be grouped when selected. Grouped files will have one primary file that is shown in our views. You find your grouped files in Stacks .","title":"Group Sequential "},{"location":"user-guide/settings/ui/#user-interface-settings_1","text":"You can change the theme and language of the User interface. To make PhotoPrism suite your individual needs the following sections and functionalities can be en- or disabled. Disables sections do not appear in the main navigation.","title":"User Interface Settings"},{"location":"user-guide/settings/ui/#upload","text":"When disabled, uploading files via upload is not possible. This might be useful when you grant others access to your PhotoPrism but do not want them to upload photos.","title":"Upload "},{"location":"user-guide/settings/ui/#download","text":"When disabled, no files can be downloaded.","title":"Download "},{"location":"user-guide/settings/ui/#share","text":"When disabled, album sharing and upload to remote services like Nextcloud is not possible.","title":"Share "},{"location":"user-guide/settings/ui/#archive","text":"When disabled, there is no Archive. Photos that have been archived beforehand will appear in Photos/Videos.","title":"Archive "},{"location":"user-guide/settings/ui/#edit","text":"When disabled, it is not possible to edit photo information.","title":"Edit "},{"location":"user-guide/settings/ui/#files","text":"When disabled, there is no Files section.","title":"Files "},{"location":"user-guide/settings/ui/#moments","text":"When disabled, there is no Moments section.","title":"Moments "},{"location":"user-guide/settings/ui/#labels","text":"When disabled, there is no Labels section and you cannot add or edit labels.","title":"Labels "},{"location":"user-guide/settings/ui/#library","text":"When disabled, there is no Library section.","title":"Library "},{"location":"user-guide/settings/ui/#import","text":"When disabled, there is no possibility to import photos. You need to use index instead to add new photos.","title":"Import "},{"location":"user-guide/settings/ui/#logs","text":"When disabled, server logs are not shown.","title":"Logs "},{"location":"user-guide/settings/ui/#places","text":"When disabled, there is no Places section.","title":"Places "},{"location":"user-guide/settings/ui/#places-settings","text":"You can configure a map style and the speed of the places animation.","title":"Places Settings"},{"location":"user-guide/share/share/","text":"Share albums via link \u00b6 Create sharing link \u00b6 Go to Albums. Select the album you want to share. Open the context menu. Click . Click to open the link details. Set a secret and expiry date. Click save. Copy the link by clicking on it. Share it with your friends. Tip You can create additional links with different secrets and expiry dates by clicking . Delete sharing link \u00b6 Go to Albums. Click on the album cover. Click . Click .","title":"Share album via link"},{"location":"user-guide/share/share/#share-albums-via-link","text":"","title":"Share albums via link"},{"location":"user-guide/share/share/#create-sharing-link","text":"Go to Albums. Select the album you want to share. Open the context menu. Click . Click to open the link details. Set a secret and expiry date. Click save. Copy the link by clicking on it. Share it with your friends. Tip You can create additional links with different secrets and expiry dates by clicking .","title":"Create sharing link"},{"location":"user-guide/share/share/#delete-sharing-link","text":"Go to Albums. Click on the album cover. Click . Click .","title":"Delete sharing link"},{"location":"user-guide/use-cases/flickr/","text":"Export files from Flickr \u00b6 Go to https://www.flickr.com/account . Request your Flickr data. Depending on the amount of photos it can take a few days for your data to be exported. Download your data and add it to your originals directory (including json files). Start indexing .","title":"Export files from Flickr"},{"location":"user-guide/use-cases/flickr/#export-files-from-flickr","text":"Go to https://www.flickr.com/account . Request your Flickr data. Depending on the amount of photos it can take a few days for your data to be exported. Download your data and add it to your originals directory (including json files). Start indexing .","title":"Export files from Flickr"},{"location":"user-guide/use-cases/google/","text":"Export files from Google Photos \u00b6 Go to https://takeout.google.com/ . Trigger the export of your Google Photos Data. Depending on the amount of photos it can take a few days for your data to be exported. Download your data and add it to your originals directory (including json files). Start indexing .","title":"Export files from Google Photos"},{"location":"user-guide/use-cases/google/#export-files-from-google-photos","text":"Go to https://takeout.google.com/ . Trigger the export of your Google Photos Data. Depending on the amount of photos it can take a few days for your data to be exported. Download your data and add it to your originals directory (including json files). Start indexing .","title":"Export files from Google Photos"}]}